{"mappings":"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","sources":["src/router.js","src/api.js","src/utils.js","src/db.js","src/utils-jsx.js","src/runtime-jsx.js","src/main.js"],"sourcesContent":["\r\nimport { EventDispatcher } from 'rinn';\r\n\r\n/*\r\n**\tThe Router is a special module that detects local URL changes (when a hash-change occurs) and\r\n**\tforwards events to the appropriate handlers.\r\n*/\r\n\r\nconst _Router =\r\n{\r\n\tRoute: EventDispatcher.extend\r\n\t({\r\n\t\t/*\r\n\t\t**\tRegular expression for the route. This is generated from a simpler expression provided\r\n\t\t**\tin the constructor.\r\n\t\t*/\r\n\t\trouteRegex: null,\r\n\r\n\t\t/*\r\n\t\t**\tOriginal route string value.\r\n\t\t*/\r\n\t\tvalue: null,\r\n\r\n\t\t/*\r\n\t\t**\tMap with the indices and the names of each paremeter obtained from the route expression.\r\n\t\t*/\r\n\t\tparams: null,\r\n\r\n\t\t/*\r\n\t\t**\tArguments obtained from the current route (uses `params` to determine name of arguments).\r\n\t\t*/\r\n\t\targs: null,\r\n\r\n\t\t/*\r\n\t\t**\tArguments string obtained from the last route dispatch. Used to check if the arguments changed.\r\n\t\t*/\r\n\t\ts_args: null,\r\n\r\n\t\t/*\r\n\t\t**\tIndicates if the route is active because of a past positive dispatch.\r\n\t\t*/\r\n\t\tactive: false,\r\n\r\n\t\t/*\r\n\t\t**\tIndicates if the params have changed since last event. Transition from inactive to active route will always set this value to true.\r\n\t\t*/\r\n\t\tchanged: false,\r\n\r\n\t\t/*\r\n\t\t**\tConstructor of the route, the specified argument is a route expression.\r\n\t\t**\r\n\t\t**\t>> void __ctor (string route);\r\n\t\t*/\r\n\t\t__ctor: function (route)\r\n\t\t{\r\n\t\t\tthis._super.EventDispatcher.__ctor();\r\n\t\t\tthis._compileRoute (this.value = route);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tTransforms the specified route expression into a regular expression and a set of parameter\r\n\t\t**\tnames and stores them in the 'param' array.\r\n\t\t**\r\n\t\t**\t>> void _compileRoute (string route);\r\n\t\t*/\r\n\t\t_compileRoute: function (route)\r\n\t\t{\r\n\t\t\tthis.params = [];\r\n\r\n\t\t\troute = route.replace(/\\/\\*\\//g, '/.+/');\r\n\r\n\t\t\twhile (true)\r\n\t\t\t{\r\n\t\t\t\tvar m = /:([!@A-Za-z0-9_-]+)/.exec(route);\r\n\t\t\t\tif (!m) break;\r\n\t\r\n\t\t\t\troute = route.replace(m[0], '([^/]+)');\r\n\t\t\t\tthis.params.push (m[1]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.routeRegex = '^' + route.replace(/##/g, '');\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tAdds a handler to the route dispatcher. The handler can be removed later using removeHandler and\r\n\t\t**\tspecifying the same parameters. If unrouted boolean is specified the event to listen to will be\r\n\t\t**\tthe unrouted event (when the route changes and the route is not activated).\r\n\t\t**\r\n\t\t**\tvoid addHandler (handler: function, unrouted: bool, context:object=null);\r\n\t\t*/\r\n\t\taddHandler: function (handler, unrouted=false, context=null)\r\n\t\t{\r\n\t\t\tthis.addEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, context);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tRemoves a handler from the route dispatcher.\r\n\t\t**\r\n\t\t**\tvoid removeHandler (handler: function, unrouted: bool, context: object=null);\r\n\t\t*/\r\n\t\tremoveHandler: function (handler, unrouted=false, context=null)\r\n\t\t{\r\n\t\t\tthis.removeEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, context);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tVerifies if the specified route matches the internal route and if so dispatches a (depends on doUnroute parameter) \"routed\" or \"unrouted\" event with the\r\n\t\t**\tparameters obtained from the location to all attached handlers.\r\n\t\t**\r\n\t\t**\tvoid dispatch (route:string, doUnroute:bool);\r\n\t\t*/\r\n\t\tdispatch: function (route)\r\n\t\t{\r\n\t\t\tvar matches = route.match(this.routeRegex);\r\n\t\t\tif (!matches)\r\n\t\t\t{\r\n\t\t\t\tthis.s_args = null;\r\n\r\n\t\t\t\tif (this.active)\r\n\t\t\t\t\tthis.dispatchEvent ('unrouted', { route: this });\r\n\r\n\t\t\t\tthis.active = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = { route: this };\r\n\t\t\tvar str = '';\r\n\r\n\t\t\tfor (var i = 0; i < this.params.length; i++)\r\n\t\t\t{\r\n\t\t\t\targs[this.params[i]] = matches[i+1];\r\n\t\t\t\tstr += '_' + matches[i+1];\r\n\t\t\t}\r\n\r\n\t\t\tthis.changed = str != this.s_args;\r\n\t\t\tthis.s_args = str;\r\n\r\n\t\t\tthis.dispatchEvent ('routed', this.args = args);\r\n\t\t\tthis.active = true;\r\n\t\t}\r\n\t}),\r\n\r\n\t/*\r\n\t**\tMap with route objects. The key of the map is the route and the value a handler.\r\n\t*/\r\n\troutes: { },\r\n\r\n\t/*\r\n\t**\tSorted list of routes. Smaller routes are processed first than larger ones. This array stores\r\n\t**\tonly the keys to the Router.routes map.\r\n\t*/\r\n\tsortedRoutes: [ ],\r\n\r\n\t/*\r\n\t**\tIndicates the number of times the onLocationChanged handler should ignore the hash change event.\r\n\t*/\r\n\tignoreHashChangeEvent: 0,\r\n\r\n\t/*\r\n\t**\tCurrent relative location (everything after the location hash symbol).\r\n\t*/\r\n\tlocation: '',\r\n\r\n\t/*\r\n\t**\tCurrent relative location as an array of elements (obtained by splitting the location by slash).\r\n\t*/\r\n\targs: [],\r\n\r\n\t/*\r\n\t**\tInitializes the router module. Ensure to call `refresh` once to force a hashchange when the page loads.\r\n\t*/\r\n\tinit: function ()\r\n\t{\r\n\t\tif (this.alreadyAttached)\r\n\t\t\treturn;\r\n\r\n\t\tthis.alreadyAttached = true;\r\n\r\n\t\tif ('onhashchange' in globalThis)\r\n\t\t\tglobalThis.onhashchange = this.onLocationChanged.bind(this);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRefreshes the current route by forcing a hashchange event.\r\n\t*/\r\n\trefresh: function ()\r\n\t{\r\n\t\tthis.onLocationChanged();\r\n\t},\r\n\r\n\t/*\r\n\t**\tChanges the current location and optionally prevents a trigger of the hashchange event.\r\n\t*/\r\n\tsetRoute: function (route, silent)\r\n\t{\r\n\t\tvar location = this.realLocation (route);\r\n\t\tif (location == this.location) return;\r\n\r\n\t\tif (silent) this.ignoreHashChangeEvent++;\r\n\t\tglobalThis.location.hash = location;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds the specified route to the routing map. When the specified route is detected, the `onRoute` handler will be called, and then\r\n\t**\twhen the route exits `onUnroute` will be called.\r\n\t*/\r\n\taddRoute: function (route, onRoute, onUnroute=null)\r\n\t{\r\n\t\tif (!this.routes[route])\r\n\t\t{\r\n\t\t\tthis.routes[route] = new this.Route (route);\r\n\t\t\tthis.sortedRoutes.push (route);\r\n\r\n\t\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (onUnroute !== null)\r\n\t\t{\r\n\t\t\tthis.routes[route].addHandler (onRoute, false);\r\n\t\t\tthis.routes[route].addHandler (onUnroute, true);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.routes[route].addHandler (onRoute, false);\r\n\r\n\t\treturn this.routes[route];\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the Route object for the specified route.\r\n\t*/\r\n\tgetRoute: function (route)\r\n\t{\r\n\t\tif (!this.routes[route])\r\n\t\t{\r\n\t\t\tthis.routes[route] = new this.Route (route);\r\n\t\t\tthis.sortedRoutes.push (route);\r\n\r\n\t\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.routes[route];\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds the specified routes to the routing map. The routes map should contain the route expression\r\n\t**\tin the key of the map and a handler function in the value.\r\n\t*/\r\n\taddRoutes: function (routes)\r\n\t{\r\n\t\tfor (var i in routes)\r\n\t\t{\r\n\t\t\tif (!this.routes[i])\r\n\t\t\t{\r\n\t\t\t\tthis.routes[i] = new this.Route (i);\r\n\t\t\t\tthis.sortedRoutes.push (i);\r\n\t\t\t}\r\n\r\n\t\t\tthis.routes[i].addHandler (routes[i], false);\r\n\t\t}\r\n\r\n\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t});\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified route from the routing map.\r\n\t*/\r\n\tremoveRoute: function (route, onRoute, onUnroute)\r\n\t{\r\n\t\tif (!this.routes[route]) return;\r\n\r\n\t\tif (onUnroute !== undefined)\r\n\t\t{\r\n\t\t\tthis.routes[route].removeHandler (onRoute, false);\r\n\t\t\tthis.routes[route].removeHandler (onUnroute, true);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.routes[route].removeHandler (onRoute);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified routes from the routing map. The routes map should contain the route\r\n\t**\texpression in the key of the map and a handler function in the value.\r\n\t*/\r\n\tremoveRoutes: function (routes)\r\n\t{\r\n\t\tfor (var i in routes)\r\n\t\t{\r\n\t\t\tif (!this.routes[i]) continue;\r\n\r\n\t\t\tthis.routes[i].removeHandler (routes[i]);\r\n\t\t}\r\n\t},\r\n\r\n\t/*\r\n\t**\tGiven a formatted location and a previous one it will return the correct real location.\r\n\t*/\r\n\trealLocation: function (cLocation, pLocation)\r\n\t{\r\n\t\tif (!pLocation) pLocation = this.location;\r\n\t\tif (!pLocation) pLocation = ' ';\r\n\r\n\t\tvar state = 0, i = 0, j = 0, k;\r\n\t\tvar rLocation = '';\r\n\r\n\t\twhile (state != -1 && i < cLocation.length && j < pLocation.length)\r\n\t\t{\r\n\t\t\tswitch (state)\r\n\t\t\t{\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tif (cLocation.substr(i++, 1) == '*')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (cLocation.substr(i-1, 1) != pLocation.substr(j++, 1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += cLocation.substr(i-1);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j-1, 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif (cLocation.substr(i, 1) == '*')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate = 3;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tk = pLocation.indexOf(cLocation.substr(i, 1), j);\r\n\t\t\t\t\tif (k == -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += pLocation.substr(j) + cLocation.substr(i);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j, k-j);\r\n\r\n\t\t\t\t\tstate = 0;\r\n\t\t\t\t\tj = k;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tk = pLocation.lastIndexOf(cLocation.substr(i, 1));\r\n\t\t\t\t\tif (k == -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += cLocation.substr(i);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j, k-j);\r\n\r\n\t\t\t\t\tstate = 0;\r\n\t\t\t\t\tj = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state != -1)\r\n\t\t\trLocation += cLocation.substr(i);\r\n\r\n\t\treturn rLocation.trim();\r\n\t},\r\n\r\n\t/*\r\n\t**\tEvent handler called when the location hash changes.\r\n\t*/\r\n\tonLocationChanged: function ()\r\n\t{\r\n\t\tvar cLocation = location.hash.substr(1);\r\n\t\tvar rLocation = this.realLocation (cLocation);\r\n\r\n\t\tif (cLocation != rLocation)\r\n\t\t{\r\n\t\t\tglobalThis.location.replace('#' + rLocation);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.location = cLocation;\r\n\t\tthis.args = this.location.split ('/');\r\n\r\n\t\tif (this.ignoreHashChangeEvent > 0)\r\n\t\t{\r\n\t\t\tthis.ignoreHashChangeEvent--;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.sortedRoutes.length; i++)\r\n\t\t\tthis.routes[this.sortedRoutes[i]].dispatch (this.location);\r\n\t},\r\n\r\n\t/*\r\n\t**\tNavigates to the given hash-based URL.\r\n\t*/\r\n\tnavigate: function (location, replace=false)\r\n\t{\r\n\t\tlocation = this.realLocation(location);\r\n\r\n\t\tif (globalThis.location.hash == '#'+location)\r\n\t\t{\r\n\t\t\tthis.refresh();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (replace)\r\n\t\t\tglobalThis.location.replace('#'+location);\r\n\t\telse\r\n\t\t\tglobalThis.location.hash = location;\r\n\t}\r\n};\r\n\r\n_Router.init();\r\n\r\nexport default _Router;\r\n","\r\nimport base64 from 'base-64';\r\n\r\n/**\r\n * API interface utility functions.\r\n */\r\n\r\nconst Api =\r\n{\r\n\t/**\r\n\t * Flags constants.\r\n\t */\r\n\tREQUEST_PACKAGE_SUPPORTED:\t0x01,\r\n\tREQ64_SUPPORTED: \t\t\t0x02,\r\n\tJSON_RESPONSE_SUPPORTED: \t0x04,\r\n\tXML_RESPONSE_SUPPORTED: \t0x08,\r\n\tINCLUDE_CREDENTIALS:\t\t0x10,\r\n\tUNIQUE_STAMP:\t\t\t\t0x20,\r\n\r\n\t/**\r\n\t * Target URL for all the API requests. Set by calling `setEndPoint`.\r\n\t */\r\n\tapiUrl: \"/api\",\r\n\r\n\t/**\r\n\t * Capabilities flag.\r\n\t */\r\n\tflags: 0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20,\r\n\r\n\t/**\r\n\t * Indicates if all request data will be packed into a req64 parameter instead of individual fields.\r\n\t */\r\n\tuseReq64: false,\r\n\r\n\t/**\r\n\t * Number of retries to execute each API call before giving up and invoking error handlers.\r\n\t */\r\n\tretries: 0,\r\n\r\n\t/**\r\n\t * Headers for the request.\r\n\t */\r\n\theaders: { },\r\n\r\n\t/**\r\n\t * Level of the current request. Used to detect nested requests.\r\n\t */\r\n\t_requestLevel: 0,\r\n\r\n\t/**\r\n\t * Indicates if all API calls should be bundled in a request package. Activated by calling the packageBegin() function and finished with packageEnd().\r\n\t */\r\n\t_requestPackage: 0,\r\n\r\n\t/**\r\n\t * When in package-mode, this contains the package data to be sent upon a call to packageEnd().\r\n\t */\r\n\t_packageData: [],\r\n\r\n\t/**\r\n\t * Sets the API end-point URL address.\r\n\t */\r\n\tsetEndPoint: function (apiUrl, flags=null)\r\n\t{\r\n\t\tthis.apiUrl = apiUrl;\r\n\t\tthis.flags = flags ?? this.flags;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Overridable filter that processes the response from the server and returns true if it was successful. The `res` parameter indicates the response data, and `req` the request data.\r\n\t */\r\n\tresponseFilter: function (res, req)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts \"package-mode\" (using the `rpkg` field). Any API calls after this will be bundled together.\r\n\t */\r\n\tpackageBegin: function ()\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t\treturn;\r\n\r\n\t\tthis._requestPackage++;\r\n\t},\r\n\r\n\t/**\r\n\t * Finishes \"package-mode\" and a single API request with the currently constructed package will be sent.\r\n\t */\r\n\tpackageEnd: function (callback)\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t\treturn;\r\n\r\n\t\tif (!this._requestPackage)\r\n\t\t\treturn;\r\n\r\n\t\tif (--this._requestPackage)\r\n\t\t\treturn;\r\n\r\n\t\tthis.packageSend(callback);\r\n\t},\r\n\r\n\t/**\r\n\t * Starts package-mode, executes the callback and finishes package-mode. Therefore any requests made by the callback will be packed together.\r\n\t */\r\n\tpackRequests: function (callback, responseCallback=null)\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.packageBegin();\r\n\t\tcallback();\r\n\t\tthis.packageEnd(responseCallback);\r\n\t},\r\n\r\n\t/**\r\n\t * Sends a single API request with the currently constructed package and maintains package-mode.\r\n\t */\r\n\tpackageSend: function (callback)\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t\treturn;\r\n\r\n\t\tif (!this._packageData.length)\r\n\t\t\treturn;\r\n\r\n\t\tlet _packageData = this._packageData;\r\n\t\tthis._packageData = [];\r\n\r\n\t\tvar rpkg = \"\";\r\n\r\n\t\tfor (var i = 0; i < _packageData.length; i++)\r\n\t\t\trpkg += \"r\"+i+\",\"+base64.encode(this.encodeParams(_packageData[i][2]))+\";\";\r\n\r\n\t\tthis._showProgress();\r\n\r\n\t\tthis.apiCall (\r\n\t\t\t{ rpkg: rpkg },\r\n\r\n\t\t\t(res, req) =>\r\n\t\t\t{\r\n\t\t\t\tthis._hideProgress();\r\n\r\n\t\t\t\tfor (let i = 0; i < _packageData.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar response = res[\"r\"+i];\r\n\t\t\t\t\t\tif (!response)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (_packageData[i][0] != null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (this.responseFilter (response, _packageData[i][2]))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t_packageData[i][0] (response, _packageData[i][2]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (callback) callback();\r\n\t\t\t},\r\n\r\n\t\t\t(req) =>\r\n\t\t\t{\r\n\t\t\t\tthis._hideProgress();\r\n\r\n\t\t\t\tfor (let i = 0; i < _packageData.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t * Adds CSS class 'busy' to the HTML root element, works only if running inside a browser.\r\n\t */\r\n\t_showProgress: function ()\r\n\t{\r\n\t\tif ('document' in global) {\r\n\t\t\tthis._requestLevel++;\r\n\t\t\tif (this._requestLevel > 0) global.document.documentElement.classList.add('busy');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the 'busy' CSS class from the HTML element.\r\n\t */\r\n\t_hideProgress: function ()\r\n\t{\r\n\t\tif ('document' in global)\r\n\t\t{\r\n\t\t\tthis._requestLevel--;\r\n\t\t\tif (this._requestLevel) return;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (this._requestLevel === 0)\r\n\t\t\t\t\tglobal.document.documentElement.classList.remove('busy');\r\n\t\t\t}, 250);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sets an HTTP header.\r\n\t */\r\n\theader: function (name, value)\r\n\t{\r\n\t\tif (value === null)\r\n\t\t\tdelete this.headers[name];\r\n\t\telse\r\n\t\t\tthis.headers[name] = value;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a parameter string for a GET request given an object with fields.\r\n\t */\r\n\tencodeParams: function (obj)\r\n\t{\r\n\t\tlet s = [];\r\n\r\n\t\tif (obj instanceof FormData)\r\n\t\t{\r\n\t\t\tfor (let i of obj.entries())\r\n\t\t\t\ts.push(encodeURIComponent(i[0]) + '=' + encodeURIComponent(i[1]));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (let i in obj)\r\n\t\t\t\ts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\r\n\t\t}\r\n\r\n\t\treturn s.join('&');\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a URL given a relative or absolute URL.\r\n\t */\r\n\tgetUrl: function (url)\r\n\t{\r\n\t\tif (url.indexOf('//') !== -1)\r\n\t\t\treturn url;\r\n\r\n\t\treturn this.apiUrl + url;\r\n\t},\r\n\r\n\t/**\r\n\t * Appends a parameter to the URL.\r\n\t */\r\n\tappendParam: function (url, param)\r\n\t{\r\n\t\treturn url + (url.indexOf('?') == -1 ? '?' : '&') + param;\r\n\t},\r\n\r\n\t/**\r\n\t * Executes an API call to the URL stored in the `apiUrl` property. By default `httpMethod` is \"auto\", which will determine the best depending on the data to\r\n\t * be sent. Any connection error will be reported to the `failure` callback, and similarly any success to the `success` callback. The `params` object can be\r\n\t * a FormData object or just a regular object.\r\n\t */\r\n\tapiCall: function (params, success, failure, httpMethod=null, retries=null, relativeUrl='')\r\n\t{\r\n\t\tlet url = this.getUrl(relativeUrl);\r\n\r\n\t\tif (this.flags & Api.UNIQUE_STAMP)\r\n\t\t\turl = this.appendParam(url, '_='+Date.now());\r\n\r\n\t\thttpMethod = httpMethod ? httpMethod.toUpperCase() : null;\r\n\t\tif (httpMethod != 'GET' && httpMethod != 'POST')\r\n\t\t\thttpMethod = 'auto';\r\n\r\n\t\tif (retries === null)\r\n\t\t\tretries = this.retries;\r\n\r\n\t\tif (this._requestPackage && (this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t{\r\n\t\t\tif (!(params instanceof FormData))\r\n\t\t\t\tparams = {...params};\r\n\r\n\t\t\tthis._packageData.push([success, failure, params]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._showProgress();\r\n\r\n\t\tlet data = params;\r\n\r\n\t\tlet options =\r\n\t\t{\r\n\t\t\tmode: 'cors',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'text/html,application/xhtml+xml,application/xml,application/json;q=0.9',\r\n\t\t\t\t...this.headers\r\n\t\t\t},\r\n\t\t\tmethod: httpMethod,\r\n\t\t\tbody: null,\r\n\t\t\tmultipart: false\r\n\t\t};\r\n\r\n\t\tif (this.flags & Api.INCLUDE_CREDENTIALS)\r\n\t\t\toptions.credentials = 'include';\r\n\r\n\t\tif (typeof(data) !== 'string' && !(data instanceof Blob))\r\n\t\t{\r\n\t\t\tif (!(data instanceof FormData))\r\n\t\t\t{\r\n\t\t\t\tdata = new FormData();\r\n\r\n\t\t\t\tfor (let i in params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ((params[i] instanceof File) || (params[i] instanceof Blob))\r\n\t\t\t\t\t\tdata.append(i, params[i], params[i].name);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdata.append(i, params[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i of data.entries())\r\n\t\t\t{\r\n\t\t\t\tif ((i[1] instanceof File) || (i[1] instanceof Blob))\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.method = 'POST';\r\n\t\t\t\t\toptions.multipart = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.useReq64 && (this.flags & Api.REQ64_SUPPORTED) && !options.multipart)\r\n\t\t\t{\r\n\t\t\t\tlet tmp = new FormData();\r\n\t\t\t\ttmp.append('req64', base64.encode(this.encodeParams(data)));\r\n\t\t\t\tdata = tmp;\r\n\t\t\t}\r\n\r\n\t\t\tif (options.method == 'auto')\r\n\t\t\t{\r\n\t\t\t\tlet l = 0;\r\n\r\n\t\t\t\toptions.method = 'GET';\r\n\r\n\t\t\t\tfor (let i of data.entries())\r\n\t\t\t\t{\r\n\t\t\t\t\tl += i[0].length + i[1].length + 2;\r\n\r\n\t\t\t\t\tif (l > 960)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toptions.method = 'POST';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\r\n\t\t\tif (options.method == 'GET')\r\n\t\t\t{\r\n\t\t\t\turl = this.appendParam(url, this.encodeParams(data));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (!options.multipart)\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\t\t\t\t\toptions.body = this.encodeParams(data);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toptions.body = data;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (typeof(data) === 'string')\r\n\t\t\t{\r\n\t\t\t\tif (data[0] === '<')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (data.endsWith('</soap:Envelope>'))\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/soap+xml';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/xml';\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (data[0] === '{')\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/json';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/octet-stream';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\toptions.headers['Content-Type'] = data.type;\r\n\r\n\t\t\toptions.method = 'POST';\r\n\t\t\toptions.body = data;\r\n\t\t}\r\n\r\n\t\tglobal.fetch(url, options)\r\n\t\t.then(result => this.decodeResult(result))\r\n\t\t.then(result =>\r\n\t\t{\r\n\t\t\tthis._hideProgress();\r\n\t\t\tif (!success) return\r\n\r\n\t\t\tif (this.responseFilter(result, params)) {\r\n\t\t\t\ttry { success(result, params); } catch(e) { }\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err =>\r\n\t\t{\r\n\t\t\tthis._hideProgress();\r\n\r\n\t\t\tif (retries == 0) {\r\n\t\t\t\tif (failure) failure(params);\r\n\t\t\t} else {\r\n\t\t\t\tthis.apiCall (data, success, failure, httpMethod, retries-1, relativeUrl);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Decodes a result obtained using fetch into a usable object.\r\n\t */\r\n\tdecodeResult: function (result)\r\n\t{\r\n\t\tlet type = result.headers.get('content-type').split(';')[0].toLowerCase();\r\n\r\n\t\tif ((this.flags & Api.JSON_RESPONSE_SUPPORTED) && type.indexOf('json') !== -1)\r\n\t\t\treturn result.json();\r\n\r\n\t\tif ((this.flags & Api.XML_RESPONSE_SUPPORTED) && type.indexOf('xml') !== -1)\r\n\t\t{\r\n\t\t\treturn new Promise((resolve, reject) =>\r\n\t\t\t{\r\n\t\t\t\tresult.text().then(data =>\r\n\t\t\t\t{\r\n\t\t\t\t\tdata = (new DOMParser).parseFromString(data, 'text/xml');\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(reject);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result.blob();\r\n\t},\r\n\r\n\t/**\r\n\t * Makes a blob with the specified data and type.\r\n\t */\r\n\tgetBlob: function (data, type)\r\n\t{\r\n\t\treturn new Blob ([data], { type: type });\r\n\t},\r\n\r\n\t/**\r\n\t * Provided access to the base64 module to encode/decode data.\r\n\t */\r\n\tbase64:\r\n\t{\r\n\t\tencode: function (value)\r\n\t\t{\r\n\t\t\treturn base64.encode(value);\r\n\t\t},\r\n\r\n\t\tdecode: function (value)\r\n\t\t{\r\n\t\t\treturn base64.decode(value);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Executes a POST API call.\r\n\t */\r\n\tpost: function (params, success=null, failure=null)\r\n\t{\r\n\t\treturn this.apiCall(params, success, failure, 'POST');\r\n\t},\r\n\r\n\t/**\r\n\t * Executes a GET API call.\r\n\t */\r\n\tget: function (params, success=null, failure=null)\r\n\t{\r\n\t\treturn this.apiCall(params, success, failure, 'GET');\r\n\t},\r\n\r\n\t/**\r\n\t * Executes an automatic API call, returns a promise.\r\n\t */\r\n\tfetch: function (url, params=null)\r\n\t{\r\n\t\tif (params === null)\r\n\t\t{\r\n\t\t\tif (typeof(url) !== 'string')\r\n\t\t\t{\r\n\t\t\t\tparams = url;\r\n\t\t\t\turl = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.apiCall(params, resolve, reject, null, null, url);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Builds a URL from the given data.\r\n\t */\r\n\tmakeUrl: function (url, params=null)\r\n\t{\r\n\t\tif (params === null)\r\n\t\t{\r\n\t\t\tif (typeof(url) !== 'string')\r\n\t\t\t{\r\n\t\t\t\tparams = url;\r\n\t\t\t\turl = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.appendParam(this.getUrl(url), this.encodeParams(params));\r\n\t}\r\n};\r\n\r\nexport default Api;\r\n","\nconst Utils =\n{\n\t/**\n\t**\tForces the browser to show a download dialog.\n\t*/\n\tshowDownload: function (filename, dataUrl)\n\t{\n\t\tvar link = document.createElement(\"a\");\n\t\tlink.href = dataUrl;\n\n\t\tlink.style.display = 'none';\n\t\tlink.download = filename;\n\t\tlink.target = \"_blank\";\n\n\t\tdocument.body.appendChild(link);\n\t\tlink.click();\n\t\tdocument.body.removeChild(link);\n\t},\n\n\t/**\n\t**\tForces the browser to show a file selection dialog.\n\t*/\n\tshowFilePicker: function (allowMultiple, accept, callback)\n\t{\n\t\tvar input = document.createElement(\"input\");\n\n\t\tinput.type = \"file\";\n\t\tinput.accept = accept;\n\t\tinput.style.display = 'none';\n\t\tinput.multiple = allowMultiple;\n\n\t\tdocument.body.appendChild(input);\n\n\t\tinput.onchange = function () {\n\t\t\tcallback(input.files);\n\t\t};\n\n\t\tdocument.body.onfocus = function ()\n\t\t{\n\t\t\tdocument.body.onfocus = null;\n\t\t\tdocument.body.removeChild(input);\n\t\t};\n\n\t\tinput.click();\n\t},\n\n\t/**\n\t**\tLoads a URL using FileReader and returns as a dataURL.\n\t*/\n\tloadAsDataUrl: function (file, callback)\n\t{\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\t\t\tcallback (e.target.result, null);\n\t\t};\n\n\t\treader.onerror = function(e) {\n\t\t\tcallback (null, e);\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\t},\n\n\t/**\n\t**\tLoads a URL using FileReader and returns as text.\n\t*/\n\tloadAsText: function (file, callback)\n\t{\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\t\t\tcallback (e.target.result);\n\t\t};\n\n\t\treader.readAsText(file);\n\t},\n\n\t/**\n\t**\tLoads a URL using FileReader and returns as an array buffer.\n\t*/\n\tloadAsArrayBuffer: function (file, callback)\n\t{\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\t\t\tcallback (e.target.result);\n\t\t};\n\n\t\treader.readAsArrayBuffer(file);\n\t},\n\n\t/**\n\t**\tLoads an array of URLs using FileReader and returns them as data url.\n\t*/\n\tloadAllAsDataUrl: function (fileList, callback)\n\t{\n\t\tvar result = [];\n\n\t\tif (!fileList || !fileList.length)\n\t\t{\n\t\t\tcallback(result);\n\t\t\treturn;\n\t\t}\n\n\t\tvar loadNext = function (i)\n\t\t{\n\t\t\tif (i == fileList.length)\n\t\t\t{\n\t\t\t\tcallback(result);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tUtils.loadAsDataUrl (fileList[i], function(url, err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresult.push({ name: fileList[i].name, size: fileList[i].size, url: url });\n\t\t\t\t}\n\t\t\t\tloadNext(i+1);\n\t\t\t});\n\t\t};\n\n\t\tloadNext(0);\n\t},\n\n\t/*\n\t**\tLoads a URL as an image.\n\t*/\n\tloadImageFromUrl: function (url, callback)\n\t{\n\t\tlet image = new Image();\n\t\timage.onload = () => callback(image);\n\t\timage.onerror = () => callback(null);\n\t\timage.src = url;\n\t}\n};\n\nexport default Utils;\n","\nimport { Rinn } from 'rinn';\n\n//!class db\n\nexport default\n{\n\t/**\n\t * Database connection.\n\t */\n\tdb: null,\n\n\t/**\n\t * Initializes the database connection.\n\t * @param {string} dbName\n\t * @param {number} version\n\t * @param {(db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void} upgradeCallback\n\t * @returns {Promise<void>}\n\t * !static init (dbName: string, version: number, upgradeCallback: (db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void) : Promise<void>;\n\t */\n\tinit: function (dbName, version, upgradeCallback)\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tif (!global.indexedDB)\n\t\t\t{\n\t\t\t\treject ('IndexedDB is not available in your system.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet req = indexedDB.open(dbName, version);\n\t\t\treq.onerror = (evt) =>\n\t\t\t{\n\t\t\t\tlet err = evt.target.error + '';\n\n\t\t\t\tif (err.indexOf('AbortError') !== -1)\n\t\t\t\t\terr = \"\\n\" + req.message;\n\n\t\t\t\treject('Unable to open database: ' + err);\n\t\t\t\treturn;\n\t\t\t};\n\n\t\t\treq.onupgradeneeded = async (evt) =>\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tconst db = evt.target.result;\n\t\t\t\t\tconst txn = evt.target.transaction;\n\n\t\t\t\t\tif (evt.oldVersion < 1)\n\t\t\t\t\t\tdb.createObjectStore('system', { keyPath: ['name'] });\n\n\t\t\t\t\tawait upgradeCallback(db, txn, evt.oldVersion);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\treq.message = e.message;\n\t\t\t\t\treq.transaction.abort();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treq.onsuccess = async (evt) =>\n\t\t\t{\n\t\t\t\tthis.db = evt.target.result;\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Ensures the database is ready to be used, or throws an exception.\n\t */\n\tensureConnected: function()\n\t{\n\t\tif (!this.db)\n\t\t\talert('Error: Database not initialized.');\n\t},\n \n\t/**\n\t * Returns an index object for later use with methods that accept an IDBIndex in the `storeName` parameter.\n\t * @param {string} storeName\n\t * @param {string} indexName\n\t * @returns {IDBIndex}\n\t * !static index (storeName: string, indexName: string) : IDBIndex;\n\t */\n\tindex: function (storeName, indexName)\n\t{\n\t\tthis.ensureConnected();\n\n\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\n\t\tlet index = store.index(indexName);\n\t\tif (!index) throw new Error ('Unable to find index `' + indexName + '` in store ' + storeName);\n\n\t\treturn index;\n\t},\n\n\t/**\n\t * Runs a callback for each record in a data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} id\n\t * @param { (value:object, cursor:IDBCursor) => Promise<boolean> } callback\n\t * @returns {Promise<void>}\n\t * !static forEach (storeName: string|IDBIndex|IDBObjectStore, id: string, callback: (value:object, cursor:IDBCursor) => Promise<boolean>) : Promise<void>;\n\t */\n\tforEach: function (storeName, id, callback)\n\t{\n\t\tthis.ensureConnected();\n\n\t\tif (typeof(id) === 'function')\n\t\t{\n\t\t\tcallback = id;\n\t\t\tid = null;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) =>\n\t\t{\n\t\t\tlet request, store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tif (id === null)\n\t\t\t\trequest = store.openCursor();\n\t\t\telse\n\t\t\t\trequest = store.openCursor(id);\n\n\t\t\trequest.onsuccess = async (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet result = await callback (cursor.value, cursor);\n\t\t\t\tif (result === false)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns the count of all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @returns {Promise<number>}\n\t * !static count (storeName: string|IDBIndex|IDBObjectStore) : Promise<number>;\n\t */\n\tcount: function (storeName)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.count();\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<object>>}\n\t * !static getAll (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */\n\tgetAll: function (storeName, filter=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.getAll(filter);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns all keys from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<string|number|Array<string|number>>>}\n\t * !static getAllKeys (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */\n\tgetAllKeys: function (storeName, filter=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.getAllKeys(filter);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Loads a list of records having unique values from the specified data store and returns the entire object or just the specified field.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} [field]\n\t * @returns {Promise<Array<number|string|object>>}\n\t * !static getAllUnique (storeName: string|IDBIndex|IDBObjectStore) : Promise<Array<number|string|object>>;\n\t */\n\tgetAllUnique: function (storeName, fieldName=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.openCursor(null, 'nextunique');\n\t\t\tlet list = [];\n\n\t\t\trequest.onsuccess = (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve(list);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlist.push(fieldName ? cursor.value[fieldName] : cursor.value);\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns a single record from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<object>}\n\t * !static get (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<object>;\n\t */\n\tget: function (storeName, id)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.get(id);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result || null);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\n\t/**\n\t * Adds or overwrites a record in the specified data store (data must include the primary key).\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static put (storeName: string, data: object) : Promise<void>;\n\t */\n\tput: function (storeName, data)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\tlet request = store.put(data);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns a variable from the system table.\n\t * @param {string} name - Name of the property to read.\n\t * @param {boolean} full - When `true` the entire object will be returned.\n\t * @returns {any}\n\t * !static sysGet (name: string, full?: boolean) : any;\n\t */\n\tsysGet: async function (name, full=false)\n\t{\n\t\tlet data = await this.get('system', [name]);\n\t\treturn data ? (full ? data : data.value) : null;\n\t},\n\n\t/**\n\t * Writes a variable to the system table.\n\t * @param {string} name - Name of the property to write.\n\t * @param {any} value - Value to write.\n\t * @param {boolean} full - When `true` the entire value will be written as-is.\n\t * @returns {void}\n\t * !static sysPut (name: string, value: any, full?: boolean) : void;\n\t */\n\tsysPut: async function (name, value, full=false)\n\t{\n\t\tif (full)\n\t\t{\n\t\t\tvalue.name = name;\n\t\t\tawait this.put('system', value);\n\t\t}\n\t\telse\n\t\t\tawait this.put('system', { name: name, value: value });\n\t},\n\n\t/**\n\t * Returns a single record from the specified data store that matches the `partial` object and does NOT match the `notPartial` object.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {object} [partial]\n\t * @param {object} [notPartial]\n\t * @returns {Promise<object>}\n\t * !static findOne (storeName: string|IDBIndex|IDBObjectStore, partial?: object, notPartial?: object) : Promise<object>;\n\t */\n\tfindOne: function (storeName, partial=null, notPartial=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.openCursor();\n\n\t\t\trequest.onsuccess = (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve(null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (partial === null || Rinn.partialCompare(cursor.value, partial))\n\t\t\t\t{\n\t\t\t\t\tif (notPartial !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Rinn.partialCompare(cursor.value, notPartial))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor.continue();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(cursor.value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Deletes a record from the specified data store.\n\t * @param {string} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static delete (storeName: string, id: string|number|Array<string|number>) : Promise<void>;\n\t */\n\tdelete: function (storeName, id)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\n\t\t\tlet request = store.delete(id);\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Deletes all items in the specified store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static deleteAll (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<void>;\n\t */\n\tdeleteAll: function (storeName, id=null)\n\t{\n\t\treturn this.forEach(storeName, id, async (value, cursor) => {\n\t\t\tawait cursor.delete();\n\t\t});\n\t},\n\n\t/**\n\t * Inserts a new record in the specified data store.\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static insert (storeName: string, data: object) : Promise<void>;\n\t */\n\tinsert: function (storeName, data)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\tlet request = store.add(data);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t}\n};\n\n//!/class\n","\n/**\n * Node for a linked list.\n */\nexport function Node (value)\n{\n\tthis.value = null;\n\tthis.next = null;\n\tthis.prev = null;\n\tthis.list = null;\n}\n\n/**\n * Creates a new node.\n * @param {any} value \n * @returns {Node}\n */\nNode.create = function (value)\n{\n\tlet node = new Node();\n\tnode.value = value;\n\treturn node;\n}\n\n/**\n * Unlinks and frees the node. Returns the node's value.\n * @returns {any}\n */\nNode.prototype.free = function ()\n{\n\tlet value = this.value;\n\tthis.unlink();\n\n\tthis.next = this.prev = null;\n\tthis.list = null;\n\n\tthis.value = null;\n\treturn value;\n}\n\n/**\n * Links the node after the given reference.\n * @param {Node} ref\n * @param {List} list\n * @returns {Node}\n */\nNode.prototype.linkAfter = function (ref, list)\n{\n\tthis.next = ref !== null ? ref.next : null;\n\tthis.prev = ref;\n\tthis.list = list;\n\n\tif (ref !== null) {\n\t\tif (ref.next !== null) ref.next.prev = this;\n\t\tref.next = this;\n\t}\n\n\tif (list.tail === ref)\n\t\tlist.tail = this;\n\n\tif (list.head === null)\n\t\tlist.head = this;\n\n\tlist.length++;\n\treturn this;\n}\n\n/**\n * Links the node before the given reference.\n * @param {Node} ref\n * @param {List} list\n * @returns {Node}\n */\nNode.prototype.linkBefore = function (ref, list)\n{\n\tthis.prev = ref !== null ? ref.prev : null;\n\tthis.next = ref;\n\tthis.list = list;\n\n\tif (ref !== null) {\n\t\tif (ref.prev !== null) ref.prev.next = this;\n\t\tref.prev = this;\n\t}\n\n\tif (list.head === ref)\n\t\tlist.head = this;\n\n\tif (list.tail === null)\n\t\tlist.tail = this;\n\n\tlist.length++;\n\treturn this;\n}\n\n/**\n * Unlinks the node by linking the `prev` and `next` nodes together (when available).\n * @returns {Node}\n */\nNode.prototype.unlink = function ()\n{\n\tif (this.prev) this.prev.next = this.next;\n\tif (this.next) this.next.prev = this.prev;\n\n\tif (this.list.head === this) this.list.head = this.next;\n\tif (this.list.tail === this) this.list.tail = this.prev;\n\n\tthis.list.length--;\n\treturn this;\n}\n\n/**\n * Doubly linked list.\n */\nexport function List ()\n{\n\tthis.head = null;\n\tthis.tail = null;\n\tthis.length = 0;\n}\n\n/**\n * Creates a new linked list.\n * @returns {List}\n */\nList.create = function()\n{\n\treturn new List();\n}\n\n/**\n * Frees the list and removes all nodes.\n */\nList.prototype.free = function()\n{\n\tthis.clear();\n}\n\n/**\n * Clears the list by freeing all nodes. Values are preserved.\n * @returns {List}\n */\nList.prototype.reset = function()\n{\n\twhile (this.head !== null)\n\t\tthis.head.free();\n\n\treturn this;\n}\n\n/**\n * Clears the list by freeing all nodes and values.\n * @returns {List}\n */\nList.prototype.clear = function()\n{\n\twhile (this.head !== null)\n\t{\n\t\tif (this.head.value !== null)\n\t\t\tthis.head.value.free();\n\n\t\tthis.head.free();\n\t}\n\n\treturn this;\n}\n\n/**\n * Returns the value at the head of the list.\n * @returns {any}\n */\nList.prototype.first = function ()\n{\n\treturn this.head !== null ? this.head.value : null;\n}\n\n/**\n * Returns the value at the tail of the list.\n * @returns {any}\n */\nList.prototype.last = function ()\n{\n\treturn this.tail !== null ? this.tail.value : null;\n}\n\n/**\n * Finds an specific value and returns the node, or `null` if not found.\n * @returns {Node}\n */\nList.prototype.find = function (value)\n{\n\tfor (let i = this.head; i !== null; i = i.next)\n\t{\n\t\tif (i.value === value)\n\t\t\treturn i;\n\t}\n\n\treturn null;\n}\n\n/**\n * Inserts a value at the head of the list.\n * @param {any} value\n * @returns {any}\n */\nList.prototype.unshift = function (value)\n{\n\tNode.create(value).linkBefore(this.head, this);\n\treturn value;\n}\n\n/**\n * Removes a value from the head of the list, or `null` if the list is empty.\n * @returns {any}\n */\nList.prototype.shift = function ()\n{\n\treturn this.head === null ? null : this.head.free();\n}\n\n/**\n * Inserts a value at the tail of the list.\n * @param {any} value\n * @returns {any}\n */\nList.prototype.push = function (value)\n{\n\tNode.create(value).linkAfter(this.tail, this);\n\treturn value;\n}\n\n/**\n * Removes a value from the tail of the list.\n * @returns {any}\n */\nList.prototype.pop = function ()\n{\n\treturn this.tail === null ? null : this.tail.free();\n}\n","\nimport { List } from './utils-jsx';\n\n/**\n */\nlet activeWatcher = null;\nlet signalsPropagating = false;\n\n/**\n */\nlet propagationQueue = List.create();\nlet propagationMicroTask = false;\n\n/**\n */\nfunction propagate (signal)\n{\n\tif (signal.isPropagating === true)\n\t\treturn;\n\n\tsignal.isPropagating = true;\n\n\tlet currentWatchers = signal.watchers;\n\tsignal.watchers = List.create();\n\n\twhile (currentWatchers.length) {\n\t\tcurrentWatchers.shift()();\n\t}\n\n\tcurrentWatchers.free();\n\tsignal.isPropagating = false;\n}\n\n/**\n */\nfunction propagateQueue ()\n{\n\tpropagationMicroTask = false;\n\n\tsignalsPropagating = true;\n\n\twhile (propagationQueue.length) {\n\t\tpropagate(propagationQueue.shift());\n\t}\n\n\tsignalsPropagating = false;\n}\n\n/**\n */\nfunction accessorHandler (signal, newValue, forced)\n{\n\tif (newValue === undefined)\n\t{\n\t\tif (activeWatcher !== null)\n\t\t{\n\t\t\tif (signal.watchers.find(activeWatcher) === null)\n\t\t\t\tsignal.watchers.push(activeWatcher);\n\t\t}\n\t\n\t\treturn signal.value;\n\t}\n\n\t// Do not trigger any propagation if the new value is the same as the current one.\n\tif (signal.value === newValue && forced === false)\n\t\treturn signal.accessor;\n\n\tsignal.previousValue = signal.value;\n\tsignal.value = newValue;\n\n\tif (signalsPropagating === true)\n\t{\n\t\tif (signal.isPropagating)\n\t\t\treturn signal.accessor;\n\n\t\tif (signal.wasQueued === false)\n\t\t{\n\t\t\tpropagationQueue.push(signal);\n\t\t\tsignal.wasQueued = true;\n\n\t\t\tif (propagationMicroTask === false)\n\t\t\t{\n\t\t\t\tqueueMicrotask(propagateQueue);\n\t\t\t\tpropagationMicroTask = true;\n\t\t\t}\n\t\t}\n\n\t\treturn signal.accessor;\n\t}\n\n\tsignalsPropagating = true;\n\tpropagate(signal);\n\tsignalsPropagating = false;\n\n\treturn signal.accessor;\n}\n\n/**\n * Creates a new signal.\n * @param {any} value?\n */\nexport function signal (value=null)\n{\n\tconst data = {\n\t\twatchers: List.create(),\n\t\tvalue: value,\n\t\tisPropagating: false,\n\t\twasQueued: false\n\t};\n\n\tdata.accessor = (newValue=undefined, forced=false) => {\n\t\treturn accessorHandler (data, newValue, forced);\n\t};\n\n\treturn data.accessor;\n}\n\n/**\n * Creates a new signal side effect.\n * @param {function} fn\n */\nexport function effect (fn, id=null)\n{\n\tlet previousWatcher = null;\n\tlet active = false;\n\n\tconst watcher = function()\n\t{\n\t\tif (active === true) return;\n\t\tactive = true;\n\n\t\tpreviousWatcher = activeWatcher;\n\t\tactiveWatcher = watcher;\n\n\t\ttry {\n\t\t\tfn();\n\t\t}\n\t\tfinally {\n\t\t}\n\n\t\tactiveWatcher = previousWatcher;\n\t\tactive = false;\n\t};\n\n\twatcher.id = id;\n\twatcher();\n\n\treturn watcher;\n}\n\n/**\n * Replaces a node by the specified value returns the new node. If the value is a string it will be converted to a node first.\n * @param {Node} node\n * @param {Node|string|Array<Node|string>} value\n * @returns {Node}\n */\nexport function replaceNode (node, value)\n{\n\tif (value === null || value === undefined)\n\t{\n\t\tvalue = document.createTextNode('');\n\t\tnode.replaceWith(value);\n\t\treturn value;\n\t}\n\n\tif (value instanceof Array)\n\t{\n\t\tlet elem = document.createDocumentFragment();\n\n\t\tfor (let i of value)\n\t\t{\n\t\t\tif (!(i instanceof Node))\n\t\t\t\ti = document.createTextNode(i);\n\n\t\t\telem.appendChild(i);\n\t\t}\n\n\t\tvalue = elem;\n\t}\n\telse\n\t{\n\t\tif (!(value instanceof Node))\n\t\t\tvalue = document.createTextNode(value);\n\t}\n\n\tnode.replaceWith(value);\n\treturn value;\n}\n","\r\nexport { signal, effect, replaceNode } from './runtime-jsx';\r\n\r\nimport _Router from './router'; export const Router = _Router;\r\nimport _Api from './api'; export const Api = _Api;\r\nimport _Utils from './utils'; export const Utils = _Utils;\r\nimport _db from './db'; export const db = _db;\r\n"],"names":["$7718a52dfca15325$var$_Router","$k7heJ$EventDispatcher","extend","route","this","_super","EventDispatcher","__ctor","_compileRoute","value","params","replace","m","exec","push","routeRegex","addHandler","handler","unrouted","context","addEventListener","removeHandler","removeEventListener","dispatch","matches","match","s_args","active","dispatchEvent","args","str","i","length","changed","alreadyAttached","globalThis","onhashchange","onLocationChanged","bind","silent","location1","realLocation","location","ignoreHashChangeEvent","hash","onRoute","onUnroute","routes","Route","sortedRoutes","sort","a","b","undefined","cLocation","pLocation","k","state","j","rLocation","$d584b999ce7bb535$var$Api","REQUEST_PACKAGE_SUPPORTED","REQ64_SUPPORTED","JSON_RESPONSE_SUPPORTED","XML_RESPONSE_SUPPORTED","INCLUDE_CREDENTIALS","UNIQUE_STAMP","apiUrl","useReq64","retries","flags","res","req","_requestPackage","callback","responseCallback","packageBegin","packageEnd","_packageData","rpkg","$k7heJ$base64","encode","encodeParams","apiCall","_hideProgress","response","responseFilter","e","$parcel$global","_requestLevel","document","documentElement","classList","add","remove","name","headers","obj","s","FormData","entries","encodeURIComponent","i1","join","url","indexOf","param","success","failure","httpMethod","relativeUrl","getUrl","appendParam","Date","now","toUpperCase","Accept","method","body","multipart","options","credentials","data","Blob","endsWith","type","File","append","tmp","l","i2","fetch","then","result","decodeResult","catch","err","get","split","toLowerCase","json","Promise","resolve","reject","$a86ae7da7dd6c514$var$Utils","showDownload","filename","dataUrl","link","createElement","href","style","display","download","target","appendChild","click","removeChild","showFilePicker","allowMultiple","accept","input","multiple","onchange","files","onfocus","loadAsDataUrl","file","reader","FileReader","onload","onerror","readAsDataURL","loadAsText","readAsText","loadAsArrayBuffer","readAsArrayBuffer","loadAllAsDataUrl","fileList","loadNext","size","loadImageFromUrl","image","Image","src","$a86ae7da7dd6c514$export$2e2bcd8739ae039","$5c284bd1d2bc0d7d$export$2e2bcd8739ae039","db","init","dbName","version","upgradeCallback","indexedDB","open","evt","error","message","onupgradeneeded","async","txn","transaction","oldVersion","createObjectStore","keyPath","abort","onsuccess","ensureConnected","alert","index","storeName","indexName","objectStore","Error","forEach","id","request","store","openCursor","event","cursor","continue","count","getAll","filter","getAllKeys","getAllUnique","fieldName","list","put","sysGet","full","sysPut","findOne","partial","notPartial","$k7heJ$Rinn","partialCompare","delete","deleteAll","insert","$93a67b7b0ed52912$export$85c928794f8d04d4","next","prev","$93a67b7b0ed52912$export$54c2e3dc7acea9f5","head","tail","create","node","prototype","free","unlink","linkAfter","ref","linkBefore","clear","reset","first","last","find","unshift","shift","pop","$09e89c15f3c11137$var$activeWatcher","$09e89c15f3c11137$var$signalsPropagating","$09e89c15f3c11137$var$propagationQueue","$09e89c15f3c11137$var$propagationMicroTask","$09e89c15f3c11137$var$propagate","signal","isPropagating","currentWatchers","watchers","$09e89c15f3c11137$var$propagateQueue","$09e89c15f3c11137$export$e2ef10f86a8d60e8","wasQueued","accessor","newValue","forced","previousValue","queueMicrotask","$09e89c15f3c11137$var$accessorHandler","$09e89c15f3c11137$export$dc573d8a6576cdb3","fn","previousWatcher","watcher","$09e89c15f3c11137$export$5542201de9311ab2","createTextNode","replaceWith","Array","elem","createDocumentFragment","Node","$9ffb7151b8b2d038$export$55185c17a0fcbe46","$7718a52dfca15325$export$2e2bcd8739ae039","$9ffb7151b8b2d038$export$bf71da7aebe9ddc1","$d584b999ce7bb535$export$2e2bcd8739ae039","$9ffb7151b8b2d038$export$d2ca453b913dcdea","$9ffb7151b8b2d038$export$f932f06c7eb6abeb"],"version":3,"file":"riza.js.map"}