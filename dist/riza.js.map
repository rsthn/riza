{"mappings":"A,I,e,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,S,uB,C,E,O,G,E,U,C,E,O,C,C,C,I,gB,C,E,c,C,E,c,e,iB,A,O,gB,A,C,c,S,C,E,G,K,gB,O,e,C,E,C,O,C,G,K,c,C,I,E,a,C,E,A,Q,a,C,E,C,I,E,C,G,E,Q,C,C,E,O,e,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,a,C,E,C,C,E,e,iB,C,e,c,Q,C,Q,S,M,C,O,E,S,e,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,e,O,O,C,O,I,2C,e,O,O,C,Q,I,2C,e,O,O,C,Q,I,0C,e,O,O,C,kB,I,2C,e,O,O,C,Q,I,2C,e,O,O,C,Y,I,2C,e,O,O,C,S,I,2C,e,O,O,C,c,I,2C,e,O,O,C,a,I,2C,e,O,O,C,W,I,2C,I,e,a,O,W,W,a,O,K,K,a,O,O,O,K,I,e,e,C,E,gB,C,E,c,C,E,c,e,iB,A,O,e,C,A,C,c,S,C,E,G,K,gB,O,e,C,E,C,O,C,G,K,c,C,I,E,a,C,E,A,Q,a,C,E,C,I,E,C,G,E,Q,C,C,E,O,e,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,a,C,E,C,C,E,e,iB,C,a,E,c,Q,C,Q,S,M,C,O,E,e,O,O,C,U,I,0C,I,O,c,S,O,c,SGIA;;;AAGA,EAEA,yCACA,CAMC,QAAS,SAAU,KAAK,CAAE,GAAG,EAAA,MAExB,UAAA,OAAO,MAWH,MATmB,AAAA,CAAA,KAAtB,MAAM,MAAA,CAAO,EAAG,GAAa,MAAQ,IAAI,GAAA,CAAI,MAAM,MAAA,CAAO,IAC/B,KAAtB,MAAM,MAAA,CAAO,EAAG,IAAY,CAAA,MAAQ,GAAG,CAAC,MAAM,MAAA,CAAO,GAAA,AAAA,EAE1D,UAAA,OAAO,KAAA,EACH,KAAK,OAEN,KAIT,EAGA;;;CAGA,EACA,KAAM,SAAU,CAAK,CAAE,CAAK,CAAE,CAAI,CAAE,CAAK,EAExC,OAAQ,GAEP,IAAK,MAEJ,GAAI,M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","sources":["<anon>","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/rinn.m.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/<anon>","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/model-constraints.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/alpha.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/model-regex.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/main.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/class.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/event.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/event-dispatcher.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/model.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/model-list.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/schema.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/flattenable.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/collection.js","node_modules/.pnpm/rinn@2.0.48/node_modules/rinn/dist/src/template.js","node_modules/.pnpm/base-64@1.0.0/node_modules/base-64/base64.js","src/_main.js","src/router.js","src/element.js","src/api.js","src/data-source.js","src/data-list.js","src/easing.js","src/anim.js","src/elements.js","src/elems/r-tabs.js","src/elems/r-form.js","src/elems/r-panel.js","src/elems/r-list.js","src/elems/r-item.js","src/elems/r-paginator.js","src/elems/r-table.js","src/elems/r-select.js","src/elems/r-image-cropper.js","src/utils.js","src/db.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirefebd\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirefebd\"] = parcelRequire;\n}\nparcelRequire.register(\"jNRwG\", function(module, exports) {\n\n$parcel$export(module.exports, \"Rinn\", () => $9ffb7151b8b2d038$export$eefcfe56efaaa57d);\n$parcel$export(module.exports, \"Class\", () => $9ffb7151b8b2d038$export$4c85e640eb41c31b);\n$parcel$export(module.exports, \"Event\", () => $9ffb7151b8b2d038$export$d61e24a684f9e51);\n$parcel$export(module.exports, \"EventDispatcher\", () => $9ffb7151b8b2d038$export$ec8b666c5fe2c75a);\n$parcel$export(module.exports, \"Model\", () => $9ffb7151b8b2d038$export$a1edc412be3e1841);\n$parcel$export(module.exports, \"ModelList\", () => $9ffb7151b8b2d038$export$59eced47f477f85a);\n$parcel$export(module.exports, \"Schema\", () => $9ffb7151b8b2d038$export$19342e026b58ebb7);\n$parcel$export(module.exports, \"Flattenable\", () => $9ffb7151b8b2d038$export$3a9581c9ade29768);\n$parcel$export(module.exports, \"Collection\", () => $9ffb7151b8b2d038$export$fb8073518f34e6ec);\n$parcel$export(module.exports, \"Template\", () => $9ffb7151b8b2d038$export$14416b8d99d47caa);\nfunction $parcel$export(t11, e11, n11, r11) {\n    Object.defineProperty(t11, e11, {\n        get: n11,\n        set: r11,\n        enumerable: !0,\n        configurable: !0\n    });\n}\nvar $parcel$global = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : \"undefined\" != typeof $parcel$global ? $parcel$global : {}, $parcel$modules = {}, $parcel$inits = {}, parcelRequire = $parcel$global.parcelRequire25d2;\nnull == parcelRequire && ((parcelRequire = function(t11) {\n    if (t11 in $parcel$modules) return $parcel$modules[t11].exports;\n    if (t11 in $parcel$inits) {\n        var e11 = $parcel$inits[t11];\n        delete $parcel$inits[t11];\n        var n11 = {\n            id: t11,\n            exports: {}\n        };\n        return $parcel$modules[t11] = n11, e11.call(n11.exports, n11, n11.exports), n11.exports;\n    }\n    var r11 = Error(\"Cannot find module '\" + t11 + \"'\");\n    throw r11.code = \"MODULE_NOT_FOUND\", r11;\n}).register = function(t11, e11) {\n    $parcel$inits[t11] = e11;\n}, $parcel$global.parcelRequire25d2 = parcelRequire), parcelRequire.register(\"4VREF\", function(module, exports) {\n    $parcel$export(module.exports, \"default\", ()=>$39761b0dd175036e$export$2e2bcd8739ae039);\n    var $fMUO1 = parcelRequire(\"fMUO1\"), $cAEYe = parcelRequire(\"cAEYe\"), /**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/ $39761b0dd175036e$export$2e2bcd8739ae039 = {\n        _getref: function(value, obj) {\n            return \"string\" != typeof value ? value : (\"#\" == value.substr(0, 1) ? value = obj.get(value.substr(1)) : \"@\" == value.substr(0, 1) && (value = obj[value.substr(1)]), \"string\" == typeof value) ? eval(value) : value;\n        },\n        /**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/ type: function(t11, e11, n11, r11) {\n            switch(e11){\n                case \"int\":\n                    if (isNaN(r11 = parseInt(r11))) throw Error(e11);\n                    break;\n                case \"float\":\n                    if (isNaN(r11 = parseFloat(r11))) throw Error(e11);\n                    break;\n                case \"string\":\n                    r11 = null == r11 ? \"\" : r11.toString();\n                    break;\n                case \"bit\":\n                    if (!0 === r11 || !1 === r11) {\n                        r11 = r11 ? 1 : 0;\n                        break;\n                    }\n                    if (isNaN(r11 = parseInt(r11))) throw Error(e11);\n                    r11 = r11 ? 1 : 0;\n                    break;\n                case \"array\":\n                    if (\"array\" == (0, $fMUO1.default).typeOf(r11)) break;\n                    if (null == r11) {\n                        r11 = [];\n                        break;\n                    }\n                    throw Error(e11);\n                case \"bool\":\n                    if (\"true\" === r11 || !0 === r11) {\n                        r11 = !0;\n                        break;\n                    }\n                    if (\"false\" === r11 || !1 === r11) {\n                        r11 = !1;\n                        break;\n                    }\n                    throw Error(e11);\n            }\n            return r11;\n        },\n        /**\n\t**\tVerifies that the field is of the specified model type.\n\t*/ model: function(t11, e11, n11, r11) {\n            var i11 = this._getref(e11, t11);\n            if (!i11) throw Error(e11);\n            return r11 ? i11.ensure(r11) : new i11;\n        },\n        /**\n\t**\tVerifies that the field is of the specified class.\n\t*/ cls: function(t11, e11, n11, r11) {\n            var i11 = this._getref(e11, t11);\n            return r11 ? (0, $fMUO1.default).ensureTypeOf(i11, r11) : new i11;\n        },\n        /**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/ arrayof: function(t11, e11, n11, r11) {\n            var i11 = this._getref(e11, t11);\n            if (r11 || (r11 = []), !i11 || \"array\" != (0, $fMUO1.default).typeOf(r11)) throw Error(e11);\n            for(var s11 = 0; s11 < r11.length; s11++)r11[s11] = (0, $fMUO1.default).ensureTypeOf(i11, r11[s11]);\n            return r11;\n        },\n        /**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/ arraynull: function(t11, e11, n11, r11) {\n            var i11 = !1;\n            if (\"object\" == (0, $fMUO1.default).typeOf(e11) && (e11.remove && (i11 = e11.remove), e11 = e11.value), e11) return r11;\n            if (\"array\" != (0, $fMUO1.default).typeOf(r11)) throw Error(e11);\n            for(var s11 = 0; s11 < r11.length; s11++)if (null == r11[s11]) {\n                if (i11) r11.splice(s11--, 1);\n                else throw Error(e11);\n            }\n            return r11;\n        },\n        /**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/ arraycompliant: function(t11, e11, n11, r11) {\n            var i11 = !1;\n            if (\"object\" == (0, $fMUO1.default).typeOf(e11) && (e11.remove && (i11 = e11.remove), e11 = e11.value), !e11) return r11;\n            if (\"array\" != (0, $fMUO1.default).typeOf(r11)) throw Error(e11);\n            for(var s11 = 0; s11 < r11.length; s11++)if (null != r11[s11] && !r11[s11].isCompliant()) {\n                if (i11) r11.splice(s11--, 1);\n                else throw Error(e11);\n            }\n            return r11;\n        },\n        /**\n\t**\tVerifies the presense of the field.\n\t*/ required: function(t11, e11, n11, r11) {\n            if (null == r11) throw Error(e11 ? \"\" : \"null\");\n            if (\"array\" === (0, $fMUO1.default).typeOf(r11)) {\n                if (0 == r11.length) throw Error(e11 ? \"\" : \"null\");\n            } else if (0 == r11.toString().length) throw Error(e11 ? \"\" : \"null\");\n            return r11;\n        },\n        /**\n\t**\tVerifies the minimum length of the field.\n\t*/ minlen: function(t11, e11, n11, r11) {\n            if (r11.toString().length < e11) throw Error(e11);\n            return r11;\n        },\n        /**\n\t**\tVerifies the maximum length of the field.\n\t*/ maxlen: function(t11, e11, n11, r11) {\n            if (r11.toString().length > e11) throw Error(e11);\n            return r11;\n        },\n        /**\n\t**\tVerifies the minimum value of the field.\n\t*/ minval: function(t11, e11, n11, r11) {\n            if (parseFloat(r11) < e11) throw Error(e11);\n            return r11;\n        },\n        /**\n\t**\tVerifies the maximum value of the field.\n\t*/ maxval: function(t11, e11, n11, r11) {\n            if (parseFloat(r11) > e11) throw Error(e11);\n            return r11;\n        },\n        /**\n\t**\tVerifies the minimum number of items in the array.\n\t*/ mincount: function(t11, e11, n11, r11) {\n            if (\"array\" != (0, $fMUO1.default).typeOf(r11) || r11.length < e11) throw Error(e11);\n            return r11;\n        },\n        /**\n\t**\tVerifies the maximum number of items in the array.\n\t*/ maxcount: function(t11, e11, n11, r11) {\n            if (\"array\" != (0, $fMUO1.default).typeOf(r11) || r11.length > e11) throw Error(e11);\n            return r11;\n        },\n        /**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/ pattern: function(t11, e11, n11, r11) {\n            if (!(0, $cAEYe.default)[e11].test(r11.toString())) throw Error(e11);\n            return r11;\n        },\n        /**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/ inset: function(t11, e11, n11, r11) {\n            if (\"array\" != (0, $fMUO1.default).typeOf(e11)) {\n                if (!RegExp(\"^(\" + e11.toString() + \")$\").test(r11.toString())) throw Error(e11);\n                return r11;\n            }\n            if (-1 == e11.indexOf(r11.toString())) throw Error(e11.join(\"|\"));\n            return r11;\n        },\n        /**\n\t**\tSets the field to upper case.\n\t*/ upper: function(t11, e11, n11, r11) {\n            return e11 ? r11.toString().toUpperCase() : r11;\n        },\n        /**\n\t**\tSets the field to lower case.\n\t*/ lower: function(t11, e11, n11, r11) {\n            return e11 ? r11.toString().toLowerCase() : r11;\n        }\n    };\n}), parcelRequire.register(\"fMUO1\", function(t11, e11) {\n    $parcel$export(t11.exports, \"default\", ()=>r11);\n    let n11 = {};\n    var r11 = n11; /*\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/ \n    n11.invokeLater = function(t11) {\n        t11 && setTimeout(function() {\n            t11();\n        }, 10);\n    }, /*\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/ n11.wait = function(t11) {\n        return new Promise(function(e11, n11) {\n            setTimeout(e11, t11);\n        });\n    }, /*\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/ n11.typeOf = function(t11) {\n        return t11 instanceof Array ? \"array\" : null === t11 ? \"null\" : (typeof t11).toString().toLowerCase();\n    }, /*\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/ n11.isArrayOrObject = function(t11) {\n        switch(n11.typeOf(t11)){\n            case \"array\":\n            case \"object\":\n                return !0;\n        }\n        return !1;\n    }, /*\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/ n11.clone = function(t11) {\n        let e11 = n11.typeOf(t11);\n        if (\"array\" === e11) {\n            e11 = [];\n            for(let r11 = 0; r11 < t11.length; r11++)e11.push(n11.clone(t11[r11]));\n        } else if (\"object\" === e11) {\n            if (\"clone\" in t11 && \"function\" == typeof t11.clone) return t11.clone();\n            for(let r11 in e11 = {}, t11)e11[r11] = n11.clone(t11[r11]);\n        } else e11 = t11;\n        return e11;\n    }, /*\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/ n11.merge = function(t11, ...e11) {\n        if (\"array\" == n11.typeOf(t11)) for(let r11 = 0; r11 < e11.length; r11++){\n            let i11 = e11[r11];\n            if (\"array\" != n11.typeOf(i11)) t11.push(i11);\n            else for(let e11 = 0; e11 < i11.length; e11++)t11.push(n11.clone(i11[e11]));\n        }\n        else if (\"object\" == n11.typeOf(t11)) for(let r11 = 0; r11 < e11.length; r11++){\n            let i11 = e11[r11];\n            if (\"object\" == n11.typeOf(i11)) for(let e11 in i11)n11.isArrayOrObject(i11[e11]) ? e11 in t11 ? n11.merge(t11[e11], i11[e11]) : t11[e11] = n11.clone(i11[e11]) : t11[e11] = i11[e11];\n        }\n        return t11;\n    }, /*\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/ n11.override = function(t11, ...e11) {\n        for(let n11 = 0; n11 < e11.length; n11++)for(let r11 in e11[n11])t11[r11] = e11[n11][r11];\n        return t11;\n    }, /*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/ n11.partialCompare = function(t11, e11) {\n        if (null == t11 || null == e11) return !1;\n        if (t11 === e11) return !0;\n        for(var n11 in e11)if (t11[n11] != e11[n11]) return !1;\n        return !0;\n    }, /*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/ n11.arrayFind = function(t11, e11, n11) {\n        for(var r11 = 0; t11 && r11 < t11.length; r11++)if (this.partialCompare(t11[r11], e11)) return n11 ? t11[r11] : r11;\n        return !!n11 && null;\n    }, /*\r\n**\tVerifies if the specified object is of class `m`, returns boolean.\r\n**\r\n**\t>> bool isTypeOf (object obj, class _class);\r\n*/ n11.isInstanceOf = function(t11, e11) {\n        return !!t11 && !!e11 && \"object\" == typeof t11 && (t11 instanceof e11 || \"isInstanceOf\" in t11 && t11.isInstanceOf(e11));\n    }, /*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/ n11.indexOf = function(t11, e11, n11 = !1) {\n        if (n11) {\n            for(let n11 = 0; n11 < t11.length; n11++)if (t11[n11] === e11) return n11;\n            return -1;\n        }\n        for(let n11 in t11)if (t11[n11] === e11) return n11;\n        return -1;\n    }, /*\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/ n11.escape = function(t11) {\n        return (t11 + \"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }, /*\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/ n11.ensureTypeOf = function(t11, e11) {\n        return !e11 || !t11 || e11 instanceof t11 || e11.isInstanceOf && t11.prototype.className && e11.isInstanceOf(t11.prototype.className) ? e11 : new t11(e11);\n    }, /*\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/ n11.serialize = function(t11) {\n        return JSON.stringify(t11);\n    }, /*\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/ n11.deserialize = function(t11) {\n        return JSON.parse(t11);\n    }, /*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/ n11.hookAppend = function(t11, e11, n11, r11 = !0) {\n        let i11 = t11[e11];\n        return r11 ? t11[e11] = function(...t11) {\n            if (!1 !== i11.apply(this, t11)) return n11.apply(this, t11);\n        } : t11[e11] = function(...t11) {\n            return i11.apply(this, t11), n11.apply(this, t11);\n        }, {\n            unhook: function() {\n                t11[e11] = i11;\n            }\n        };\n    }, /*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/ n11.hookPrepend = function(t11, e11, n11, r11 = !0) {\n        let i11 = t11[e11];\n        return r11 ? t11[e11] = function(...t11) {\n            if (!1 !== n11.apply(this, t11)) return i11.apply(this, t11);\n        } : t11[e11] = function(...t11) {\n            return n11.apply(this, t11), i11.apply(this, t11);\n        }, {\n            unhook: function() {\n                t11[e11] = i11;\n            }\n        };\n    };\n}), parcelRequire.register(\"cAEYe\", function(t11, e11) {\n    $parcel$export(t11.exports, \"default\", ()=>n11); /**\n**\tCommon regular expressions for pattern validation.\n*/ \n    var n11 = {\n        email: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n        url: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n        urlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n        name: /^[-A-Za-z0-9_.]+$/,\n        uname: /^['\\pL\\pN ]+$/,\n        text: /^[^&<>{}]*$/,\n        utext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n    };\n});\nvar $fMUO1 = parcelRequire(\"fMUO1\"), $fMUO1 = parcelRequire(\"fMUO1\"); /**\r\n * Base class used to create other classes with complex prototype based multiple inheritance while at the\r\n * same time avoiding the prototype chain for faster access. Supports calling parent class methods.\r\n */ \n//!class Class\nlet $2394d727dfd6a212$var$Class = function() {}; /**\r\n * Reference to the class itself.\r\n */ \n$2394d727dfd6a212$var$Class._class = $2394d727dfd6a212$var$Class, /**\r\n * Contains the methods of each of the super classes.\r\n */ $2394d727dfd6a212$var$Class._super = {}, /**\r\n * Name of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n * !readonly string className;\r\n */ $2394d727dfd6a212$var$Class.prototype.className = \"Class\", /**\r\n * Class constructor, should initialize the instance. Invoked when the `new` keyword is used with the class.\r\n * !constructor();\r\n */ $2394d727dfd6a212$var$Class.prototype.__ctor = function() {}, /**\r\n * Class destructor, should clear the instance and release any used resources, invoked when the global `dispose` function is called with an instance as parameter.\r\n * !__dtor() : void;\r\n */ $2394d727dfd6a212$var$Class.prototype.__dtor = function() {}, /**\r\n * Returns true if the object is an instance of the specified class, the parameter can be a class name (string), a constructor (function) or\r\n * a class instance (object), in any cases the appropriate checks will be done.\r\n * !isInstanceOf (className: string|function|object) : boolean;\r\n */ $2394d727dfd6a212$var$Class.prototype.isInstanceOf = function(t11) {\n    return null !== t11 && (\"function\" == typeof t11 ? t11 = t11.prototype.className : \"string\" != typeof t11 && (t11 = t11.__proto__.className), this.className === t11 || this._super.hasOwnProperty(t11));\n}, /**\r\n * Returns true if the given object is an instance of the specified class, the parameter can be a class name (string), a constructor (function)\r\n * or a class instance (object), in any cases the appropriate checks will be done.\r\n * !instanceOf (object: object, className: string|function|object) : boolean;\r\n */ $2394d727dfd6a212$var$Class.instanceOf = function(t11, e11) {\n    return null !== t11 && null !== e11 && t11.isInstanceOf(e11);\n}, /**\r\n * Internal method to ensure the _super field of an instance has all functions properly bound to the instance.\r\n */ $2394d727dfd6a212$var$Class.prototype._initSuperRefs = function() {\n    let t11 = this.constructor._super, e11 = {}, n11 = this;\n    for(let r11 in t11){\n        let i11 = {}, s11 = t11[r11].prototype;\n        for(let t11 in s11)\"function\" === (0, $fMUO1.default).typeOf(s11[t11]) && (i11[t11] = function(t11) {\n            return function(e11, r11, i11, s11, a11, l11, o11, u11, f11, h11, c11) {\n                return t11.call(n11, e11, r11, i11, s11, a11, l11, o11, u11, f11, h11, c11);\n            };\n        }(s11[t11]));\n        e11[r11] = i11;\n    }\n    this._super = e11;\n}, /*\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/ $2394d727dfd6a212$var$Class.inherit = function(t11) {\n    let e11 = this._class, n11 = e11._super, r11 = e11._class;\n    if (\"function\" === (0, $fMUO1.default).typeOf(t11)) {\n        for(let n11 in t11._class)/^[A-Z]/.test(n11) || (e11[n11] = t11._class[n11]); // Combine methods and properties.\n        (0, $fMUO1.default).override(e11.prototype, t11._class.prototype), (0, $fMUO1.default).override(n11, t11._class._super), t11._class.prototype.className && (n11[t11._class.prototype.className] = t11._class);\n    } else (0, $fMUO1.default).override(e11.prototype, t11);\n    return e11._super = n11, e11._class = r11, e11;\n}, /**\r\n * Internal method used to extend a class with one or more prototypes.\r\n */ $2394d727dfd6a212$var$Class.prototype._extend = function(t11, e11) {\n    if (0 === e11.length) return t11; //VIOLET OPTIMIZE\n    let n11 = function(...t11) {\n        this._initSuperRefs(), this.__ctor.apply(this, t11);\n    };\n    n11._class = n11, n11._super = {}, $2394d727dfd6a212$var$Class.inherit.call(n11, t11), delete n11.prototype.className;\n    for(let t11 = 0; t11 < e11.length; t11++)n11.inherit(e11[t11]);\n    return delete n11._super.Class, \"classInit\" in n11.prototype && n11.prototype.classInit(), n11.isInstance = function(t11) {\n        return (0, $fMUO1.default).isInstanceOf(t11, n11);\n    }, n11;\n}, /**\r\n * Creates a new class with the specified prototypes each of which can be a class constructor (function) or an object.\r\n */ $2394d727dfd6a212$var$Class.extend = function(...t11) {\n    return this._class.prototype._extend(this, t11);\n}, /**\r\n * Creates a new instance of a class resulting from extending the self class with the specified prototype.\r\n */ $2394d727dfd6a212$var$Class.create = function(t11) {\n    return new (this.extend(t11));\n}, /**\r\n * Mutates the host object to be an instance of the specified class.\r\n * !static mutate (classConstructor: object, host: object, override?: object) : object;\r\n */ $2394d727dfd6a212$var$Class.mutate = function(t11, e11, n11 = null) {\n    let r11 = new t11; // Copy all members from the class prototype.\n    for(let n11 in t11.prototype)e11.hasOwnProperty(n11) || (e11[n11] = t11.prototype[n11]); // Copy all members from the zombie class instance.\n    for(let t11 in r11)e11.hasOwnProperty(t11) || (e11[t11] = r11[t11]); // Rebind the super references.\n    if (e11._super) for(let n11 in e11._super)for(let r11 in e11._super[n11])e11._super[n11][r11] = t11.prototype.constructor._super[n11].prototype[r11].bind(e11); // Copy override members.\n    if (null !== n11) for(let t11 in n11)e11[t11] = n11[t11];\n    return e11;\n};\nvar $2394d727dfd6a212$export$2e2bcd8739ae039 = $2394d727dfd6a212$var$Class, $fMUO1 = parcelRequire(\"fMUO1\"), /**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/ $13eda5a5dec8010f$export$2e2bcd8739ae039 = $2394d727dfd6a212$export$2e2bcd8739ae039.extend({\n    className: \"Event\",\n    /**\r\n\t**\tSource of the event.\r\n\t*/ source: null,\n    /**\r\n\t**\tName of the event.\r\n\t*/ name: null,\n    /**\r\n\t**\tArguments of the event.\r\n\t*/ args: null,\n    /**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/ _async: !1,\n    /**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/ list: null,\n    /**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/ next: null,\n    /**\r\n\t**\tReturn values from event handlers.\r\n\t*/ ret: null,\n    /**\r\n\t**\tOriginal root event.\r\n\t*/ original: null,\n    /**\r\n\t**\tIndex of the current event handler.\r\n\t*/ i: -1,\n    /**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/ __ctor: function(t11, e11, n11, r11, i11, s11) {\n        this.source = t11, this.name = n11, this.args = r11, this.cbHandler = i11, this.cbContext = s11, this.list = e11, this.reset();\n    },\n    /**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/ reset: function() {\n        return this.next = null, this.ret = [], this._async = !1, this.i = -1, this;\n    },\n    /**\r\n\t**\tChanges the source of the event.\r\n\t**\r\n\t**\tEvent setSource (object value);\r\n\t*/ setSource: function(t11) {\n        return this.source = t11, this;\n    },\n    /**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/ wait: function() {\n        return this._async = !0, this;\n    },\n    /**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/ resume: function() {\n        for(this._async = !1; !this._async && !(++this.i >= this.list.length);)if (!this.list[this.i].silent) {\n            if (\"string\" == (0, $fMUO1.default).typeOf(this.list[this.i].handler)) {\n                if (this.list[this.i].context) {\n                    if (!this.list[this.i].context[this.list[this.i].handler]) continue;\n                    if (!1 === this.list[this.i].context[this.list[this.i].handler](this, this.args, this.list[this.i].data)) break;\n                } else if (!1 === $parcel$global[this.list[this.i].handler].call(null, this, this.args, this.list[this.i].data)) break;\n            } else if (!1 === this.list[this.i].handler.call(this.list[this.i].context, this, this.args, this.list[this.i].data)) break;\n        }\n        return this._async || (this.i >= this.list.length && this.next && this.next.resume(), this.cbHandler && this.cbHandler.call(this.cbContext)), this;\n    },\n    /**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/ from: function(t11) {\n        return this.original = t11, this;\n    },\n    /**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/ enqueue: function(t11) {\n        var e11;\n        if (!t11) return this;\n        for(e11 = this; null != e11.next; e11 = e11.next);\n        return e11.next = t11, t11.from(this), this;\n    }\n}), /**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/ $c43adaf9cb6d6dd3$export$2e2bcd8739ae039 = $2394d727dfd6a212$export$2e2bcd8739ae039.extend({\n    className: \"EventDispatcher\",\n    /**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/ listeners: null,\n    /**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/ namespace: null,\n    /**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/ __ctor: function() {\n        this.listeners = {};\n    },\n    /**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/ setNamespace: function(t11) {\n        return this.namespace = t11, this;\n    },\n    /**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/ addEventListener: function(t11, e11, n11, r11) {\n        var i11 = (t11 = t11.split(\":\"))[t11.length - 1], s11 = t11.length > 1 ? t11[0] : null;\n        return this.listeners[i11] || (this.listeners[i11] = []), this.listeners[i11].push({\n            ns: s11,\n            handler: e11,\n            context: n11,\n            data: r11,\n            silent: 0\n        }), this;\n    },\n    /**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/ removeEventListener: function(t11, e11, n11) {\n        var r11 = (t11 = t11.split(\":\"))[t11.length - 1], i11 = t11.length > 1 ? t11[0] : null;\n        if (\"*\" == r11) for(var s11 in this.listeners)for(var a11 = this.listeners[s11], l11 = 0; l11 < a11.length; l11++){\n            var o11 = !0;\n            e11 && (o11 = o11 && a11[l11].handler === e11), n11 && (o11 = o11 && a11[l11].context === n11), i11 && (o11 = o11 && a11[l11].ns == i11), o11 && a11.splice(l11--, 1);\n        }\n        else {\n            if (!this.listeners[r11]) return this;\n            for(var a11 = this.listeners[r11], l11 = 0; l11 < a11.length; l11++){\n                var o11 = !0;\n                e11 && (o11 = o11 && a11[l11].handler === e11), n11 && (o11 = o11 && a11[l11].context === n11), i11 && (o11 = o11 && a11[l11].ns == i11), o11 && a11.splice(l11--, 1);\n            }\n        }\n        return this;\n    },\n    /**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/ prepareEvent: function(t11, e11, n11, r11) {\n        var i11 = [], s11 = (t11 = t11.split(\":\"))[t11.length - 1], a11 = t11.length > 1 ? t11[0] : null;\n        this.listeners[s11] && (i11 = i11.concat(this.listeners[s11])), this.listeners[\"*\"] && (i11 = i11.concat(this.listeners[\"*\"]));\n        for(var l11 = 0; l11 < i11.length; l11++)i11[l11].silent && i11.splice(l11--, 1);\n        if (a11) for(var l11 = 0; l11 < i11.length; l11++)i11[l11].ns != a11 && i11.splice(l11--, 1);\n        return new $13eda5a5dec8010f$export$2e2bcd8739ae039(this, i11, s11, e11, n11, r11);\n    },\n    /**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/ silence: function(t11, e11) {\n        var n11 = (t11 = t11.split(\":\"))[t11.length - 1], r11 = t11.length > 1 ? t11[0] : null;\n        if (e11 = !1 === e11 ? -1 : 1, \"*\" == n11) for(var i11 in this.listeners)for(var s11 = this.listeners[i11], a11 = 0; a11 < s11.length; a11++)r11 && s11[a11].ns != r11 || (s11[a11].silent += e11);\n        else {\n            if (!this.listeners[n11]) return this;\n            for(var s11 = this.listeners[n11], a11 = 0; a11 < s11.length; a11++)r11 && s11[a11].ns != r11 || (s11[a11].silent += e11);\n        }\n        return this;\n    },\n    /**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/ dispatchEvent: function(t11, e11, n11, r11) {\n        return this.prepareEvent(this.namespace ? this.namespace + \":\" + t11 : t11, e11, n11, r11).resume();\n    }\n}), $fMUO1 = parcelRequire(\"fMUO1\"), $4VREF = parcelRequire(\"4VREF\"); /**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/ \nlet $4dfa0622e14576ea$var$_Model = $c43adaf9cb6d6dd3$export$2e2bcd8739ae039.extend({\n    className: \"Model\",\n    /**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/ defaults: null,\n    /**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/ constraints: null,\n    /**\n\t**\tProperties of the model.\n\t*/ data: null,\n    /**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/ changedList: null,\n    /**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/ _silent: 0,\n    /**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/ _level: 0,\n    /**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/ __ctor: function(t11, e11) {\n        if (this._super.EventDispatcher.__ctor(), this.data = {}, null != e11) this.reset(e11, !1);\n        else {\n            let t11 = null;\n            if (!this.defaults && this.constraints) for(let e11 in t11 = {}, this.constraints){\n                let n11 = this.constraints[e11];\n                if (null === n11.def || void 0 === n11.def) {\n                    t11[e11] = null;\n                    continue;\n                }\n                \"function\" == typeof n11.def ? t11[e11] = n11.def() : t11[e11] = n11.def;\n            }\n            this.reset(t11);\n        }\n        this.init(), null != t11 && this.set(t11, !0), this.constraints && this.update(), this.ready();\n    },\n    /**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/ reset: function(t11, e11) {\n        if (!this.defaults) {\n            if (!t11 || \"object\" !== (0, $fMUO1.default).typeOf(t11) && \"function\" !== (0, $fMUO1.default).typeOf(t11)) return this;\n            this.defaults = t11;\n        }\n        return \"function\" === (0, $fMUO1.default).typeOf(this.defaults) ? this.data = this.defaults() : this.data = (0, $fMUO1.default).clone(this.defaults), !1 === e11 || !1 === t11 ? this : this.update(null, !0);\n    },\n    /**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/ init: function() {},\n    /**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/ ready: function() {},\n    /**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/ silent: function(t11) {\n        return this._silent += t11 ? 1 : -1, this;\n    },\n    /**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/ _validate: function(t11, e11) {\n        if (!this.constraints || !this.constraints[t11]) return e11;\n        var n11 = this.constraints[t11], r11 = e11;\n        for(var i11 in n11)if ($4dfa0622e14576ea$var$_Model.Constraints[i11]) try {\n            r11 = $4dfa0622e14576ea$var$_Model.Constraints[i11](this, n11[i11], t11, r11);\n        } catch (e11) {\n            if (\"null\" == e11.message) break;\n            throw Error(`Constraint [${i11}:${n11[i11]}] failed on property '${t11}'.`);\n        }\n        return r11;\n    },\n    /**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/ _set: function(t11, e11) {\n        if (!this.constraints || !this.constraints[t11]) return this.data[t11] = e11, e11;\n        var n11 = this.constraints[t11];\n        this.data[t11];\n        var r11 = e11;\n        for(var i11 in n11)if ($4dfa0622e14576ea$var$_Model.Constraints[i11]) try {\n            r11 = $4dfa0622e14576ea$var$_Model.Constraints[i11](this, n11[i11], t11, r11);\n        } catch (n11) {\n            if (\"null\" == n11.message) break;\n            this._silent || this.dispatchEvent(\"constraintError\", {\n                constraint: i11,\n                message: n11.message,\n                name: t11,\n                value: e11\n            });\n            break;\n        }\n        return this.data[t11] = r11;\n    },\n    /**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/ _propertyEvent: function(t11, e11, n11, r11) {\n        var i11 = {\n            name: t11,\n            old: e11,\n            value: n11,\n            level: this._level\n        }, s11 = this.dispatchEvent(\"propertyChanging\", i11);\n        r11 ? this.data[t11] = i11.value : i11.value = this._set(t11, i11.value), null != s11 && s11.ret.length && !1 === s11.ret[0] || (this.dispatchEvent(\"propertyChanged.\" + t11, i11), this.dispatchEvent(\"propertyChanged\", i11), this.changedList.push(t11));\n    },\n    /**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/ set: function() {\n        var t11 = arguments.length, e11 = !1, n11 = !1;\n        if ((t11 > 2 || 2 == t11 && \"object\" == (0, $fMUO1.default).typeOf(arguments[0])) && \"boolean\" == (0, $fMUO1.default).typeOf(arguments[t11 - 1]) && (e11 = arguments[--t11], !1 === e11 && (n11 = !0)), 0 == this._level && (this.changedList = []), this._level++, 2 == t11) (this.data[arguments[0]] !== arguments[1] || e11) && (this._silent || n11 ? this._set(arguments[0], arguments[1]) : this._propertyEvent(arguments[0], this.data[arguments[0]], this._validate(arguments[0], arguments[1])));\n        else for(var r11 in arguments[0])(this.data[r11] !== arguments[0][r11] || e11) && (this._silent || n11 ? this._set(r11, arguments[0][r11]) : this._propertyEvent(r11, this.data[r11], this._validate(r11, arguments[0][r11])));\n        return --this._level || !this.changedList.length || n11 || this._silent || this.dispatchEvent(\"modelChanged\", {\n            fields: this.changedList\n        }), this;\n    },\n    /**\n\t**\tReturns true if the given key exists in the model.\n\t**\n\t**\t>> boolean has (string name);\n\t*/ has: function(t11) {\n        return t11 in this.data;\n    },\n    /**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/ get: function(t11, e11) {\n        return 0 == arguments.length || !1 === t11 ? this.data : 1 == arguments.length && !0 === t11 ? this.flatten() : 2 == arguments.length && void 0 === this.data[t11] ? e11 : this.data[t11];\n    },\n    /**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/ getInt: function(t11, e11) {\n        return 2 == arguments.length && void 0 === this.data[t11] ? e11 : parseInt(this.data[t11]);\n    },\n    /**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/ getFloat: function(t11, e11) {\n        return 2 == arguments.length && void 0 === this.data[t11] ? e11 : parseFloat(this.data[t11]);\n    },\n    /**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/ getBool: function(t11, e11) {\n        return t11 = 2 == arguments.length && void 0 === this.data[t11] ? e11 : this.data[t11], \"true\" === t11 || !0 === t11 || \"false\" !== t11 && !1 !== t11 && !!parseInt(t11);\n    },\n    /**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/ getReference: function(t11) {\n        var e11 = this;\n        return {\n            get: function() {\n                return e11.get(t11);\n            },\n            set: function(n11) {\n                e11.set(t11, n11);\n            }\n        };\n    },\n    /**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/ constraint: function(t11, e11, n11) {\n        if (3 == arguments.length || 2 == arguments.length || 1 == arguments.length && \"object\" == (0, $fMUO1.default).typeOf(t11)) {\n            switch(this.constraints === this.constructor.prototype.constraints && (this.constraints = (0, $fMUO1.default).clone(this.constraints)), arguments.length){\n                case 1:\n                    (0, $fMUO1.default).override(this.constraints, t11);\n                    break;\n                case 2:\n                    (0, $fMUO1.default).override(this.constraints[t11], e11);\n                    break;\n                case 3:\n                    this.constraints[t11][e11] = n11;\n            }\n            return this;\n        }\n        return t11 ? this.constraints[t11] : this;\n    },\n    /**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/ flatten: function(t11, e11) {\n        if (t11) {\n            var n11 = this.flatten(!1, !0);\n            return null == n11 ? null : (n11.class = this.classPath, n11);\n        }\n        if (!this.constraints && !this.defaults) return this.data;\n        if (!this.isCompliant()) return {};\n        var r11 = this.constraints, i11 = this.defaults ? \"function\" == (0, $fMUO1.default).typeOf(this.defaults) ? this.defaults() : this.defaults : this.constraints, n11 = {};\n        for(var s11 in this.data)if (s11 in i11) {\n            if (r11 && r11[s11]) {\n                var a11 = r11[s11];\n                if (a11.model) {\n                    n11[s11] = this.data[s11] ? this.data[s11].flatten(e11) : null;\n                    continue;\n                }\n                if (a11.arrayof) {\n                    n11[s11] = [];\n                    for(var l11 = 0; l11 < this.data[s11].length; l11++)n11[s11][l11] = this.data[s11][l11] ? this.data[s11][l11].flatten(e11) : null;\n                    continue;\n                }\n                if (a11.cls) {\n                    n11[s11] = this.data[s11] ? this.data[s11].flatten() : null;\n                    continue;\n                }\n            }\n            n11[s11] = this.data[s11];\n        }\n        return n11;\n    },\n    /**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/ remove: function(t11, e11) {\n        if (\"array\" == (0, $fMUO1.default).typeOf(t11)) {\n            for(var n11 = 0; n11 < t11.length; n11++)delete this.data[t11[n11]];\n            !1 === e11 || this._silent || this.dispatchEvent(\"propertyRemoved\", {\n                fields: t11\n            });\n        } else delete this.data[t11], !1 === e11 || this._silent || this.dispatchEvent(\"propertyRemoved\", {\n            fields: [\n                t11\n            ]\n        });\n    },\n    /**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/ update: function(t11, e11) {\n        if (this._silent) return this;\n        if (0 == this._level && (this.changedList = []), this._level++, t11 && \"string\" == (0, $fMUO1.default).typeOf(t11)) this._propertyEvent(t11, this.data[t11], this.data[t11], e11);\n        else if (t11 && \"array\" == (0, $fMUO1.default).typeOf(t11)) for (var n11 of t11)this._propertyEvent(n11, this.data[n11], this.data[n11], e11);\n        else for(var n11 in this.data)this._propertyEvent(n11, this.data[n11], this.data[n11], e11);\n        return --this._level || this._silent || 0 == this.changedList.length && !0 !== t11 || this.dispatchEvent(\"modelChanged\", {\n            fields: this.changedList\n        }), this;\n    },\n    /**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/ validate: function(t11) {\n        if (!this.constraints) return this;\n        if (t11 && \"string\" == (0, $fMUO1.default).typeOf(t11)) this._set(t11, this.data[t11]);\n        else for(var e11 in this.data)t11 && -1 == (0, $fMUO1.default).indexOf(t11, e11) || this._set(e11, this.data[e11]);\n        return this;\n    },\n    /**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/ isCompliant: function() {\n        if (!this.constraints) return !0;\n        try {\n            for(var t11 in this.data)this._validate(t11, this.data[t11]);\n            return !0;\n        } catch (t11) {}\n        return !1;\n    },\n    /**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/ observe: function(t11, e11, n11) {\n        this.addEventListener(\"propertyChanged.\" + t11, e11, n11);\n    },\n    /**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/ unobserve: function(t11, e11, n11) {\n        this.removeEventListener(\"propertyChanged.\" + t11, e11, n11);\n    },\n    /**\n\t**\tAdds a propertyChanged event handler for the given property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void watch (string property, function handler);\n\t*/ watch: function(t11, e11) {\n        1 == (t11 = t11.split(\":\")).length && (t11[1] = t11[0], t11[0] = \"watch\"), this.addEventListener(t11[0] + \":propertyChanged.\" + t11[1], function(t11, n11) {\n            e11(n11.value, n11, t11);\n        });\n    },\n    /**\n\t**\tRemoves propertyChanged handlers related to the specified property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void unwatch (string property);\n\t*/ unwatch: function(t11) {\n        1 == (t11 = t11.split(\":\")).length && (t11[1] = t11[0], t11[0] = \"watch\"), this.removeEventListener(t11[0] + \":propertyChanged.\" + t11[1]);\n    },\n    /**\n\t * Triggers a field change event. Even if the value of the field is the same as the model's, the event will still be triggered.\n\t */ trigger: function(t11, e11 = null) {\n        return this.set(t11, e11, !0);\n    },\n    /**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/ toString: function() {\n        return (0, $fMUO1.default).serialize(this.get(!0));\n    }\n});\n$4dfa0622e14576ea$var$_Model.Constraints = $4VREF.default;\nvar $4dfa0622e14576ea$export$2e2bcd8739ae039 = $4dfa0622e14576ea$var$_Model, $fMUO1 = parcelRequire(\"fMUO1\"), /**\n**\tGeneric list for models.\n*/ $0890bed8a163f087$export$2e2bcd8739ae039 = $4dfa0622e14576ea$export$2e2bcd8739ae039.extend({\n    className: \"ModelList\",\n    /**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/ itemt: $4dfa0622e14576ea$export$2e2bcd8739ae039,\n    /**\n\t**\tMirror of data.contents\n\t*/ contents: null,\n    /**\n\t**\tIDs of every item in the contents.\n\t*/ itemId: null,\n    /**\n\t**\tAutoincremental ID for the next item to be added.\n\t*/ nextId: null,\n    /**\n\t**\tDefault properties of the model.\n\t*/ defaults: {\n        contents: null\n    },\n    /**\n\t**\tConstraints of the model to ensure integrity.\n\t*/ constraints: {\n        contents: {\n            type: \"array\",\n            arrayof: \"@itemt\"\n        }\n    },\n    /**\n\t**\tConstructor.\n\t*/ __ctor: function(...t11) {\n        this.itemId = [], this.nextId = 0, this._super.Model.__ctor(...t11);\n    },\n    /**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t*/ ready: function() {\n        this._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\", this.contents = this.data.contents;\n    },\n    /**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int iid, Model item);\n\t*/ _bind: function(t11, e11) {\n        return e11 && e11.addEventListener && e11.addEventListener(this._eventGroup, this._onItemEvent, this, t11), e11;\n    },\n    /**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/ _unbind: function(t11) {\n        return t11 && t11.removeEventListener && t11.removeEventListener(this._eventGroup), t11;\n    },\n    /**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, int iid);\n\t*/ _onItemEvent: function(t11, e11, n11) {\n        this.prepareEvent(\"itemChanged\", {\n            id: n11,\n            item: t11.source\n        }).from(t11).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n    },\n    /**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int length ();\n\t*/ length: function() {\n        return this.data.contents.length;\n    },\n    /**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/ clear: function() {\n        for(var t11 = 0; t11 < this.data.contents; t11++)this._unbind(this.data.contents[t11]);\n        return this.itemId = [], this.nextId = 0, this.contents = this.data.contents = [], this.prepareEvent(\"itemsCleared\").enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume(), this;\n    },\n    /**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> ModelList setData (array data);\n\t*/ setData: function(t11) {\n        if (this.clear(), !t11) return this;\n        for(var e11 = 0; e11 < t11.length; e11++){\n            var n11 = (0, $fMUO1.default).ensureTypeOf(this.itemt, t11[e11]);\n            this.itemId.push(this.nextId++), this.data.contents.push(n11), this._bind(this.nextId - 1, n11);\n        }\n        return this.prepareEvent(\"itemsChanged\").enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume(), this;\n    },\n    /**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/ getData: function() {\n        return this.data.contents;\n    },\n    /**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/ getAt: function(t11) {\n        return t11 < 0 || t11 >= this.data.contents.length ? null : this.data.contents[t11];\n    },\n    /**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/ removeAt: function(t11) {\n        if (t11 < 0 || t11 >= this.data.contents.length) return null;\n        let e11 = this.data.contents.splice(t11, 1)[0], n11 = this.itemId.splice(t11, 1)[0];\n        return this._unbind(e11), this.prepareEvent(\"itemRemoved\", {\n            id: n11,\n            item: e11\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume(), e11;\n    },\n    /**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/ setAt: function(t11, e11) {\n        return !(t11 < 0) && !(t11 >= this.data.contents.length) && (e11 = (0, $fMUO1.default).ensureTypeOf(this.itemt, e11), this._unbind(this.data.contents[t11]), this.data.contents[t11] = e11, this._bind(this.itemId[t11], e11), this.prepareEvent(\"itemChanged\", {\n            id: this.itemId[t11],\n            item: e11\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume(), !0);\n    },\n    /**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/ updateAt: function(t11) {\n        return !(t11 < 0) && !(t11 >= this.data.contents.length) && (this.prepareEvent(\"itemChanged\", {\n            id: this.itemId[t11],\n            item: this.data.contents[t11]\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume(), !0);\n    },\n    /**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/ push: function(t11) {\n        return t11 && \"object\" != (0, $fMUO1.default).typeOf(t11) ? null : (t11 = (0, $fMUO1.default).ensureTypeOf(this.itemt, t11), this.itemId.push(this.nextId++), this.data.contents.push(t11), this._bind(this.nextId - 1, t11), this.prepareEvent(\"itemAdded\", {\n            id: this.itemId[this.itemId.length - 1],\n            item: t11,\n            position: \"tail\"\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume(), t11);\n    },\n    /**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/ pop: function() {\n        return this._unbind(this.data.contents.pop());\n    },\n    /**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/ unshift: function(t11) {\n        return t11 && \"object\" != (0, $fMUO1.default).typeOf(t11) ? null : (t11 = (0, $fMUO1.default).ensureTypeOf(this.itemt, t11), this.itemId.unshift(this.nextId++), this.data.contents.unshift(t11), this._bind(this.nextId - 1, t11), this.prepareEvent(\"itemAdded\", {\n            id: this.itemId[0],\n            item: t11,\n            position: \"head\"\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume(), t11);\n    },\n    /**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/ shift: function() {\n        return this._unbind(this.data.contents.shift());\n    },\n    /**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/ find: function(t11, e11 = !1) {\n        for(var n11 = this.data.contents, r11 = 0; r11 < n11.length; r11++)if ((0, $fMUO1.default).partialCompare(n11[r11].data, t11)) return e11 ? n11[r11] : r11;\n        return e11 ? null : -1;\n    }\n}), $fMUO1 = parcelRequire(\"fMUO1\"); /**\r\n * The utility functions in this module allow to create a very strict serialization/deserialization schema\r\n * to ensure that all values are of the specific type when stored in string format.\r\n */ \nlet $2710795e2347ba2a$var$Schema = {\n    Type: function(t11) {\n        let e11 = {\n            flatten: function(t11, e11) {\n                return t11;\n            },\n            unflatten: function(t11, e11) {\n                return t11;\n            }\n        };\n        return t11 ? (0, $fMUO1.default).override(e11, t11) : e11;\n    },\n    String: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(t11, e11) {\n                return null != t11 ? t11.toString() : null;\n            },\n            unflatten: function(t11, e11) {\n                return null != t11 ? t11.toString() : null;\n            }\n        });\n    },\n    Integer: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(t11, e11) {\n                return ~~t11;\n            },\n            unflatten: function(t11, e11) {\n                return ~~t11;\n            }\n        });\n    },\n    Number: function(t11) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            _precision: t11,\n            _round: !1,\n            precision: function(t11) {\n                return this._precision = ~~t11, this;\n            },\n            flatten: function(t11, e11) {\n                return t11 = parseFloat(t11), this._precision > 0 && (t11 = ~~(t11 * Math.pow(10, this._precision)) / Math.pow(10, this._precision)), t11;\n            },\n            unflatten: function(t11, e11) {\n                return parseFloat(t11);\n            }\n        });\n    },\n    Bool: function(t11) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            _compact: t11,\n            compact: function(t11) {\n                return this._compact = t11, this;\n            },\n            flatten: function(t11, e11) {\n                return t11 = ~~t11, this._compact ? t11 > 0 ? 1 : 0 : t11 > 0;\n            },\n            unflatten: function(t11, e11) {\n                return !!~~t11;\n            }\n        });\n    },\n    SharedString: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(t11, e11) {\n                return null == t11 ? 0 : (t11 = t11.toString(), \"strings\" in e11 || (e11.index = {}, e11.strings = []), t11 in e11.index || (e11.strings.push(t11), e11.index[t11] = e11.strings.length), e11.index[t11]);\n            },\n            unflatten: function(t11, e11) {\n                return null == t11 || 0 == t11 ? null : e11.strings[~~t11 - 1];\n            }\n        });\n    },\n    Array: function(t11) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            itemType: t11,\n            _debug: !1,\n            _filter: null,\n            debug: function(t11) {\n                return this._debug = t11, this;\n            },\n            of: function(t11) {\n                return this.itemType = t11, this;\n            },\n            filter: function(t11) {\n                return this._filter = t11, this;\n            },\n            flatten: function(t11, e11) {\n                if (null == t11) return null;\n                let n11 = [];\n                for(let r11 = 0; r11 < t11.length; r11++)(!this._filter || this._filter(t11[r11], r11)) && n11.push(this.itemType.flatten(t11[r11], e11));\n                return n11;\n            },\n            unflatten: async function(t11, e11) {\n                if (null == t11) return null;\n                let n11 = [];\n                for(let r11 = 0; r11 < t11.length; r11++)n11.push(await this.itemType.unflatten(t11[r11], e11));\n                return n11;\n            }\n        });\n    },\n    Object: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            properties: [],\n            property: function(t11, e11, n11 = null) {\n                return this.properties.push({\n                    name: t11,\n                    source: t11,\n                    type: e11,\n                    defvalue: n11\n                }), this;\n            },\n            propertyAlias: function(t11, e11, n11, r11 = null) {\n                return this.properties.push({\n                    name: t11,\n                    source: e11,\n                    type: n11,\n                    defvalue: r11\n                }), this;\n            },\n            flatten: function(t11, e11) {\n                let n11;\n                if (null == t11) return null;\n                if (!0 === e11.symbolic) {\n                    n11 = {};\n                    for(let r11 = 0; r11 < this.properties.length; r11++)this.properties[r11].source in t11 ? n11[this.properties[r11].name] = this.properties[r11].type.flatten(t11[this.properties[r11].source], e11) : n11[this.properties[r11].name] = this.properties[r11].type.flatten(this.properties[r11].defvalue, e11);\n                } else {\n                    n11 = [];\n                    for(let r11 = 0; r11 < this.properties.length; r11++)this.properties[r11].source in t11 ? n11.push(this.properties[r11].type.flatten(t11[this.properties[r11].source], e11)) : n11.push(this.properties[r11].type.flatten(this.properties[r11].defvalue, e11));\n                }\n                return n11;\n            },\n            unflatten: async function(t11, e11) {\n                if (null == t11) return null;\n                let n11 = {};\n                if (!0 === e11.symbolic) for(let r11 = 0; r11 < this.properties.length; r11++)n11[this.properties[r11].name] = await this.properties[r11].type.unflatten(this.properties[r11].name in t11 ? t11[this.properties[r11].name] : this.properties[r11].defvalue, e11);\n                else for(let r11 = 0; r11 < this.properties.length; r11++)n11[this.properties[r11].name] = await this.properties[r11].type.unflatten(r11 in t11 ? t11[r11] : this.properties[r11].defvalue, e11);\n                return n11;\n            }\n        });\n    },\n    Class: function(t11) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            _constructor: t11,\n            constructor: function(t11) {\n                return this._constructor = t11, this;\n            },\n            flatten: function(t11, e11) {\n                return null == t11 ? null : t11.flatten(e11);\n            },\n            unflatten: async function(t11, e11) {\n                return null == t11 ? null : await new this._constructor().unflatten(t11, e11);\n            }\n        });\n    },\n    /*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/ Property: function(t11, e11) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            property: t11,\n            type: e11,\n            name: function(t11) {\n                return this.property = t11, this;\n            },\n            is: function(t11) {\n                return this.type = t11, this;\n            },\n            flatten: function(t11, e11) {\n                let n11;\n                return null == t11 ? null : (!0 === e11.symbolic ? (n11 = {})[this.property] = this.type.flatten(t11[this.property], e11) : n11 = this.type.flatten(t11[this.property], e11), n11);\n            },\n            unflatten: async function(t11, e11) {\n                if (null == t11) return null;\n                let n11 = {};\n                return !0 === e11.symbolic ? n11[this.property] = await this.type.unflatten(t11[this.property], e11) : n11[this.property] = await this.type.unflatten(t11, e11), n11;\n            }\n        });\n    },\n    Map: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(t11, e11) {\n                if (null == t11) return null;\n                if (!0 === e11.symbolic) return t11;\n                let n11 = [];\n                for(let e11 in t11)n11.push(e11), n11.push(t11[e11]);\n                return n11;\n            },\n            unflatten: function(t11, e11) {\n                if (null == t11) return null;\n                if (!0 === e11.symbolic) return t11;\n                let n11 = {};\n                for(let e11 = 0; e11 < t11.length; e11 += 2)n11[t11[e11]] = t11[e11 + 1];\n                return n11;\n            }\n        });\n    },\n    Selector: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            conditions: [],\n            value: null,\n            when: function(t11, e11) {\n                return this.conditions.push([\n                    (e11)=>e11 === t11,\n                    e11\n                ]), this;\n            },\n            with: function(t11) {\n                return this.value = t11, this;\n            },\n            flatten: function(t11, e11) {\n                if (null == t11) return null;\n                for (let n11 of this.conditions)if (!0 === n11[0](this.value)) return n11[1].flatten(t11, e11);\n                return null;\n            },\n            unflatten: async function(t11, e11) {\n                if (null == t11) return null;\n                for (let n11 of this.conditions)if (!0 === n11[0](this.value)) return await n11[1].unflatten(t11, e11);\n                return null;\n            }\n        });\n    }\n};\nvar $2710795e2347ba2a$export$2e2bcd8739ae039 = $2710795e2347ba2a$var$Schema, /**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/ $32651d5f38a8a64c$export$2e2bcd8739ae039 = $2394d727dfd6a212$export$2e2bcd8739ae039.extend({\n    className: \"Flattenable\",\n    /**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/ typeSchema: null,\n    /**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/ flatten: function(t11) {\n        return this.typeSchema.flatten(this, t11);\n    },\n    /**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/ unflatten: async function(t11, e11) {\n        return Object.assign(this, await this.typeSchema.unflatten(t11, e11)), await this.onUnflattened(), this;\n    },\n    /*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/ onUnflattened: async function() {}\n}), $fMUO1 = parcelRequire(\"fMUO1\"), /**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/ $2bcce06113365814$export$2e2bcd8739ae039 = $32651d5f38a8a64c$export$2e2bcd8739ae039.extend({\n    className: \"Collection\",\n    /**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/ itemTypeSchema: null,\n    /**\r\n\t**\tArray of items.\r\n\t*/ items: null,\n    /* Array */ /**\r\n\t**\tConstructs the collection.\r\n\t*/ __ctor: function(t11) {\n        t11 || (t11 = this.itemTypeSchema), t11 && (this.typeSchema = $2710795e2347ba2a$export$2e2bcd8739ae039.Property(\"items\").is($2710795e2347ba2a$export$2e2bcd8739ae039.Array().of(t11))), this.reset();\n    },\n    /*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/ onUnflattened: function() {\n        let t11 = this.items;\n        for (let e11 of (this.reset(), t11))this.add(e11);\n    },\n    /**\r\n\t * \tExecuted when the value in `items` is changed.\r\n\t */ itemsReferenceChanged: function() {},\n    /*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/ reset: function() {\n        return this.items = [], this.itemsReferenceChanged(), this;\n    },\n    /*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/ clear: function() {\n        var t11 = this.items;\n        this.reset();\n        for(var e11 = 0; e11 < t11.length; e11++)this.onItemRemoved(t11[e11], 0);\n        return this;\n    },\n    /*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/ sort: function(t11, e11) {\n        return \"function\" != typeof t11 ? this.items.sort(function(n11, r11) {\n            return (n11[t11] <= r11[t11] ? -1 : 1) * (!0 === e11 ? -1 : 1);\n        }) : this.items.sort(t11), this;\n    },\n    /*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/ findItem: function(t11, e11) {\n        if (!this.items) return null;\n        for(var n11 = 0; n11 < this.items.length; n11++)if (!(e11 && (0, $fMUO1.default).partialCompare(this.items[n11], e11)) && (0, $fMUO1.default).partialCompare(this.items[n11], t11)) return this.items[n11];\n        return null;\n    },\n    /*\r\n\t**\tReturns the container array.\r\n\t*/ getItems: function() {\n        return this.items;\n    },\n    /*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/ length: function() {\n        return this.items.length;\n    },\n    /*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/ isEmpty: function() {\n        return !this.items.length;\n    },\n    /*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/ indexOf: function(t11) {\n        return this.items.indexOf(t11);\n    },\n    /*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/ getAt: function(t11, e11 = !1) {\n        return t11 < 0 && !0 == e11 && (t11 += this.items.length), t11 >= 0 && t11 < this.items.length ? this.items[t11] : null;\n    },\n    /*\r\n\t**\tReturns the first item in the collection.\r\n\t*/ first: function() {\n        return this.getAt(0);\n    },\n    /*\r\n\t**\tReturns the last item in the collection.\r\n\t*/ last: function() {\n        return this.getAt(-1, !0);\n    },\n    /*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/ addAt: function(t11, e11) {\n        if (!e11 || !this.onBeforeItemAdded(e11)) return this;\n        if (t11 < 0 && (t11 = 0), t11 > this.items.length && (t11 = this.items.length), 0 == t11) this.items.unshift(e11);\n        else if (t11 == this.items.length) this.items.push(e11);\n        else {\n            var n11 = this.items.splice(0, t11);\n            n11.push(e11), this.items = n11.concat(this.items), this.itemsReferenceChanged();\n        }\n        return this.onItemAdded(e11), this;\n    },\n    /*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/ unshift: function(t11) {\n        return this.addAt(0, t11);\n    },\n    /*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/ push: function(t11) {\n        return this.addAt(this.items.length, t11);\n    },\n    /*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/ add: function(t11) {\n        return this.push(t11);\n    },\n    /*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/ removeAt: function(t11, e11 = !1) {\n        if (t11 < 0 && !0 == e11 && (t11 += this.items.length), t11 < 0 || t11 >= this.items.length) return null;\n        var n11 = this.items[t11];\n        return this.items.splice(t11, 1), this.onItemRemoved(n11, t11), n11;\n    },\n    /*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/ pop: function(t11) {\n        return this.removeAt(-1, !0);\n    },\n    /*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/ shift: function(t11) {\n        return this.removeAt(0);\n    },\n    /*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/ remove: function(t11) {\n        return this.removeAt(this.indexOf(t11));\n    },\n    /*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/ forEach: function(t11) {\n        if (this.isEmpty()) return this;\n        for(var e11 = 0; e11 < this.items.length && !1 !== t11(this.items[e11], e11, this); e11++);\n        return this;\n    },\n    /*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/ forEachCall: function(t11, ...e11) {\n        if (this.isEmpty()) return this;\n        for(var n11 = 0; n11 < this.items.length && !1 !== this.items[n11][t11](...e11); n11++);\n        return this;\n    },\n    /*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/ forEachRev: function(t11) {\n        if (this.isEmpty()) return this;\n        for(var e11 = this.items.length - 1; e11 >= 0 && !1 !== t11(this.items[e11], e11, this); e11--);\n        return this;\n    },\n    /*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/ forEachRevCall: function(t11, ...e11) {\n        if (this.isEmpty()) return this;\n        for(var n11 = this.items.length - 1; n11 >= 0 && !1 !== this.items[n11][t11](...e11); n11--);\n        return this;\n    },\n    /*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/ onBeforeItemAdded: function(t11) {\n        return !0;\n    },\n    /*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/ onItemAdded: function(t11) {},\n    /*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/ onItemRemoved: function(t11) {}\n}), $fMUO1 = parcelRequire(\"fMUO1\"); /**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRinn.Template.functions map, each of which have their own parameters.\n*/ \nlet $d261ccdafdfe12a9$var$Template = {\n    strict: !1,\n    /**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/ parseTemplate: function(t11, e11, n11, r11 = !1, i11 = 1) {\n        let s11 = \"string\", a11 = null, l11 = 0, o11 = 0, u11 = \"\", f11 = [], h11 = f11, c11 = !1;\n        function p11(t11) {\n            if (\"object\" == typeof t11) {\n                if (t11 instanceof Array) for(let e11 = 0; e11 < t11.length; e11++)p11(t11[e11]);\n                else t11.data = p11(t11.data);\n                return t11;\n            }\n            for(let e11 = 0; e11 < t11.length; e11++)if (\"\\\\\" == t11[e11]) {\n                let n11 = t11[e11 + 1];\n                switch(n11){\n                    case \"n\":\n                        n11 = \"\\n\";\n                        break;\n                    case \"r\":\n                        n11 = \"\\r\";\n                        break;\n                    case \"f\":\n                        n11 = \"\\f\";\n                        break;\n                    case \"v\":\n                        n11 = \"\\v\";\n                        break;\n                    case \"t\":\n                        n11 = \"\t\";\n                        break;\n                    case \"s\":\n                        n11 = \"s\";\n                        break;\n                    case '\"':\n                        n11 = '\"';\n                        break;\n                    case \"'\":\n                        n11 = \"'\";\n                }\n                t11 = t11.substr(0, e11) + n11 + t11.substr(e11 + 2);\n            }\n            return t11;\n        }\n        function d11(t11, r11) {\n            if (\"template\" == t11 ? r11 = $d261ccdafdfe12a9$var$Template.parseTemplate(r11, e11, n11, !0, 0) : \"parse\" == t11 ? (r11 = $d261ccdafdfe12a9$var$Template.parseTemplate(r11, e11, n11, !1, 0), t11 = \"base-string\", \"array\" == (0, $fMUO1.default).typeOf(r11) && (t11 = r11[0].type, r11 = r11[0].data)) : \"parse-trim-merge\" == t11 ? r11 = $d261ccdafdfe12a9$var$Template.parseTemplate(r11.trim().split(\"\\n\").map((t11)=>t11.trim()).join(\"\\n\"), e11, n11, !1, 0) : \"parse-merge\" == t11 ? r11 = $d261ccdafdfe12a9$var$Template.parseTemplate(r11, e11, n11, !1, 0) : \"parse-merge-alt\" == t11 && (r11 = $d261ccdafdfe12a9$var$Template.parseTemplate(r11, \"{\", \"}\", !1, 0)), \"parse-merge\" == t11 || \"parse-merge-alt\" == t11 || \"parse-trim-merge\" == t11) for(let t11 = 0; t11 < r11.length; t11++)f11.push(r11[t11]);\n            else f11.push({\n                type: t11,\n                data: r11\n            });\n            c11 && (h11.push(f11 = []), c11 = !1);\n        }\n        !0 === r11 && (t11 = t11.trim(), s11 = \"identifier\", l11 = 10, h11.push(f11 = [])), t11 += \"\\x00\";\n        for(let r11 = 0; r11 < t11.length; r11++){\n            if (\"\\\\\" == t11[r11]) {\n                u11 += \"\\\\\" + t11[++r11];\n                continue;\n            }\n            switch(l11){\n                case 0:\n                    \"\\x00\" == t11[r11] ? a11 = \"string\" : t11[r11] == e11 && \"<\" == t11[r11 + 1] ? (l11 = 1, o11 = 1, a11 = \"string\", s11 = \"parse-merge\") : t11[r11] == e11 && \"@\" == t11[r11 + 1] ? (l11 = 1, o11 = 1, a11 = \"string\", s11 = \"parse-trim-merge\", r11++) : t11[r11] == e11 && \":\" == t11[r11 + 1] ? (l11 = 12, o11 = 1, a11 = \"string\", s11 = \"string\", r11++) : t11[r11] == e11 ? (l11 = 1, o11 = 1, a11 = \"string\", s11 = \"template\") : u11 += t11[r11];\n                    break;\n                case 1:\n                    if (\"\\x00\" == t11[r11]) throw Error(\"Parse error: Unexpected end of template\");\n                    if (t11[r11] == n11) {\n                        if (--o11 < 0) throw Error(\"Parse error: Unmatched \" + n11);\n                        if (0 == o11) {\n                            l11 = 0, a11 = s11;\n                            break;\n                        }\n                    } else t11[r11] == e11 && o11++;\n                    u11 += t11[r11];\n                    break;\n                case 10:\n                    if (\"\\x00\" == t11[r11]) {\n                        a11 = s11;\n                        break;\n                    }\n                    if (\".\" == t11[r11]) {\n                        d11(s11, u11), d11(\"access\", \".\"), s11 = \"identifier\", u11 = \"\";\n                        break;\n                    }\n                    if (null != t11[r11].match(/[\\t\\n\\r\\f\\v ]/)) {\n                        for(a11 = s11, s11 = \"identifier\", c11 = !0; null != t11[r11].match(/[\\t\\n\\r\\f\\v ]/);)r11++;\n                        r11--;\n                        break;\n                    }\n                    if (t11[r11] == e11 && \"<\" == t11[r11 + 1]) {\n                        u11 && (a11 = s11), l11 = 11, o11 = 1, s11 = \"parse-merge\";\n                        break;\n                    } else if (t11[r11] == e11 && \"@\" == t11[r11 + 1]) {\n                        u11 && (a11 = s11), l11 = 11, o11 = 1, s11 = \"parse-trim-merge\", r11++;\n                        break;\n                    } else if ('\"' == t11[r11]) {\n                        u11 && (a11 = s11), l11 = 14, o11 = 1, s11 = \"parse-merge\";\n                        break;\n                    } else if (\"'\" == t11[r11]) {\n                        u11 && (a11 = s11), l11 = 15, o11 = 1, s11 = \"parse-merge\";\n                        break;\n                    } else if (\"`\" == t11[r11]) {\n                        u11 && (a11 = s11), l11 = 16, o11 = 1, s11 = \"parse-merge-alt\";\n                        break;\n                    } else if (t11[r11] == e11 && \":\" == t11[r11 + 1]) {\n                        u11 && (a11 = s11), l11 = 13, o11 = 1, s11 = \"string\", r11++;\n                        break;\n                    } else if (t11[r11] == e11) {\n                        u11 && d11(s11, u11), l11 = 11, o11 = 1, s11 = \"parse\", u11 = \"\" + t11[r11];\n                        break;\n                    }\n                    \"identifier\" != s11 && (d11(s11, u11), u11 = \"\", s11 = \"identifier\"), u11 += t11[r11];\n                    break;\n                case 11:\n                    if (\"\\x00\" == t11[r11]) throw Error(\"Parse error: Unexpected end of template\");\n                    if (t11[r11] == n11) {\n                        if (--o11 < 0) throw Error(\"Parse error: Unmatched \" + n11);\n                        if (0 == o11 && (l11 = 10, \"parse-merge\" == s11 || \"parse-merge-alt\" == s11 || \"parse-trim-merge\" == s11)) break;\n                    } else t11[r11] == e11 && o11++;\n                    u11 += t11[r11];\n                    break;\n                case 12:\n                    if (\"\\x00\" == t11[r11]) throw Error(\"Parse error: Unexpected end of template\");\n                    if (t11[r11] == n11) {\n                        if (--o11 < 0) throw Error(\"Parse error: Unmatched \" + n11);\n                        if (0 == o11) {\n                            0 == u11.length || \"<\" == u11[0] || \"[\" == u11[0] || \" \" == u11[0] || (u11 = e11 + u11 + n11), l11 = 0, a11 = s11;\n                            break;\n                        }\n                    } else t11[r11] == e11 && o11++;\n                    u11 += t11[r11];\n                    break;\n                case 13:\n                    if (\"\\x00\" == t11[r11]) throw Error(\"Parse error: Unexpected end of template\");\n                    if (t11[r11] == n11) {\n                        if (--o11 < 0) throw Error(\"Parse error: Unmatched \" + n11);\n                        if (0 == o11) {\n                            \"<\" == u11[0] || \"[\" == u11[0] || \" \" == u11[0] || (u11 = e11 + u11 + n11), l11 = 10;\n                            break;\n                        }\n                    } else t11[r11] == e11 && o11++;\n                    u11 += t11[r11];\n                    break;\n                case 14:\n                    if (\"\\x00\" == t11[r11]) throw Error(\"Parse error: Unexpected end of template\");\n                    if ('\"' == t11[r11]) {\n                        if (--o11 < 0) throw Error('Parse error: Unmatched \"');\n                        if (0 == o11 && (l11 = 10, \"parse-merge\" == s11 || \"parse-merge-alt\" == s11 || \"parse-trim-merge\" == s11)) break;\n                    }\n                    u11 += t11[r11];\n                    break;\n                case 15:\n                    if (\"\\x00\" == t11[r11]) throw Error(\"Parse error: Unexpected end of template\");\n                    if (\"'\" == t11[r11]) {\n                        if (--o11 < 0) throw Error(\"Parse error: Unmatched '\");\n                        if (0 == o11 && (l11 = 10, \"parse-merge\" == s11 || \"parse-merge-alt\" == s11 || \"parse-trim-merge\" == s11)) break;\n                    }\n                    u11 += t11[r11];\n                    break;\n                case 16:\n                    if (\"\\x00\" == t11[r11]) throw Error(\"Parse error: Unexpected end of template\");\n                    if (\"`\" == t11[r11]) {\n                        if (--o11 < 0) throw Error(\"Parse error: Unmatched `\");\n                        if (0 == o11 && (l11 = 10, \"parse-merge\" == s11 || \"parse-merge-alt\" == s11 || \"parse-trim-merge\" == s11)) break;\n                    }\n                    u11 += t11[r11];\n            }\n            a11 && (d11(a11, u11), a11 = u11 = \"\");\n        }\n        if (!r11) {\n            let t11 = 0;\n            for(; t11 < h11.length;)if (\"string\" == h11[t11].type && \"\" == h11[t11].data) h11.splice(t11, 1);\n            else break;\n            for(t11 = h11.length - 1; t11 > 0;)if (\"string\" == h11[t11].type && \"\" == h11[t11].data) h11.splice(t11--, 1);\n            else break;\n            0 == h11.length && h11.push({\n                type: \"string\",\n                data: \"\"\n            });\n        }\n        return i11 && p11(h11), h11;\n    },\n    /**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/ parse: function(t11) {\n        return this.parseTemplate(t11.trim(), \"[\", \"]\", !1);\n    },\n    /**\n\t**\tRemoves all static parts from a parsed template.\n\t**\n\t**\t>> array clean (array parts);\n\t*/ clean: function(t11) {\n        for(let e11 = 0; e11 < t11.length; e11++)\"template\" != t11[e11].type && (t11.splice(e11, 1), e11--);\n        return t11;\n    },\n    /**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/ expand: function(t11, e11, n11 = \"text\", r11 = \"base-string\") {\n        let i11 = []; // Expand variable parts.\n        if (\"var\" == r11) {\n            let n11 = !0, r11 = !1, s11 = e11, a11 = null, l11 = !0, o11 = \"\";\n            for(let i11 = 0; i11 < t11.length && null != e11; i11++)switch(t11[i11].type){\n                case \"identifier\":\n                case \"string\":\n                    o11 += t11[i11].data, a11 = null;\n                    break;\n                case \"template\":\n                    o11 += \"object\" != typeof (a11 = this.expand(t11[i11].data, s11, \"arg\", \"template\")) ? a11 : \"\";\n                    break;\n                case \"base-string\":\n                    o11 += this.expand(t11[i11].data, s11, \"arg\", \"base-string\"), a11 = null;\n                    break;\n                case \"access\":\n                    if (a11 && \"object\" == typeof a11) e11 = a11;\n                    else {\n                        for(\"\" == o11 && (o11 = \"this\");;)if (\"!\" == o11[0]) o11 = o11.substr(1), n11 = !1;\n                        else if (\"$\" == o11[0]) o11 = o11.substr(1), r11 = !0;\n                        else break;\n                        if (\"this\" != o11 && null != e11) {\n                            let t11 = e11;\n                            null === (e11 = o11 in e11 ? e11[o11] : null) && l11 && o11 in $d261ccdafdfe12a9$var$Template.functions && (e11 = $d261ccdafdfe12a9$var$Template.functions[o11](null, null, t11)), l11 = !1;\n                        }\n                    }\n                    o11 = \"\";\n            }\n            for(; \"\" != o11;)if (\"!\" == o11[0]) o11 = o11.substr(1), n11 = !1;\n            else if (\"$\" == o11[0]) o11 = o11.substr(1), r11 = !0;\n            else break;\n            if (\"this\" != o11) {\n                let n11 = !1;\n                if (null != e11 ? o11 in e11 ? e11 = e11[o11] : (n11 = !0, e11 = null) : n11 = !0, n11 && 1 == t11.length && !0 == $d261ccdafdfe12a9$var$Template.strict) throw Error(\"Expression function `\" + o11 + \"` not found.\");\n            }\n            \"string\" == typeof e11 && (n11 && (e11 = e11.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")), r11 && (e11 = '\"' + e11 + '\"')), i11.push(e11);\n        } // Expand variable parts and returns a reference to it.\n        if (\"varref\" == n11) {\n            let n11 = e11, r11 = null, i11 = !0, s11 = \"\";\n            for(let a11 = 0; a11 < t11.length && null != e11; a11++)switch(t11[a11].type){\n                case \"identifier\":\n                case \"string\":\n                    s11 += t11[a11].data, r11 = null;\n                    break;\n                case \"template\":\n                    s11 += \"object\" != typeof (r11 = this.expand(t11[a11].data, n11, \"arg\", \"template\")) ? r11 : \"\";\n                    break;\n                case \"base-string\":\n                    s11 += this.expand(t11[a11].data, n11, \"arg\", \"base-string\"), r11 = null;\n                    break;\n                case \"access\":\n                    if (r11 && \"object\" == typeof r11) e11 = r11;\n                    else {\n                        for(\"\" == s11 && (s11 = \"this\");;)if (\"!\" == s11[0]) s11 = s11.substr(1);\n                        else if (\"$\" == s11[0]) s11 = s11.substr(1);\n                        else break;\n                        if (\"this\" != s11 && null != e11) {\n                            let t11 = e11;\n                            null === (e11 = s11 in e11 ? e11[s11] : null) && i11 && s11 in $d261ccdafdfe12a9$var$Template.functions && (e11 = $d261ccdafdfe12a9$var$Template.functions[s11](null, null, t11)), i11 = !1;\n                        }\n                    }\n                    s11 = \"\";\n            }\n            for(; \"\" != s11;)if (\"!\" == s11[0]) s11 = s11.substr(1);\n            else if (\"$\" == s11[0]) s11 = s11.substr(1);\n            else break;\n            return \"this\" != s11 ? [\n                e11,\n                s11\n            ] : null;\n        } // Expand function parts.\n        if (\"fn\" == r11) {\n            var s11 = [];\n            if (s11.push($d261ccdafdfe12a9$var$Template.expand(t11[0], e11, \"text\", \"base-string\")), \"_\" + s11[0] in $d261ccdafdfe12a9$var$Template.functions && (s11[0] = \"_\" + s11[0]), !(s11[0] in $d261ccdafdfe12a9$var$Template.functions)) {\n                if (!0 == $d261ccdafdfe12a9$var$Template.strict) throw Error(\"Expression function `\" + s11[0] + \"` not found.\");\n                return `(Unknown: ${s11[0]})`;\n            }\n            if (\"_\" == s11[0][0]) return $d261ccdafdfe12a9$var$Template.functions[s11[0]](t11, e11);\n            for(let n11 = 1; n11 < t11.length; n11++)s11.push($d261ccdafdfe12a9$var$Template.expand(t11[n11], e11, \"arg\", \"base-string\"));\n            i11.push($d261ccdafdfe12a9$var$Template.functions[s11[0]](s11, t11, e11));\n        } // Template mode.\n        if (\"template\" == r11) {\n            if (1 == t11.length) {\n                if (1 == t11[0].length && \"string\" == t11[0][0].type) return t11[0][0].data;\n                if (1 == t11[0].length && \"identifier\" == t11[0][0].type) {\n                    let r11 = t11[0][0].data;\n                    if (r11 in $d261ccdafdfe12a9$var$Template.functions || \"_\" + r11 in $d261ccdafdfe12a9$var$Template.functions) return $d261ccdafdfe12a9$var$Template.expand(t11, e11, n11, \"fn\");\n                }\n                return $d261ccdafdfe12a9$var$Template.expand(t11[0], e11, n11, \"var\");\n            }\n            return $d261ccdafdfe12a9$var$Template.expand(t11, e11, n11, \"fn\");\n        } // Expand parts.\n        if (\"base-string\" == r11) {\n            let r11 = -1;\n            for (let s11 of t11){\n                let a11 = null;\n                switch(r11++, s11.type){\n                    case \"template\":\n                        a11 = $d261ccdafdfe12a9$var$Template.expand(s11.data, e11, n11, \"template\");\n                        break;\n                    case \"string\":\n                    case \"identifier\":\n                        a11 = s11.data;\n                        break;\n                    case \"base-string\":\n                        a11 = $d261ccdafdfe12a9$var$Template.expand(s11.data, e11, n11, \"base-string\");\n                }\n                \"void\" != n11 && (\"last\" != n11 || r11 == t11.length - 1) && i11.push(a11);\n            }\n        } // Return types for direct objects.\n        if (\"obj\" == n11) return i11;\n        if (\"last\" == n11) return \"Rose\\\\Arry\" == typeOf(i11) && (i11 = i11[0]), i11; // When the output is not really needed.\n        if (\"void\" == n11) return null; // Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n        if (\"arg\" == n11) return \"array\" == (0, $fMUO1.default).typeOf(i11) ? 1 != i11.length ? i11.join(\"\") : i11[0] : i11;\n        if (\"text\" == n11 && \"array\" == (0, $fMUO1.default).typeOf(i11)) {\n            let t11 = (e11)=>null != e11 && \"object\" == typeof e11 ? \"map\" in e11 ? e11.map(t11).join(\"\") : \"join\" in e11 ? e11.join(\"\") : e11.toString() : e11;\n            i11 = i11.map(t11).join(\"\");\n        }\n        return i11;\n    },\n    /**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/ compile: function(t11) {\n        return t11 = $d261ccdafdfe12a9$var$Template.parse(t11), function(e11 = null, n11 = \"text\") {\n            return $d261ccdafdfe12a9$var$Template.expand(t11, e11 || {}, n11);\n        };\n    },\n    /**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/ eval: function(t11, e11 = null, n11 = \"text\") {\n        return t11 = $d261ccdafdfe12a9$var$Template.parse(t11), $d261ccdafdfe12a9$var$Template.expand(t11, e11 || {}, n11);\n    },\n    /**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/ value: function(t11, e11 = null) {\n        return \"array\" != (0, $fMUO1.default).typeOf(t11) ? t11 : $d261ccdafdfe12a9$var$Template.expand(t11, e11 || {}, \"arg\");\n    },\n    /**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/ register: function(t11, e11) {\n        $d261ccdafdfe12a9$var$Template.functions[t11] = e11;\n    },\n    /**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/ call: function(t11, e11, n11 = null) {\n        return t11 in $d261ccdafdfe12a9$var$Template.functions ? $d261ccdafdfe12a9$var$Template.functions[t11](e11, null, n11) : null;\n    },\n    /**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/ getNamedValues: function(t11, e11, n11 = 1, r11 = !0) {\n        let i11 = {}, s11 = 0;\n        for(; n11 < t11.length; n11 += 2){\n            let a11 = $d261ccdafdfe12a9$var$Template.expand(t11[n11], e11, \"arg\");\n            s11 || (s11 = a11.startsWith(\":\") ? 1 : a11.endsWith(\":\") ? 2 : 3), 1 == s11 ? a11 = a11.substr(1) : 2 == s11 && (a11 = a11.substr(0, a11.length - 1)), r11 ? i11[a11] = $d261ccdafdfe12a9$var$Template.expand(t11[n11 + 1], e11, \"arg\") : i11[a11] = t11[n11 + 1];\n        }\n        return i11;\n    }\n}; /**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/ \n$d261ccdafdfe12a9$var$Template.functions = {\n    global: function(t11) {\n        return globalThis;\n    },\n    null: function(t11) {\n        return null;\n    },\n    true: function(t11) {\n        return !0;\n    },\n    false: function(t11) {\n        return !1;\n    },\n    len: function(t11) {\n        return t11[1].toString().length;\n    },\n    int: function(t11) {\n        return ~~t11[1];\n    },\n    str: function(t11) {\n        return t11[1].toString();\n    },\n    float: function(t11) {\n        return parseFloat(t11[1]);\n    },\n    chr: function(t11) {\n        return String.fromCharCode(t11[1]);\n    },\n    ord: function(t11) {\n        return t11[1].toString().charCodeAt(0);\n    },\n    not: function(t11) {\n        return !t11[1];\n    },\n    neg: function(t11) {\n        return -t11[1];\n    },\n    abs: function(t11) {\n        return Math.abs(t11[1]);\n    },\n    and: function(t11) {\n        for(let e11 = 1; e11 < t11.length; e11++)if (!t11[e11]) return !1;\n        return !0;\n    },\n    or: function(t11) {\n        for(let e11 = 1; e11 < t11.length; e11++)if (~~t11[e11]) return !0;\n        return !1;\n    },\n    eq: function(t11) {\n        return t11[1] == t11[2];\n    },\n    ne: function(t11) {\n        return t11[1] != t11[2];\n    },\n    lt: function(t11) {\n        return t11[1] < t11[2];\n    },\n    le: function(t11) {\n        return t11[1] <= t11[2];\n    },\n    gt: function(t11) {\n        return t11[1] > t11[2];\n    },\n    ge: function(t11) {\n        return t11[1] >= t11[2];\n    },\n    isnotnull: function(t11) {\n        return !!t11[1];\n    },\n    isnull: function(t11) {\n        return !t11[1];\n    },\n    iszero: function(t11) {\n        return 0 == parseInt(t11[1]);\n    },\n    \"eq?\": function(t11) {\n        return t11[1] == t11[2];\n    },\n    \"ne?\": function(t11) {\n        return t11[1] != t11[2];\n    },\n    \"lt?\": function(t11) {\n        return t11[1] < t11[2];\n    },\n    \"le?\": function(t11) {\n        return t11[1] <= t11[2];\n    },\n    \"gt?\": function(t11) {\n        return t11[1] > t11[2];\n    },\n    \"ge?\": function(t11) {\n        return t11[1] >= t11[2];\n    },\n    \"notnull?\": function(t11) {\n        return !!t11[1];\n    },\n    \"null?\": function(t11) {\n        return !t11[1];\n    },\n    \"zero?\": function(t11) {\n        return 0 == parseInt(t11[1]);\n    },\n    typeof: function(t11) {\n        return (0, $fMUO1.default).typeOf(t11[1]);\n    },\n    \"*\": function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 *= t11[n11];\n        return e11;\n    },\n    \"/\": function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 /= t11[n11];\n        return e11;\n    },\n    \"+\": function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 -= -t11[n11];\n        return e11;\n    },\n    \"-\": function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 -= t11[n11];\n        return e11;\n    },\n    mul: function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 *= t11[n11];\n        return e11;\n    },\n    div: function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 /= t11[n11];\n        return e11;\n    },\n    sum: function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 -= -t11[n11];\n        return e11;\n    },\n    sub: function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 -= t11[n11];\n        return e11;\n    },\n    mod: function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 %= t11[n11];\n        return e11;\n    },\n    pow: function(t11) {\n        let e11 = t11[1];\n        for(let n11 = 2; n11 < t11.length; n11++)e11 = Math.pow(e11, t11[n11]);\n        return e11;\n    },\n    /**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tdump <expr>\n\t*/ dump: function(t11) {\n        return JSON.stringify(t11[1]);\n    },\n    /**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/ _set: function(t11, e11) {\n        for(let n11 = 1; n11 + 1 < t11.length; n11 += 2){\n            let r11 = $d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11);\n            if (t11[n11].length > 1) {\n                let i11 = $d261ccdafdfe12a9$var$Template.expand(t11[n11], e11, \"varref\");\n                null != i11 && (i11[0][i11[1]] = r11);\n            } else e11[$d261ccdafdfe12a9$var$Template.value(t11[n11], e11)] = r11;\n        }\n        return \"\";\n    },\n    /**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/ _unset: function(t11, e11) {\n        for(let n11 = 1; n11 < t11.length; n11++)if (t11[n11].length > 1) {\n            let r11 = $d261ccdafdfe12a9$var$Template.expand(t11[n11], e11, \"varref\");\n            null != r11 && delete r11[0][r11[1]];\n        } else delete e11[$d261ccdafdfe12a9$var$Template.value(t11[n11], e11)];\n        return null;\n    },\n    /**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/ trim: function(t11) {\n        return t11[1] ? \"object\" == typeof t11[1] ? t11[1].map((t11)=>t11.trim()) : t11[1].trim() : \"\";\n    },\n    /**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/ upper: function(t11) {\n        return t11[1] ? \"object\" == typeof t11[1] ? t11[1].map((t11)=>t11.toUpperCase()) : t11[1].toUpperCase() : \"\";\n    },\n    /**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/ lower: function(t11) {\n        return t11[1] ? \"object\" == typeof t11[1] ? t11[1].map((t11)=>t11.toLowerCase()) : t11[1].toLowerCase() : \"\";\n    },\n    /**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/ substr: function(t11) {\n        let e11 = t11[t11.length - 1].toString(), n11 = 0, r11 = null;\n        return 4 == t11.length ? (n11 = ~~t11[1], r11 = ~~t11[2]) : (n11 = ~~t11[1], r11 = null), n11 < 0 && (n11 += e11.length), r11 < 0 && (r11 += e11.length), null === r11 && (r11 = e11.length - n11), e11.substr(n11, r11);\n    },\n    /**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/ replace: function(t11) {\n        return t11[3].split(t11[1]).join(t11[2]);\n    },\n    /**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/ nl2br: function(t11) {\n        return t11[1] ? \"object\" == typeof t11[1] ? t11[1].map((t11)=>t11.replace(/\\n/g, \"<br/>\")) : t11[1].replace(/\\n/g, \"<br/>\") : \"\";\n    },\n    /**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/ \"%\": function(t11) {\n        t11.shift();\n        var e11 = t11.shift();\n        let n11 = \"\";\n        for(let r11 = 0; r11 < t11.length; r11++)if (\"array\" == (0, $fMUO1.default).typeOf(t11[r11])) {\n            n11 += `<${e11}>`;\n            for(let e11 = 0; e11 < t11[r11].length; e11++)n11 += t11[r11][e11];\n            n11 += `</${e11}>`;\n        } else n11 += `<${e11}>${t11[r11]}</${e11}>`;\n        return n11;\n    },\n    /**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/ \"%%\": function(t11) {\n        t11.shift();\n        var e11 = t11.shift();\n        let n11 = \"\", r11 = \"\";\n        for(let e11 = 0; e11 < t11.length; e11 += 2)e11 + 1 < t11.length ? n11 += ` ${t11[e11]}=\"${t11[e11 + 1]}\"` : r11 = t11[e11];\n        return r11 ? `<${e11}${n11}>${r11}</${e11}>` : `<${e11}${n11}/>`;\n    },\n    /**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/ join: function(t11) {\n        return t11[2] && \"array\" == (0, $fMUO1.default).typeOf(t11[2]) ? t11[2].join(t11[1]) : \"\";\n    },\n    /**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/ split: function(t11) {\n        return t11[2] && \"string\" == typeof t11[2] ? t11[2].split(t11[1]) : [];\n    },\n    /**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/ keys: function(t11) {\n        return t11[1] && \"object\" == typeof t11[1] ? Object.keys(t11[1]) : [];\n    },\n    /**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/ values: function(t11) {\n        return t11[1] && \"object\" == typeof t11[1] ? Object.values(t11[1]) : [];\n    },\n    /**\n\t**\tConstructs a string obtained by concatenating the expanded template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/ _each: function(t11, e11) {\n        let n11 = $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"arg\"), r11 = $d261ccdafdfe12a9$var$Template.expand(t11[2], e11, \"arg\"), i11 = \"\", s11 = 0;\n        if (!r11) return i11;\n        for(let a11 in r11)e11[n11] = r11[a11], e11[n11 + \"##\"] = s11++, e11[n11 + \"#\"] = a11, i11 += $d261ccdafdfe12a9$var$Template.expand(t11[3], e11, \"text\");\n        return delete e11[n11], delete e11[n11 + \"##\"], delete e11[n11 + \"#\"], i11;\n    },\n    /**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/ _foreach: function(t11, e11) {\n        let n11 = $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"arg\"), r11 = $d261ccdafdfe12a9$var$Template.expand(t11[2], e11, \"arg\"), i11 = 0;\n        if (!r11) return null;\n        for(let s11 in r11)e11[n11] = r11[s11], e11[n11 + \"##\"] = i11++, e11[n11 + \"#\"] = s11, $d261ccdafdfe12a9$var$Template.expand(t11[3], e11, \"text\");\n        return delete e11[n11], delete e11[n11 + \"##\"], delete e11[n11 + \"#\"], null;\n    },\n    /**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/ \"_?\": function(t11, e11) {\n        return $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"arg\") ? $d261ccdafdfe12a9$var$Template.expand(t11[2], e11, \"arg\") : t11.length > 3 ? $d261ccdafdfe12a9$var$Template.expand(t11[3], e11, \"arg\") : \"\";\n    },\n    /**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/ \"_??\": function(t11, e11) {\n        return $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"arg\") || $d261ccdafdfe12a9$var$Template.expand(t11[2], e11, \"arg\");\n    },\n    /**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/ _if: function(t11, e11) {\n        for(let n11 = 0; n11 < t11.length; n11 += 3){\n            if (\"else\" == $d261ccdafdfe12a9$var$Template.expand(t11[n11], e11, \"arg\")) return $d261ccdafdfe12a9$var$Template.expand(t11[n11 + 1], e11, \"text\");\n            if ($d261ccdafdfe12a9$var$Template.expand(t11[n11 + 1], e11, \"arg\")) return $d261ccdafdfe12a9$var$Template.expand(t11[n11 + 2], e11, \"text\");\n        }\n        return \"\";\n    },\n    /**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/ _switch: function(t11, e11) {\n        let n11 = $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"arg\");\n        for(let r11 = 2; r11 < t11.length; r11 += 2){\n            let i11 = $d261ccdafdfe12a9$var$Template.expand(t11[r11], e11, \"arg\");\n            if (i11 == n11 || \"default\" == i11) return $d261ccdafdfe12a9$var$Template.expand(t11[r11 + 1], e11, \"text\");\n        }\n        return \"\";\n    },\n    /**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/ _break: function(t11, e11) {\n        throw Error(\"EXC_BREAK\");\n    },\n    /**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/ _continue: function(t11, e11) {\n        throw Error(\"EXC_CONTINUE\");\n    },\n    /**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/ _repeat: function(t11, e11) {\n        if (t11.length < 3 || (1 & t11.length) != 1) return \"(`repeat`: Wrong number of parameters)\";\n        let n11 = $d261ccdafdfe12a9$var$Template.value(t11[1], e11), r11 = null, i11 = 0, s11 = null, a11 = null;\n        for(let n11 = 2; n11 < t11.length - 1; n11 += 2)switch($d261ccdafdfe12a9$var$Template.value(t11[n11], e11).toLowerCase()){\n            case \"from\":\n                i11 = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n                break;\n            case \"to\":\n                s11 = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n                break;\n            case \"count\":\n                r11 = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n                break;\n            case \"step\":\n                a11 = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n        }\n        let l11 = t11[t11.length - 1], o11 = [];\n        if (null !== s11) {\n            if (null === a11 && (a11 = i11 > s11 ? -1 : 1), a11 < 0) for(let t11 = i11; t11 >= s11; t11 += a11)try {\n                e11[n11] = t11, o11.push($d261ccdafdfe12a9$var$Template.value(l11, e11));\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n            else for(let t11 = i11; t11 <= s11; t11 += a11)try {\n                e11[n11] = t11, o11.push($d261ccdafdfe12a9$var$Template.value(l11, e11));\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n        } else if (null !== r11) {\n            null === a11 && (a11 = 1);\n            for(let t11 = i11; r11 > 0; r11--, t11 += a11)try {\n                e11[n11] = t11, o11.push($d261ccdafdfe12a9$var$Template.value(l11, e11));\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n        } else {\n            null === a11 && (a11 = 1);\n            for(let t11 = i11;; t11 += a11)try {\n                e11[n11] = t11, o11.push($d261ccdafdfe12a9$var$Template.value(l11, e11));\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n        }\n        return delete e11[n11], o11;\n    },\n    /**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/ _for: function(t11, e11) {\n        if (t11.length < 3 || (1 & t11.length) != 1) return \"(`for`: Wrong number of parameters)\";\n        let n11 = $d261ccdafdfe12a9$var$Template.value(t11[1], e11), r11 = null, i11 = 0;\n        to = null;\n        let s11 = null;\n        for(let n11 = 2; n11 < t11.length - 1; n11 += 2)switch((value = $d261ccdafdfe12a9$var$Template.value(t11[n11], e11)).toLowerCase()){\n            case \"from\":\n                i11 = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n                break;\n            case \"to\":\n                to = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n                break;\n            case \"count\":\n                r11 = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n                break;\n            case \"step\":\n                s11 = parseFloat($d261ccdafdfe12a9$var$Template.value(t11[n11 + 1], e11));\n        }\n        let a11 = t11[t11.length - 1];\n        if (null !== to) {\n            if (null === s11 && (s11 = i11 > to ? -1 : 1), s11 < 0) for(let t11 = i11; t11 >= to; t11 += s11)try {\n                e11[n11] = t11, $d261ccdafdfe12a9$var$Template.value(a11, e11);\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n            else for(let t11 = i11; t11 <= to; t11 += s11)try {\n                e11[n11] = t11, $d261ccdafdfe12a9$var$Template.value(a11, e11);\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n        } else if (null !== r11) {\n            null === s11 && (s11 = 1);\n            for(let t11 = i11; r11 > 0; r11--, t11 += s11)try {\n                e11[n11] = t11, $d261ccdafdfe12a9$var$Template.value(a11, e11);\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n        } else {\n            null === s11 && (s11 = 1);\n            for(let t11 = i11;; t11 += s11)try {\n                e11[n11] = t11, $d261ccdafdfe12a9$var$Template.value(a11, e11);\n            } catch (e11) {\n                let t11 = e11.message;\n                if (\"EXC_BREAK\" == t11) break;\n                if (\"EXC_CONTINUE\" == t11) continue;\n                throw e11;\n            }\n        }\n        return delete e11[n11], null;\n    },\n    /**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/ _loop: function(t11, e11) {\n        if (t11.length < 2) return \"(`loop`: Wrong number of parameters)\";\n        let n11 = t11[1];\n        for(;;)try {\n            $d261ccdafdfe12a9$var$Template.value(n11, e11);\n        } catch (e11) {\n            let t11 = e11.message;\n            if (\"EXC_BREAK\" == t11) break;\n            if (\"EXC_CONTINUE\" == t11) continue;\n            throw e11;\n        }\n        return null;\n    },\n    /**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/ _echo: function(t11, e11) {\n        let n11 = \"\";\n        for(let r11 = 1; r11 < t11.length; r11++)n11 += $d261ccdafdfe12a9$var$Template.expand(t11[r11], e11, \"arg\");\n        return console.log(n11), \"\";\n    },\n    /**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/ \"_#\": function(t11, e11) {\n        let n11 = [];\n        for(let r11 = 1; r11 < t11.length; r11++)n11.push($d261ccdafdfe12a9$var$Template.expand(t11[r11], e11, \"arg\"));\n        return n11;\n    },\n    /**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/ \"_##\": function(t11, e11) {\n        let n11 = [];\n        for(let e11 = 1; e11 < t11.length; e11++)n11.push(t11[e11]);\n        return n11;\n    },\n    /**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/ \"_&\": function(t11, e11) {\n        return $d261ccdafdfe12a9$var$Template.getNamedValues(t11, e11, 1, !0);\n    },\n    /**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/ \"_&&\": function(t11, e11) {\n        return $d261ccdafdfe12a9$var$Template.getNamedValues(t11, e11, 1, !1);\n    },\n    /**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/ contains: function(t11, e11, n11) {\n        let r11 = t11[1];\n        if (\"object\" != typeof r11) return n11.err = \"Argument is not a Map\", !1;\n        let i11 = \"\";\n        for(let e11 = 2; e11 < t11.length; e11++)t11[e11] in r11 || (i11 += \", \" + t11[e11]);\n        return \"\" == i11 || (n11.err = i11.substr(1), !1);\n    },\n    /**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/ has: function(t11, e11, n11) {\n        let r11 = t11[2];\n        return \"object\" == (0, $fMUO1.default).typeOf(r11) && t11[1] in r11;\n    },\n    /**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/ _map: function(t11, e11) {\n        let n11 = $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"arg\"), r11 = $d261ccdafdfe12a9$var$Template.expand(t11[2], e11, \"arg\");\n        if (!r11) return r11;\n        let i11 = \"array\" == (0, $fMUO1.default).typeOf(r11), s11 = i11 ? [] : {}, a11 = 0;\n        for(let l11 in r11)e11[n11] = r11[l11], e11[n11 + \"##\"] = a11++, e11[n11 + \"#\"] = l11, i11 ? s11.push($d261ccdafdfe12a9$var$Template.expand(t11[3], e11, \"arg\")) : s11[l11] = $d261ccdafdfe12a9$var$Template.expand(t11[3], e11, \"arg\");\n        return delete e11[n11], delete e11[n11 + \"##\"], delete e11[n11 + \"#\"], s11;\n    },\n    /**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/ _filter: function(t11, e11) {\n        let n11 = $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"arg\"), r11 = $d261ccdafdfe12a9$var$Template.expand(t11[2], e11, \"arg\");\n        if (!r11) return r11;\n        let i11 = \"array\" == (0, $fMUO1.default).typeOf(r11), s11 = i11 ? [] : {}, a11 = 0;\n        for(let l11 in r11)e11[n11] = r11[l11], e11[n11 + \"##\"] = a11++, e11[n11 + \"#\"] = l11, ~~$d261ccdafdfe12a9$var$Template.expand(t11[3], e11, \"arg\") && (i11 ? s11.push(r11[l11]) : s11[l11] = r11[l11]);\n        return delete e11[n11], delete e11[n11 + \"##\"], delete e11[n11 + \"#\"], s11;\n    },\n    /**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/ expand: function(t11, e11, n11) {\n        return $d261ccdafdfe12a9$var$Template.expand($d261ccdafdfe12a9$var$Template.parseTemplate(t11[1], \"{\", \"}\"), 3 == t11.length ? t11[2] : n11);\n    },\n    /**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/ _call: function(t11, e11) {\n        let n11 = $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"varref\");\n        if (!n11 || \"function\" != typeof n11[0][n11[1]]) throw Error(\"Expression is not a function: \" + $d261ccdafdfe12a9$var$Template.expand(t11[1], e11, \"obj\").map((t11)=>null == t11 ? \".\" : t11).join(\"\"));\n        let r11 = [];\n        for(let n11 = 2; n11 < t11.length; n11++)r11.push($d261ccdafdfe12a9$var$Template.value(t11[n11], e11));\n        return n11[0][n11[1]](...r11);\n    }\n};\nvar $d261ccdafdfe12a9$export$2e2bcd8739ae039 = $d261ccdafdfe12a9$var$Template;\nlet $9ffb7151b8b2d038$export$eefcfe56efaaa57d = $fMUO1.default, $9ffb7151b8b2d038$export$4c85e640eb41c31b = $2394d727dfd6a212$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$d61e24a684f9e51 = $13eda5a5dec8010f$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$ec8b666c5fe2c75a = $c43adaf9cb6d6dd3$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$a1edc412be3e1841 = $4dfa0622e14576ea$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$59eced47f477f85a = $0890bed8a163f087$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$19342e026b58ebb7 = $2710795e2347ba2a$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$3a9581c9ade29768 = $32651d5f38a8a64c$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$fb8073518f34e6ec = $2bcce06113365814$export$2e2bcd8739ae039, $9ffb7151b8b2d038$export$14416b8d99d47caa = $d261ccdafdfe12a9$export$2e2bcd8739ae039;\n //# sourceMappingURL=rinn.m.js.map\n\n});\n\nparcelRequire.register(\"8AUAG\", function(module, exports) {\n(function(root) {\n    // Detect free variables `exports`.\n    var freeExports = exports;\n    // Detect free variable `module`.\n    var freeModule = module && module.exports == freeExports && module;\n    // Detect free variable `global`, from Node.js or Browserified code, and use\n    // it as `root`.\n    var freeGlobal = typeof $parcel$global == \"object\" && $parcel$global;\n    if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) root = freeGlobal;\n    /*--------------------------------------------------------------------------*/ var InvalidCharacterError = function(message) {\n        this.message = message;\n    };\n    InvalidCharacterError.prototype = new Error;\n    InvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n    var error = function(message) {\n        // Note: the error messages used throughout this file match those used by\n        // the native `atob`/`btoa` implementation in Chromium.\n        throw new InvalidCharacterError(message);\n    };\n    var TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    // http://whatwg.org/html/common-microsyntaxes.html#space-character\n    var REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n    // `decode` is designed to be fully compatible with `atob` as described in the\n    // HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n    // The optimized base64-decoding algorithm used is based on @atk’s excellent\n    // implementation. https://gist.github.com/atk/1020396\n    var decode = function(input) {\n        input = String(input).replace(REGEX_SPACE_CHARACTERS, \"\");\n        var length = input.length;\n        if (length % 4 == 0) {\n            input = input.replace(/==?$/, \"\");\n            length = input.length;\n        }\n        if (length % 4 == 1 || // http://whatwg.org/C#alphanumeric-ascii-characters\n        /[^+a-zA-Z0-9/]/.test(input)) error(\"Invalid character: the string to be decoded is not correctly encoded.\");\n        var bitCounter = 0;\n        var bitStorage;\n        var buffer;\n        var output = \"\";\n        var position = -1;\n        while(++position < length){\n            buffer = TABLE.indexOf(input.charAt(position));\n            bitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n            // Unless this is the first of a group of 4 characters…\n            if (bitCounter++ % 4) // …convert the first 8 bits to a single ASCII character.\n            output += String.fromCharCode(0xFF & bitStorage >> (-2 * bitCounter & 6));\n        }\n        return output;\n    };\n    // `encode` is designed to be fully compatible with `btoa` as described in the\n    // HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n    var encode = function(input) {\n        input = String(input);\n        if (/[^\\0-\\xFF]/.test(input)) // Note: no need to special-case astral symbols here, as surrogates are\n        // matched, and the input is supposed to only contain ASCII anyway.\n        error(\"The string to be encoded contains characters outside of the Latin1 range.\");\n        var padding = input.length % 3;\n        var output = \"\";\n        var position = -1;\n        var a;\n        var b;\n        var c;\n        var buffer;\n        // Make sure any padding is handled outside of the loop.\n        var length = input.length - padding;\n        while(++position < length){\n            // Read three bytes, i.e. 24 bits.\n            a = input.charCodeAt(position) << 16;\n            b = input.charCodeAt(++position) << 8;\n            c = input.charCodeAt(++position);\n            buffer = a + b + c;\n            // Turn the 24 bits into four chunks of 6 bits each, and append the\n            // matching character for each of them to the output.\n            output += TABLE.charAt(buffer >> 18 & 0x3F) + TABLE.charAt(buffer >> 12 & 0x3F) + TABLE.charAt(buffer >> 6 & 0x3F) + TABLE.charAt(buffer & 0x3F);\n        }\n        if (padding == 2) {\n            a = input.charCodeAt(position) << 8;\n            b = input.charCodeAt(++position);\n            buffer = a + b;\n            output += TABLE.charAt(buffer >> 10) + TABLE.charAt(buffer >> 4 & 0x3F) + TABLE.charAt(buffer << 2 & 0x3F) + \"=\";\n        } else if (padding == 1) {\n            buffer = input.charCodeAt(position);\n            output += TABLE.charAt(buffer >> 2) + TABLE.charAt(buffer << 4 & 0x3F) + \"==\";\n        }\n        return output;\n    };\n    var base64 = {\n        \"encode\": encode,\n        \"decode\": decode,\n        \"version\": \"1.0.0\"\n    };\n    // Some AMD build optimizers, like r.js, check for specific condition patterns\n    // like the following:\n    if (typeof define == \"function\" && typeof define.amd == \"object\" && define.amd) define(function() {\n        return base64;\n    });\n    else if (freeExports && !freeExports.nodeType) {\n        if (freeModule) freeModule.exports = base64;\n        else for(var key in base64)base64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n    } else root.base64 = base64;\n})(this);\n\n});\n\n\nvar $jNRwG = parcelRequire(\"jNRwG\");\n/*\r\n**\tThe Router is a special module that detects local URL changes (when a hash-change occurs) and\r\n**\tforwards events to the appropriate handlers.\r\n*/ const $a60d7ab082450164$var$_Router = {\n    Route: (0, $jNRwG.EventDispatcher).extend({\n        /*\r\n\t\t**\tRegular expression for the route. This is generated from a simpler expression provided\r\n\t\t**\tin the constructor.\r\n\t\t*/ routeRegex: null,\n        /*\r\n\t\t**\tOriginal route string value.\r\n\t\t*/ value: null,\n        /*\r\n\t\t**\tMap with the indices and the names of each paremeter obtained from the route expression.\r\n\t\t*/ params: null,\n        /*\r\n\t\t**\tArguments obtained from the current route (uses `params` to determine name of arguments).\r\n\t\t*/ args: null,\n        /*\r\n\t\t**\tArguments string obtained from the last route dispatch. Used to check if the arguments changed.\r\n\t\t*/ s_args: null,\n        /*\r\n\t\t**\tIndicates if the route is active because of a past positive dispatch.\r\n\t\t*/ active: false,\n        /*\r\n\t\t**\tIndicates if the params have changed since last event. Transition from inactive to active route will always set this value to true.\r\n\t\t*/ changed: false,\n        /*\r\n\t\t**\tConstructor of the route, the specified argument is a route expression.\r\n\t\t**\r\n\t\t**\t>> void __ctor (string route);\r\n\t\t*/ __ctor: function(route) {\n            this._super.EventDispatcher.__ctor();\n            this._compileRoute(this.value = route);\n        },\n        /*\r\n\t\t**\tTransforms the specified route expression into a regular expression and a set of parameter\r\n\t\t**\tnames and stores them in the 'param' array.\r\n\t\t**\r\n\t\t**\t>> void _compileRoute (string route);\r\n\t\t*/ _compileRoute: function(route) {\n            this.params = [];\n            route = route.replace(/\\/\\*\\//g, \"/.+/\");\n            while(true){\n                var m = /:([!@A-Za-z0-9_-]+)/.exec(route);\n                if (!m) break;\n                route = route.replace(m[0], \"([^/]+)\");\n                this.params.push(m[1]);\n            }\n            this.routeRegex = \"^\" + route.replace(/##/g, \"\");\n        },\n        /*\r\n\t\t**\tAdds a handler to the route dispatcher. The handler can be removed later using removeHandler and\r\n\t\t**\tspecifying the same parameters. If unrouted boolean is specified the event to listen to will be\r\n\t\t**\tthe unrouted event (when the route changes and the route is not activated).\r\n\t\t**\r\n\t\t**\tvoid addHandler (handler: function, unrouted: bool, context:object=null);\r\n\t\t*/ addHandler: function(handler, unrouted = false, context = null) {\n            this.addEventListener((unrouted === true ? \"un\" : \"\") + \"routed\", handler, context);\n        },\n        /*\r\n\t\t**\tRemoves a handler from the route dispatcher.\r\n\t\t**\r\n\t\t**\tvoid removeHandler (handler: function, unrouted: bool, context: object=null);\r\n\t\t*/ removeHandler: function(handler, unrouted = false, context = null) {\n            this.removeEventListener((unrouted === true ? \"un\" : \"\") + \"routed\", handler, context);\n        },\n        /*\r\n\t\t**\tVerifies if the specified route matches the internal route and if so dispatches a (depends on doUnroute parameter) \"routed\" or \"unrouted\" event with the\r\n\t\t**\tparameters obtained from the location to all attached handlers.\r\n\t\t**\r\n\t\t**\tvoid dispatch (route:string, doUnroute:bool);\r\n\t\t*/ dispatch: function(route) {\n            var matches = route.match(this.routeRegex);\n            if (!matches) {\n                this.s_args = null;\n                if (this.active) this.dispatchEvent(\"unrouted\", {\n                    route: this\n                });\n                this.active = false;\n                return;\n            }\n            var args = {\n                route: this\n            };\n            var str = \"\";\n            for(var i = 0; i < this.params.length; i++){\n                args[this.params[i]] = matches[i + 1];\n                str += \"_\" + matches[i + 1];\n            }\n            this.changed = str != this.s_args;\n            this.s_args = str;\n            this.dispatchEvent(\"routed\", this.args = args);\n            this.active = true;\n        }\n    }),\n    /*\r\n\t**\tMap with route objects. The key of the map is the route and the value a handler.\r\n\t*/ routes: {},\n    /*\r\n\t**\tSorted list of routes. Smaller routes are processed first than larger ones. This array stores\r\n\t**\tonly the keys to the Router.routes map.\r\n\t*/ sortedRoutes: [],\n    /*\r\n\t**\tIndicates the number of times the onLocationChanged handler should ignore the hash change event.\r\n\t*/ ignoreHashChangeEvent: 0,\n    /*\r\n\t**\tCurrent relative location (everything after the location hash symbol).\r\n\t*/ location: \"\",\n    /*\r\n\t**\tCurrent relative location as an array of elements (obtained by splitting the location by slash).\r\n\t*/ args: [],\n    /*\r\n\t**\tInitializes the router module. Ensure to call `refresh` once to force a hashchange when the page loads.\r\n\t*/ init: function() {\n        if (this.alreadyAttached) return;\n        this.alreadyAttached = true;\n        if (\"onhashchange\" in globalThis) globalThis.onhashchange = this.onLocationChanged.bind(this);\n    },\n    /*\r\n\t**\tRefreshes the current route by forcing a hashchange event.\r\n\t*/ refresh: function() {\n        this.onLocationChanged();\n    },\n    /*\r\n\t**\tChanges the current location and optionally prevents a trigger of the hashchange event.\r\n\t*/ setRoute: function(route, silent) {\n        var location1 = this.realLocation(route);\n        if (location1 == this.location) return;\n        if (silent) this.ignoreHashChangeEvent++;\n        globalThis.location.hash = location1;\n    },\n    /*\r\n\t**\tAdds the specified route to the routing map. When the specified route is detected, the `onRoute` handler will be called, and then\r\n\t**\twhen the route exits `onUnroute` will be called.\r\n\t*/ addRoute: function(route, onRoute, onUnroute = null) {\n        if (!this.routes[route]) {\n            this.routes[route] = new this.Route(route);\n            this.sortedRoutes.push(route);\n            this.sortedRoutes.sort((a, b)=>{\n                return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\n            });\n        }\n        if (onUnroute !== null) {\n            this.routes[route].addHandler(onRoute, false);\n            this.routes[route].addHandler(onUnroute, true);\n        } else this.routes[route].addHandler(onRoute, false);\n        return this.routes[route];\n    },\n    /*\r\n\t**\tReturns the Route object for the specified route.\r\n\t*/ getRoute: function(route) {\n        if (!this.routes[route]) {\n            this.routes[route] = new this.Route(route);\n            this.sortedRoutes.push(route);\n            this.sortedRoutes.sort((a, b)=>{\n                return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\n            });\n        }\n        return this.routes[route];\n    },\n    /*\r\n\t**\tAdds the specified routes to the routing map. The routes map should contain the route expression\r\n\t**\tin the key of the map and a handler function in the value.\r\n\t*/ addRoutes: function(routes) {\n        for(var i in routes){\n            if (!this.routes[i]) {\n                this.routes[i] = new this.Route(i);\n                this.sortedRoutes.push(i);\n            }\n            this.routes[i].addHandler(routes[i], false);\n        }\n        this.sortedRoutes.sort((a, b)=>{\n            return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\n        });\n    },\n    /*\r\n\t**\tRemoves the specified route from the routing map.\r\n\t*/ removeRoute: function(route, onRoute, onUnroute) {\n        if (!this.routes[route]) return;\n        if (onUnroute !== undefined) {\n            this.routes[route].removeHandler(onRoute, false);\n            this.routes[route].removeHandler(onUnroute, true);\n        } else this.routes[route].removeHandler(onRoute);\n    },\n    /*\r\n\t**\tRemoves the specified routes from the routing map. The routes map should contain the route\r\n\t**\texpression in the key of the map and a handler function in the value.\r\n\t*/ removeRoutes: function(routes) {\n        for(var i in routes){\n            if (!this.routes[i]) continue;\n            this.routes[i].removeHandler(routes[i]);\n        }\n    },\n    /*\r\n\t**\tGiven a formatted location and a previous one it will return the correct real location.\r\n\t*/ realLocation: function(cLocation, pLocation) {\n        if (!pLocation) pLocation = this.location;\n        if (!pLocation) pLocation = \" \";\n        var state = 0, i = 0, j = 0, k;\n        var rLocation = \"\";\n        while(state != -1 && i < cLocation.length && j < pLocation.length)switch(state){\n            case 0:\n                if (cLocation.substr(i++, 1) == \"*\") {\n                    state = 1;\n                    break;\n                }\n                if (cLocation.substr(i - 1, 1) != pLocation.substr(j++, 1)) {\n                    rLocation += cLocation.substr(i - 1);\n                    state = -1;\n                    break;\n                }\n                rLocation += pLocation.substr(j - 1, 1);\n                break;\n            case 1:\n                if (cLocation.substr(i, 1) == \"*\") {\n                    state = 3;\n                    i++;\n                    break;\n                }\n                state = 2;\n                break;\n            case 2:\n                k = pLocation.indexOf(cLocation.substr(i, 1), j);\n                if (k == -1) {\n                    rLocation += pLocation.substr(j) + cLocation.substr(i);\n                    state = -1;\n                    break;\n                }\n                rLocation += pLocation.substr(j, k - j);\n                state = 0;\n                j = k;\n                break;\n            case 3:\n                k = pLocation.lastIndexOf(cLocation.substr(i, 1));\n                if (k == -1) {\n                    rLocation += cLocation.substr(i);\n                    state = -1;\n                    break;\n                }\n                rLocation += pLocation.substr(j, k - j);\n                state = 0;\n                j = k;\n                break;\n        }\n        if (state != -1) rLocation += cLocation.substr(i);\n        return rLocation.trim();\n    },\n    /*\r\n\t**\tEvent handler called when the location hash changes.\r\n\t*/ onLocationChanged: function() {\n        var cLocation = location.hash.substr(1);\n        var rLocation = this.realLocation(cLocation);\n        if (cLocation != rLocation) {\n            globalThis.location.replace(\"#\" + rLocation);\n            return;\n        }\n        this.location = cLocation;\n        this.args = this.location.split(\"/\");\n        if (this.ignoreHashChangeEvent > 0) {\n            this.ignoreHashChangeEvent--;\n            return;\n        }\n        for(var i = 0; i < this.sortedRoutes.length; i++)this.routes[this.sortedRoutes[i]].dispatch(this.location);\n    },\n    /*\r\n\t**\tNavigates to the given hash-based URL.\r\n\t*/ navigate: function(location1, replace = false) {\n        location1 = this.realLocation(location1);\n        if (globalThis.location.hash == \"#\" + location1) {\n            this.refresh();\n            return;\n        }\n        if (replace) globalThis.location.replace(\"#\" + location1);\n        else globalThis.location.hash = location1;\n    }\n};\n$a60d7ab082450164$var$_Router.init();\nvar $a60d7ab082450164$export$2e2bcd8739ae039 = $a60d7ab082450164$var$_Router;\n\n\n\nvar $jNRwG = parcelRequire(\"jNRwG\");\n\n/**\n * Map containing the original prototypes for all registered elements.\n */ const $a5c21812244207c8$var$elementPrototypes = {};\n/**\n * Map containing the final classes for all registered elements.\n */ const $a5c21812244207c8$var$elementClasses = {};\n/**\n * Base class for custom elements. Provides support for model-triggered events, easy definition of handlers for events originated in\n * self or child-elements, and several utility methods.\n */ const $a5c21812244207c8$var$Element = {\n    /**\n\t * Internal element ID. Added as namespace to model events. Ensures that certain model events are run locally only, not affecting other event handlers.\n\t */ eid: null,\n    /**\n\t * Indicates if the element is a root element, that is, the target element to attach child elements having `data-ref` attribute.\n\t */ isRoot: true,\n    /**\n\t * Root element to which this element is attached (when applicable).\n\t */ root: null,\n    /**\n\t * Indicates ready-state of the element. Possible values are: 0: \"Not ready\", 1: \"Children Initialized\", and 2: \"Parent Ready\".\n\t */ isReady: 0,\n    readyReenter: 0,\n    readyLocked: 0,\n    /**\n\t * Model type (class) for the element's model.\n\t */ modelt: (0, $jNRwG.Model),\n    /**\n\t * Data model related to the element.\n\t */ model: null,\n    /**\n\t * Contents of the element. When set, the innerHTML will be set to this value.\n\t */ contents: null,\n    /**\n\t * \tEvents map.\n\t */ events: {\n        \"mousedown [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (evt.source._long_press) return;\n            let elem = evt.source;\n            elem._long_press = setTimeout(()=>{\n                let dx = elem._pos_fx - elem._pos_sx;\n                let dy = elem._pos_fy - elem._pos_sy;\n                elem._long_press = null;\n                let d = Math.sqrt(dx * dx + dy * dy);\n                if (d < 5) {\n                    elem._long_press = false;\n                    this.dispatchOn(elem, \"long-press\");\n                }\n            }, 500);\n            elem._pos_sx = evt.clientX;\n            elem._pos_sy = evt.clientY;\n            elem._pos_fx = evt.clientX;\n            elem._pos_fy = evt.clientY;\n        },\n        \"mousemove [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (!evt.source._long_press) return;\n            evt.source._pos_fx = evt.clientX;\n            evt.source._pos_fy = evt.clientY;\n        },\n        \"touchstart [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (evt.source._long_press) return;\n            let elem = evt.source;\n            elem._long_press = setTimeout(()=>{\n                let dx = elem._pos_fx - elem._pos_sx;\n                let dy = elem._pos_fy - elem._pos_sy;\n                elem._long_press = null;\n                let d = Math.sqrt(dx * dx + dy * dy);\n                if (d < 5) {\n                    elem._long_press = false;\n                    this.dispatchOn(elem, \"long-press\");\n                }\n            }, 500);\n            elem._pos_sx = evt.touches[0].clientX;\n            elem._pos_sy = evt.touches[0].clientY;\n            elem._pos_fx = evt.touches[0].clientX;\n            elem._pos_fy = evt.touches[0].clientY;\n        },\n        \"touchmove [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (!evt.source._long_press) return;\n            evt.source._pos_fx = evt.touches[0].clientX;\n            evt.source._pos_fy = evt.touches[0].clientY;\n        },\n        \"mouseup [data-long-press]\": function(evt) {\n            if (evt.source._long_press === false) return;\n            if (evt.source._long_press) {\n                clearTimeout(evt.source._long_press);\n                evt.source._long_press = null;\n            }\n            evt.continuePropagation = true;\n        },\n        \"touchend [data-long-press]\": function(evt) {\n            if (evt.source._long_press === false) return;\n            if (evt.source._long_press) {\n                clearTimeout(evt.source._long_press);\n                evt.source._long_press = null;\n            }\n            evt.continuePropagation = true;\n        },\n        \"click [data-action]\": function(evt) {\n            if (evt.source._long_press === false) return;\n            let opts = evt.source.dataset.action.split(\" \");\n            if (opts[0] in this) this[opts[0]]({\n                ...evt.params,\n                ...evt.source.dataset,\n                ...opts,\n                length: opts.length\n            }, evt);\n            else evt.continuePropagation = true;\n        },\n        \"long-press [data-long-press]\": function(evt) {\n            let opts = evt.source.dataset.longPress.split(\" \");\n            if (opts[0] in this) this[opts[0]]({\n                ...evt.params,\n                ...evt.source.dataset,\n                ...opts,\n                length: opts.length\n            }, evt);\n            else evt.continuePropagation = true;\n        },\n        \"keyup(13) input[data-enter]\": function(evt) {\n            let opts = evt.source.dataset.enter.split(\" \");\n            if (opts[0] in this) this[opts[0]]({\n                ...evt.params,\n                ...evt.source.dataset,\n                ...opts,\n                length: opts.length\n            }, evt);\n            else evt.continuePropagation = true;\n        }\n    },\n    /**\n\t * Internal routes map, set by `bindRoutes`.\n\t */ routes: null,\n    /**\n\t * \tElement constructor.\n\t */ __ctor: function() {\n        this._list_watch = [];\n        this._list_visible = [];\n        this._list_attr = [];\n        this._list_property = [];\n        if (\"root\" in this.dataset) {\n            if (this.dataset.root == \"false\") this.isRoot = false;\n        }\n        this.style.display = \"block\";\n        this.eid = Math.random().toString().substr(2);\n        if (this.model != null) {\n            let tmp = this.model;\n            this.model = null;\n            this.setModel(tmp, false);\n        }\n        Object.keys(this._super).reverse().forEach((i)=>{\n            if (\"init\" in this._super[i]) this._super[i].init();\n        });\n        if ($a5c21812244207c8$var$Element.debug) console.log(\">> \" + this.tagName + \" INIT ON \" + this.parentElement.tagName);\n        this.init();\n        if (this.events) this.bindEvents(this.events);\n        if (this.contents) this.setInnerHTML(this.contents);\n        setTimeout(()=>{\n            if (this.tagName.toLowerCase() !== \"r-dom-probe\") this.appendChild(document.createElement(\"r-dom-probe\"));\n            else this.markReady();\n        }, 0);\n    },\n    /**\n\t * \tInitializes the element. Called after construction of the instance.\n\t */ init: function() {},\n    /**\n\t * \tExecuted when the children of the element are ready.\n\t */ ready: function() {},\n    /**\n\t * \tExecuted after ready and after the root is also ready.\n\t */ rready: function() {},\n    /**\n\t * \tMarks the element as ready.\n\t */ markReady: function(list = null) {\n        this.readyLocked++;\n        if (!this.isReady) {\n            this.isReady = 1;\n            // Set model is `model` property was set in the element.\n            if (\"model\" in this.dataset) {\n                let ref = this.getFieldByPath(this.dataset.model);\n                if (ref) this.setModel(ref);\n            }\n            // Run ready methods in class hierarchy.\n            Object.keys(this._super).reverse().forEach((i)=>{\n                if (\"ready\" in this._super[i]) this._super[i].ready();\n            });\n            if ($a5c21812244207c8$var$Element.debug) console.log(\">> \" + this.tagName + \" READY\");\n            this.ready();\n            if (this.onready) this.onready(this);\n            this.collectWatchers();\n        } else this.collectWatchers();\n        let root = this.findCustomParent(this);\n        if ($a5c21812244207c8$var$Element.debug) console.log(this.tagName + \" ROOT IS \" + (root ? root.tagName : \"NULL\"));\n        if (root && root.isReady === 0 && this.isReady != 0) root.checkReady();\n        let rootReady = false;\n        if (root && root.isReady === 2 && this.isReady !== 2) {\n            this.getRoot();\n            if (this.root && this.dataset.ref) {\n                if ($a5c21812244207c8$var$Element.debug) console.log(this.tagName + \" REF AS `\" + this.dataset.ref + \"` ON \" + this.root.tagName);\n                this.root[this.dataset.ref] = this;\n                this.root.onRefAdded(this.dataset.ref, this);\n            }\n            rootReady = true;\n        }\n        if (!root && this.isReady !== 2) rootReady = true;\n        if (rootReady) {\n            this.isReady = 2;\n            if (list !== null) for (let elem of list)elem.checkReady();\n            if ($a5c21812244207c8$var$Element.debug) console.log(\">> \" + this.tagName + \" RREADY\");\n            Object.keys(this._super).reverse().forEach((i)=>{\n                if (\"rready\" in this._super[i]) this._super[i].rready();\n            });\n            this.rready();\n            if (this.onrootready) this.onrootready(this);\n        }\n        this.readyLocked--;\n        if (this.readyReenter && !this.readyLocked) {\n            this.readyReenter = false;\n            this.checkReady();\n        }\n        if (this.tagName.toLowerCase() === \"r-dom-probe\") this.remove();\n    },\n    /**\n\t *\tChecks if all children are ready and fires the appropriate function (`ready` and/or `rready`).\n\t */ checkReady: function() {\n        if (this.childNodes.length == 0) return;\n        if (this.readyLocked) {\n            this.readyReenter = true;\n            return;\n        }\n        let isReady = true;\n        let list = [];\n        let result = document.evaluate(\".//*[contains(name(),'-')]\", this, null, XPathResult.ANY_TYPE, null);\n        if ($a5c21812244207c8$var$Element.debug) console.log(\"# CHECKING \" + this.tagName);\n        while(true){\n            let elem = result.iterateNext();\n            if (!elem) break;\n            if (elem === this) continue;\n            let root = this.findCustomParent(elem);\n            if (root !== this) continue;\n            if ($a5c21812244207c8$var$Element.debug) console.log(\"   \" + elem.tagName + \" = \" + elem.isReady);\n            if (!elem.isReady) isReady = false;\n            list.push(elem);\n        }\n        if (!isReady) return;\n        this.markReady(list);\n    },\n    /**\n\t * \tReturns the value of a field given its path. Starts from `global`, unless the first item in the path is `this`, in which case it will start from the element.\n\t */ getFieldByPath: function(path) {\n        if (!path) return null;\n        if (typeof path !== \"string\") return path;\n        let tmp = path.split(\".\");\n        let ref = $parcel$global;\n        if (tmp.length && tmp[0] == \"this\") {\n            ref = this;\n            tmp.shift();\n        }\n        if (tmp.length && tmp[0] == \"root\") {\n            ref = this.getRoot();\n            tmp.shift();\n        }\n        while(ref != null && tmp.length != 0)ref = ref[tmp.shift()];\n        return ref;\n    },\n    /**\n\t * \tReturns the root of the element (that is, the `root` property). If not set it will attempt to find the root first.\n\t */ getRoot: function() {\n        return this.root ? this.root : this.root = this.findRoot();\n    },\n    /**\n\t * \tSets the model of the element and executes the `modelChanged` event handler (unless `update` is set to false).\n\t */ setModel: function(model, update = true) {\n        if (!model) return this;\n        model = (0, $jNRwG.Rinn).ensureTypeOf(this.modelt, model);\n        if (this.model !== model) {\n            if (this.model != null) {\n                this.model.removeEventListener(this.eid + \":modelChanged\", this.onModelPreChanged, this);\n                this.model.removeEventListener(this.eid + \":propertyChanging\", this.onModelPropertyChanging, this);\n                this.model.removeEventListener(this.eid + \":propertyChanged\", this.onModelPropertyPreChanged, this);\n                this.model.removeEventListener(this.eid + \":propertyRemoved\", this.onModelPropertyRemoved, this);\n            }\n            this.model = model;\n            this.model.addEventListener(this.eid + \":modelChanged\", this.onModelPreChanged, this);\n            this.model.addEventListener(this.eid + \":propertyChanging\", this.onModelPropertyChanging, this);\n            this.model.addEventListener(this.eid + \":propertyChanged\", this.onModelPropertyPreChanged, this);\n            this.model.addEventListener(this.eid + \":propertyRemoved\", this.onModelPropertyRemoved, this);\n        }\n        if (update !== false) this.model.setNamespace(this.eid).update(true).setNamespace(null);\n        return this;\n    },\n    /**\n\t * \tReturns the model of the element. Added for symmetry only, exactly the same as accesing public property `model` of this class.\n\t */ getModel: function() {\n        return this.model;\n    },\n    /**\n\t * \tAdds one or more CSS classes (separated by space) to the element.\n\t */ addClass: function(classString) {\n        if (!classString) return this;\n        classString.split(\" \").forEach((i)=>{\n            i = i.trim();\n            if (!i) return;\n            if (i[0] == \"-\" || i[0] == \"+\") this.classList[i[0] == \"-\" ? \"remove\" : \"add\"](i.substr(1));\n            else this.classList.add(i);\n        });\n        return this;\n    },\n    /**\n\t * \tRemoves one or more CSS classes (separated by space) from the element.\n\t */ removeClass: function(classString) {\n        if (!classString) return this;\n        classString.split(\" \").forEach((i)=>{\n            i = i.trim();\n            if (!i) return;\n            if (i[0] == \"-\" || i[0] == \"+\") this.classList[i[0] == \"-\" ? \"remove\" : \"add\"](i.substr(1));\n            else this.classList.remove(i);\n        });\n        return this;\n    },\n    /**\n\t * \tSets one or more style properties to the element (separated by semi-colon).\n\t */ setStyle: function(styleString) {\n        if (!styleString) return this;\n        styleString.split(\";\").forEach((i)=>{\n            let j = (i = i.trim()).indexOf(\":\");\n            if (j == -1) return;\n            let name = i.substr(0, j).trim();\n            for(let k = name.indexOf(\"-\"); k != -1; k = name.indexOf(\"-\"))name = name.substr(0, k) + name.substr(k + 1, 1).toUpperCase() + name.substr(k + 2);\n            this.style[name] = i.substr(j + 1).trim();\n        });\n        return this;\n    },\n    /**\n\t * \tReturns the width of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n\t */ getWidth: function(elem = null) {\n        return (elem || this).getBoundingClientRect().width;\n    },\n    /**\n\t * \tReturns the height of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n\t */ getHeight: function(elem = null) {\n        return (elem || this).getBoundingClientRect().height;\n    },\n    /**\n\t**\tBinds all events in the specified map to the element, the events map can have one of the following forms:\n\t**\n\t**\t\t\"click .button\": \"doSomething\",\t\t(Delegated Event)\n\t**\t\t\"click .button\": function() { },\t(Delegated Event)\n\t**\t\t\"myevt &this\": \"...\",\t\t\t\t(Self Event)\n\t**\t\t\"myevt\": \"...\",\t\t\t\t\t\t(Element Event)\n\t**\t\t\"myevt @objName\": \"...\",\t\t\t(EventDispatcher Event)\n\t**\t\t\"#propname\": \"...\",\t\t\t\t\t(Property Changed Event)\n\t**\t\t\"keyup(10) .input\": \"...\"\t\t\t(Delegated Event with Parameters)\n\t**\n\t**\t>> Element bindEvents (object events);\n\t*/ bindEvents: function(events) {\n        for(let evtstr in events){\n            let hdl = events[evtstr];\n            if ((0, $jNRwG.Rinn).typeOf(hdl) == \"string\") hdl = this[hdl];\n            hdl = hdl.bind(this);\n            var i = evtstr.indexOf(\" \");\n            var name = i == -1 ? evtstr : evtstr.substr(0, i);\n            var selector = i == -1 ? \"\" : evtstr.substr(i + 1);\n            let args = null;\n            var j = name.indexOf(\"(\");\n            if (j != -1) {\n                args = name.substr(j + 1, name.length - j - 2).split(\",\");\n                name = name.substr(0, j);\n            }\n            if (selector[0] == \"@\") {\n                if (selector != \"@this\") {\n                    this[selector.substr(1)].addEventListener(name, hdl);\n                    continue;\n                }\n                selector = this;\n            } else if (selector[0] == \"&\") {\n                if (selector != \"&this\") selector = \"[data-ref='\" + selector.substr(1) + \"']\";\n                else selector = this;\n            }\n            if (name.substr(0, 1) == \"#\") {\n                this.listen(\"propertyChanged.\" + name.substr(1), this, hdl);\n                continue;\n            }\n            if (args != null) switch(name){\n                case \"keyup\":\n                case \"keydown\":\n                    this.listen(name, selector, function(evt) {\n                        if ((0, $jNRwG.Rinn).indexOf(args, evt.keyCode.toString()) != -1) return hdl(evt, args);\n                        evt.continuePropagation = true;\n                    });\n                    continue;\n            }\n            this.listen(name, selector, hdl);\n        }\n        return this;\n    },\n    /**\n\t**\tBinds all routes in the specified map to the Router object.\n\t**\n\t**\t\t\"route-path\": \"doSomething\"\t\t\t\t\t\tOn-Route\n\t**\t\t\"route-path\": function (evt, args) { }\t\t\tOn-Route\n\t**\t\t\"!route-path\": \"doSomething\"\t\t\t\t\tOn-UnRoute\n\t**\t\t\"!route-path\": function (evt, args) { }\t\t\tOn-UnRoute\n\t**\n\t**\t>> Element bindRoutes ();\n\t*/ bindRoutes: function() {\n        if (!this.routes) return;\n        for(let routeStr in this.routes){\n            let route = routeStr[0] === \"!\" ? (0, $a60d7ab082450164$export$2e2bcd8739ae039).getRoute(routeStr.substr(1)) : (0, $a60d7ab082450164$export$2e2bcd8739ae039).getRoute(routeStr);\n            let handler = this.routes[routeStr];\n            if ((0, $jNRwG.Rinn).typeOf(handler) === \"string\") handler = this[handler];\n            if (routeStr[0] === \"!\") route.addHandler(handler, true, this);\n            else route.addHandler(handler, false, this);\n        }\n    },\n    /**\n\t * Unbinds all routes added by bindRoutes.\n\t */ unbindRoutes: function() {\n        if (!this.routes) return;\n        for(let routeStr in this.routes){\n            let route = routeStr[0] === \"!\" ? (0, $a60d7ab082450164$export$2e2bcd8739ae039).getRoute(routeStr.substr(1)) : (0, $a60d7ab082450164$export$2e2bcd8739ae039).getRoute(routeStr);\n            let handler = this.routes[routeStr];\n            if ((0, $jNRwG.Rinn).typeOf(handler) === \"string\") handler = this[handler];\n            if (routeStr[0] === \"!\") route.removeHandler(handler, true, this);\n            else route.removeHandler(handler, false, this);\n        }\n    },\n    /**\n\t**\tExecutes the underlying event handler given an event and a selector. Called internally by listen().\n\t**\n\t**\t>> void _eventHandler (event evt, string selector, function handler);\n\t*/ _eventHandler: function(evt, selector, handler) {\n        if (evt.continuePropagation === false) return;\n        evt.continuePropagation = true;\n        evt.source = evt.target;\n        if (selector && selector instanceof HTMLElement) {\n            if (evt.source === selector) {\n                evt.continuePropagation = false;\n                if (handler.call(this, evt, evt.detail) === true) evt.continuePropagation = true;\n            }\n        } else if (selector && selector != \"*\") {\n            let elems = this.querySelectorAll(selector);\n            while(evt.source !== this){\n                let i = (0, $jNRwG.Rinn).indexOf(elems, evt.source, true);\n                if (i !== -1) {\n                    evt.continuePropagation = false;\n                    if (handler.call(this, evt, evt.detail) === true) evt.continuePropagation = true;\n                    break;\n                } else evt.source = evt.source.parentElement;\n            }\n        } else {\n            evt.continuePropagation = false;\n            if (handler.call(this, evt, evt.detail) === true) evt.continuePropagation = true;\n        }\n        if (evt.continuePropagation === false) {\n            evt.preventDefault();\n            evt.stopPropagation();\n        }\n    },\n    /**\n\t**\tListens for an event on elements matching the specified selector, returns an object with a single method `remove` used\n\t**\tto remove the listener when it is no longer needed.\n\t**\n\t**\t>> object listen (string eventName, string selector, function handler);\n\t**\t>> object listen (string eventName, function handler);\n\t*/ listen: function(eventName, selector, handler) {\n        let eventCatcher = false;\n        let eventImmediate = false;\n        if ((0, $jNRwG.Rinn).typeOf(selector) == \"function\") {\n            handler = selector;\n            selector = null;\n        }\n        if (eventName[eventName.length - 1] == \"!\") {\n            eventName = eventName.substr(0, eventName.length - 1);\n            eventCatcher = true;\n        }\n        if (eventName[0] == \"!\") {\n            eventName = eventName.substr(1);\n            eventImmediate = true;\n        }\n        let callback0 = null;\n        let callback1 = null;\n        let self = this;\n        this.addEventListener(eventName, callback0 = (evt)=>{\n            if (evt.continuePropagation === false) return;\n            if (!evt.firstCapture) {\n                evt.firstCapture = this;\n                evt.firstCaptureCount = 0;\n                evt.queue = [];\n            }\n            if (evt.firstCapture === this) evt.firstCaptureCount++;\n            if (eventCatcher == true) evt.queue.push([\n                this,\n                selector,\n                handler\n            ]);\n            if (eventImmediate == true) this._eventHandler(evt, selector, handler);\n        }, true);\n        this.addEventListener(eventName, callback1 = (evt)=>{\n            if (evt.continuePropagation === false) return;\n            if (eventCatcher != true && eventImmediate != true) this._eventHandler(evt, selector, handler);\n            if (evt.firstCapture === this && evt.continuePropagation !== false) {\n                if (--evt.firstCaptureCount == 0) {\n                    while(evt.queue.length){\n                        let q = evt.queue.pop();\n                        q[0]._eventHandler(evt, q[1], q[2]);\n                    }\n                    evt.continuePropagation = false;\n                }\n            }\n        }, false);\n        return {\n            removed: false,\n            remove: function() {\n                if (this.removed) return;\n                this.removed = true;\n                self.removeEventListener(eventName, callback0, true);\n                self.removeEventListener(eventName, callback1, false);\n            }\n        };\n    },\n    /**\n\t**\tCreates an event object for later dispatch.\n\t*/ createEventObject: function(eventName, args, bubbles) {\n        let evt;\n        if (eventName == \"click\") evt = new MouseEvent(eventName, {\n            bubbles: bubbles,\n            detail: args\n        });\n        else evt = new CustomEvent(eventName, {\n            bubbles: bubbles,\n            detail: args\n        });\n        return evt;\n    },\n    /**\n\t**\tDispatches a new event with the specified name and the given arguments.\n\t*/ dispatch: function(eventName, args = null, bubbles = true) {\n        let propName = \"on\" + eventName.toLowerCase();\n        if (propName in this) {\n            this[propName](args, this);\n            return;\n        }\n        this.dispatchEvent(this.createEventObject(eventName, args, bubbles));\n    },\n    /**\n\t**\tDispatches a new event on the specified element with the given name and arguments (uses `CustomEvent`).\n\t*/ dispatchOn: function(elem, eventName, args = null, bubbles = true) {\n        elem.dispatchEvent(this.createEventObject(eventName, args, bubbles));\n    },\n    /**\n\t**\tSets the innerHTML property of the element and runs some post set-content tasks.\n\t**\n\t**\t>> void setInnerHTML (value);\n\t*/ setInnerHTML: function(value) {\n        this.readyLocked++;\n        this.innerHTML = value;\n        this.readyLocked--;\n    },\n    /**\n\t**\tCollects all watchers (data-watch, data-visible, data-attr, data-property), that depend on the model, should be invoked when the\n    **  structure of the element changed (added/removed children). This is automatically called when the setInnerHTML method is called.\n\t**\n\t**\tNote that for 3rd party libs that add children to this element (which could probably have a watcher) will possibly result in\n\t**\tduplication of the added elements when compiling the innerHTML template. To prevent this add the 'pseudo' CSS class to any\n\t**\telement that should not be added to the HTML template.\n\t**\n\t**\t>> void collectWatchers ();\n\t*/ collectWatchers: function() {\n        let self = this;\n        let modified = false;\n        let list;\n        if (!this.isRoot) return;\n        let _list_watch_length = this._list_watch.length;\n        let _list_visible_length = this._list_visible.length;\n        let _list_attr_length = this._list_attr.length;\n        let _list_property_length = this._list_property.length;\n        /* *** */ list = this.querySelectorAll(\"[data-watch]\");\n        for(let i = 0; i < list.length; i++){\n            for (let j of list[i].querySelectorAll(\".pseudo\"))j.remove();\n            list[i]._template = (0, $jNRwG.Template).compile(list[i].innerHTML);\n            list[i]._watch = new RegExp(\"^(\" + list[i].dataset.watch + \")$\");\n            list[i].innerHTML = \"\";\n            list[i].removeAttribute(\"data-watch\");\n            this._list_watch.push(list[i]);\n        }\n        if (\"selfWatch\" in this.dataset) {\n            for (let j of this.querySelectorAll(\".pseudo\"))j.remove();\n            this._template = (0, $jNRwG.Template).compile(this.innerHTML);\n            this._watch = new RegExp(\"^(\" + this.dataset.selfWatch + \")$\");\n            this.innerHTML = \"\";\n            this.removeAttribute(\"data-self-watch\");\n            this._list_watch.push(this);\n        }\n        /* *** */ list = this.querySelectorAll(\"[data-visible]\");\n        for(let i = 0; i < list.length; i++){\n            list[i]._visible = (0, $jNRwG.Template).compile(list[i].dataset.visible);\n            list[i].removeAttribute(\"data-visible\");\n            this._list_visible.push(list[i]);\n        }\n        if (\"selfVisible\" in this.dataset) {\n            this._visible = (0, $jNRwG.Template).compile(this.dataset.selfVisible);\n            this.removeAttribute(\"data-self-visible\");\n            this._list_visible.push(this);\n        }\n        /* *** */ list = this.querySelectorAll(\"[data-attr]\");\n        for(let i = 0; i < list.length; i++){\n            list[i]._attr = [];\n            for (let j of list[i].dataset.attr.split(\";\")){\n                j = j.split(\":\");\n                if (j.length != 2) continue;\n                list[i]._attr.push({\n                    name: j[0].trim(),\n                    value: (0, $jNRwG.Template).compile(j[1].trim())\n                });\n            }\n            list[i].removeAttribute(\"data-attr\");\n            this._list_attr.push(list[i]);\n        }\n        if (\"selfAttr\" in this.dataset) {\n            this._attr = [];\n            for (let j of this.dataset.selfAttr.split(\";\")){\n                j = j.split(\":\");\n                if (j.length != 2) continue;\n                this._attr.push({\n                    name: j[0].trim(),\n                    value: (0, $jNRwG.Template).compile(j[1].trim())\n                });\n            }\n            this.removeAttribute(\"data-self-attr\");\n            this._list_attr.push(this);\n        }\n        /* *** */ list = this.querySelectorAll(\"[data-property]\");\n        for(let i = 0; i < list.length; i++){\n            list[i].onchange = list[i].onblur = function() {\n                switch(this.type){\n                    case \"radio\":\n                        if (this.checked) self.getModel().set(this.name, this.value);\n                        break;\n                    case \"checkbox\":\n                        self.getModel().set(this.name, this.checked ? \"1\" : \"0\");\n                        break;\n                    case \"field\":\n                        self.getModel().set(this.name, this.getValue());\n                        break;\n                    default:\n                        self.getModel().set(this.name, this.value);\n                        break;\n                }\n            };\n            if (list[i].tagName == \"SELECT\") list[i].onmouseup = function() {\n                self.getModel().set(this.name, this.value);\n            };\n            list[i].name = list[i].dataset.property;\n            list[i].removeAttribute(\"data-property\");\n            this._list_property.push(list[i]);\n        }\n        if (\"selfProperty\" in this.dataset) {\n            this.onchange = this.onblur = function() {\n                switch(this.type){\n                    case \"radio\":\n                        if (this.checked) self.getModel().set(this.name, this.value);\n                        break;\n                    case \"checkbox\":\n                        self.getModel().set(this.name, this.checked ? \"1\" : \"0\");\n                        break;\n                    case \"field\":\n                        self.getModel().set(this.name, this.getValue());\n                        break;\n                    default:\n                        self.getModel().set(this.name, this.value);\n                        break;\n                }\n            };\n            if (this.tagName == \"SELECT\") this.onmouseup = function() {\n                self.getModel().set(this.name, this.value);\n            };\n            this.name = this.dataset.selfProperty;\n            this.removeAttribute(\"data-self-property\");\n            this._list_property.push(this);\n        }\n        /* *** */ this._list_watch = this._list_watch.filter((i)=>i.parentElement != null);\n        if (_list_watch_length != this._list_watch.length) modified = true;\n        this._list_visible = this._list_visible.filter((i)=>i.parentElement != null);\n        if (_list_visible_length != this._list_visible.length) modified = true;\n        this._list_attr = this._list_attr.filter((i)=>i.parentElement != null);\n        if (_list_attr_length != this._list_attr.length) modified = true;\n        this._list_property = this._list_property.filter((i)=>i.parentElement != null);\n        if (_list_property_length != this._list_property.length) modified = true;\n        if (this.model != null && modified) this.model.setNamespace(this.eid).update(true).setNamespace(null);\n    },\n    /**\n\t**\tExecuted when the element is created and yet not attached to the DOM tree.\n\t*/ onCreated: function() {},\n    /**\n\t * Executed when the element is attached to the DOM tree.\n\t */ elementConnected: function() {\n        this.bindRoutes();\n        this.onConnected();\n    },\n    /**\n\t * Executed when the element is no longer a part of the DOM tree.\n\t */ elementDisconnected: function() {\n        this.unbindRoutes();\n    },\n    /**\n\t**\tExecuted when the element is attached to the DOM tree.\n\t*/ onConnected: function() {\n        if (this.onconnected) this.onconnected(this);\n    },\n    /**\n\t**\tExecuted when the element is no longer a part of the DOM tree.\n\t*/ onDisconnected: function() {\n        if (this.ondisconnected) this.ondisconnected(this);\n    },\n    /**\n\t**\tExecuted on the root element when a child element has `data-ref` attribute and it was added to it.\n\t*/ onRefAdded: function(name, element) {},\n    /**\n\t**\tExecuted on the root element when a child element has `data-ref` attribute and it was removed from it.\n\t*/ onRefRemoved: function(name, element) {},\n    /**\n\t**\tEvent handler invoked when the model has changed, executed before onModelChanged() to update internal dependencies,\n\t**\tshould not be overriden or elements watching the model will not be updated.\n\t**\n\t**\t>> void onModelPreChanged (evt, args);\n\t*/ onModelPreChanged: function(evt, args) {\n        let data = this.getModel().get();\n        for(let i = 0; i < this._list_watch.length; i++)for (let j of args.fields){\n            if (!this._list_watch[i]._watch.test(j)) continue;\n            this._list_watch[i].innerHTML = this._list_watch[i]._template(data);\n            break;\n        }\n        for(let i = 0; i < this._list_visible.length; i++)if (!!this._list_visible[i]._visible(data, \"arg\")) this._list_visible[i].style.removeProperty(\"display\");\n        else this._list_visible[i].style.setProperty(\"display\", \"none\", \"important\");\n        for(let i = 0; i < this._list_attr.length; i++)for (let j of this._list_attr[i]._attr)this._list_attr[i][j.name] = j.value(data, \"arg\");\n        this.onModelChanged(evt, args);\n    },\n    /**\n\t**\tEvent handler invoked when the model has changed.\n\t*/ onModelChanged: function(evt, args) {},\n    /**\n\t**\tEvent handler invoked when a property of the model is changing. Fields `name` and `value` can be found in the `args` object.\n\t*/ onModelPropertyChanging: function(evt, args) {},\n    /**\n\t**\tEvent handler invoked when a property of the model has changed, executed before onModelPropertyChanged() to update internal\n\t**\tdependencies. Automatically triggers internal events named `propertyChanged.<propertyName>` and `propertyChanged`.\n\t**\tShould not be overriden or elements depending on the property will not be updated.\n\t*/ onModelPropertyPreChanged: function(evt, args) {\n        for(let i = 0; i < this._list_property.length; i++)if (this._list_property[i].name == args.name) {\n            let trigger = true;\n            switch(this._list_property[i].type){\n                case \"radio\":\n                    if (this._list_property[i].value != args.value) {\n                        this._list_property[i].parentElement.classList.remove(\"active\");\n                        continue;\n                    }\n                    this._list_property[i].checked = true;\n                    this._list_property[i].parentElement.classList.add(\"active\");\n                    break;\n                case \"checkbox\":\n                    if (~~args.value) {\n                        this._list_property[i].checked = true;\n                        this._list_property[i].parentElement.classList.add(\"active\");\n                    } else {\n                        this._list_property[i].checked = false;\n                        this._list_property[i].parentElement.classList.remove(\"active\");\n                    }\n                    break;\n                case \"field\":\n                    this._list_property[i].val = this._list_property[i].dataset.value = args.value;\n                    this._list_property[i].setValue(args.value);\n                    trigger = false;\n                    break;\n                default:\n                    this._list_property[i].value = args.value;\n                    this._list_property[i].val = this._list_property[i].dataset.value = args.value;\n                    if (this._list_property[i].value != args.value) trigger = false;\n                    break;\n            }\n            if (trigger && this._list_property[i].onchange) this._list_property[i].onchange();\n        }\n        this.dispatch(\"propertyChanged.\" + args.name, args, false);\n        this.dispatch(\"propertyChanged\", args, false);\n        this.onModelPropertyChanged(evt, args);\n    },\n    /**\n\t**\tEvent handler invoked when a property of the model has changed.\n\t*/ onModelPropertyChanged: function(evt, args) {},\n    /**\n\t**\tEvent handler invoked when a property of the model is removed. Field `name` can be found in the `args` object.\n\t*/ onModelPropertyRemoved: function(evt, args) {},\n    /*\n\t**\tRuns the following preparation procedures on the specified prototype:\n\t**\t\t- All functions named 'event <event-name> [event-selector]' will be moved to the 'events' map.\n\t**\t\t- All functions named 'route <route-path>' will be moved to the 'routes' map.\n\t**\n\t**\t>> void preparePrototype (object proto);\n\t*/ preparePrototype: function(proto) {\n        if (proto.__prototypePrepared === true) return;\n        proto.__prototypePrepared = true;\n        if (!proto.hasOwnProperty(\"events\") || !proto.events) proto.events = {};\n        if (!proto.hasOwnProperty(\"routes\") || !proto.routes) proto.routes = {};\n        for(let i in proto){\n            if (i.startsWith(\"event \")) {\n                proto.events[i.substr(6)] = proto[i];\n                delete proto[i];\n            } else if (i.startsWith(\"route \")) {\n                proto.routes[i.substr(6)] = proto[i];\n                delete proto[i];\n            }\n        }\n    },\n    /*\n\t**\tRegisters a new custom element with the specified name. Extra functionality can be added with one or more prototypes, by default\n\t**\tall elements also get the `Element` prototype. Note that the final prototypes of all registered elements are stored, and if you want\n\t**\tto inherit another element's prototype just provide its name (string) in the protos argument list.\n\t**\n\t**\t>> class register (string name, ...(object|string) protos);\n\t*/ register: function(name, ...protos) {\n        const newElement = class extends HTMLElement {\n            constructor(){\n                super();\n                this.invokeConstructor = true;\n                if ($a5c21812244207c8$var$Element.debug) console.log(\"CREATED \" + this.tagName);\n                this._super = {};\n                for (let i of Object.entries(this.constructor.prototype._super)){\n                    this._super[i[0]] = {};\n                    for (let j of Object.entries(i[1]))this._super[i[0]][j[0]] = j[1].bind(this);\n                }\n                this.onCreated();\n            }\n            findRoot(srcElement) {\n                let elem = srcElement ? srcElement : this.parentElement;\n                while(elem != null){\n                    if (\"isRoot\" in elem && elem.isRoot === true) return elem;\n                    elem = elem.parentElement;\n                }\n                return null;\n            }\n            findCustomParent(srcElement) {\n                let elem = srcElement ? srcElement.parentElement : this.parentElement;\n                while(elem != null){\n                    if (elem.tagName.indexOf(\"-\") !== -1) return elem;\n                    elem = elem.parentElement;\n                }\n                return null;\n            }\n            connectReference(root = null, flags = 255) {\n                if (!this.root && (flags & 1) == 1) {\n                    if (root == null) root = this.findRoot();\n                    if (root != null) {\n                        if (this.dataset.ref) root[this.dataset.ref] = this;\n                        this.root = root;\n                    }\n                }\n            }\n            connectedCallback() {\n                this.connectReference(null, 1);\n                if (this.invokeConstructor) {\n                    this.invokeConstructor = false;\n                    this.__ctor();\n                }\n                this.connectReference(null, 2);\n                this.elementConnected();\n                if (this.dataset.xref) globalThis[this.dataset.xref] = this;\n            }\n            disconnectedCallback() {\n                if (this.root) {\n                    if (this.dataset.ref) {\n                        this.root.onRefRemoved(this.dataset.ref, this);\n                        delete this.root[this.dataset.ref];\n                    }\n                    this.root = null;\n                }\n                this.elementDisconnected();\n                if (this.dataset.xref) delete globalThis[this.dataset.xref];\n            }\n        };\n        (0, $jNRwG.Rinn).override(newElement.prototype, $a5c21812244207c8$var$Element);\n        const proto = {};\n        const _super = {};\n        const events = (0, $jNRwG.Rinn).clone($a5c21812244207c8$var$Element.events);\n        let __init = true;\n        let __ready = true;\n        let __rready = true;\n        let __check;\n        for(let i = 0; i < protos.length; i++){\n            if (!protos[i]) continue;\n            if ((0, $jNRwG.Rinn).typeOf(protos[i]) == \"string\") {\n                const name = protos[i];\n                protos[i] = $a5c21812244207c8$var$elementPrototypes[name];\n                if (!protos[i]) continue;\n                _super[name] = {};\n                for(let f in protos[i]){\n                    if ((0, $jNRwG.Rinn).typeOf(protos[i][f]) != \"function\") continue;\n                    _super[name][f] = protos[i][f];\n                }\n                __init = false;\n                __ready = false;\n                __rready = false;\n                __check = false;\n            } else {\n                $a5c21812244207c8$var$Element.preparePrototype(protos[i]);\n                __check = true;\n            }\n            if (\"_super\" in protos[i]) (0, $jNRwG.Rinn).override(_super, protos[i]._super);\n            if (\"events\" in protos[i]) (0, $jNRwG.Rinn).override(events, protos[i].events);\n            (0, $jNRwG.Rinn).override(newElement.prototype, protos[i]);\n            (0, $jNRwG.Rinn).override(proto, protos[i]);\n            if (__check) {\n                if (!__init && \"init\" in protos[i]) __init = true;\n                if (!__ready && \"ready\" in protos[i]) __ready = true;\n                if (!__rready && \"rready\" in protos[i]) __rready = true;\n            }\n        }\n        let dummy = function() {};\n        if (!__init) {\n            newElement.prototype.init = dummy;\n            proto.init = dummy;\n        }\n        if (!__ready) {\n            newElement.prototype.ready = dummy;\n            proto.ready = dummy;\n        }\n        if (!__rready) {\n            newElement.prototype.rready = dummy;\n            proto.rready = dummy;\n        }\n        newElement.prototype._super = _super;\n        newElement.prototype.events = events;\n        proto._super = _super;\n        proto.events = events;\n        customElements.define(name, newElement);\n        $a5c21812244207c8$var$elementPrototypes[name] = proto;\n        $a5c21812244207c8$var$elementClasses[name] = newElement;\n        return newElement;\n    },\n    /*\n\t**\tExpands an already created custom element with the specified prototype(s).\n\t**\n\t**\t>> void expand (string elementName, ...object protos);\n\t*/ expand: function(name, ...protos) {\n        if (!(name in $a5c21812244207c8$var$elementPrototypes)) return;\n        const self = $a5c21812244207c8$var$elementPrototypes[name];\n        const elem = $a5c21812244207c8$var$elementClasses[name];\n        const _super = self._super;\n        const events = self.events;\n        for (let proto of protos){\n            $a5c21812244207c8$var$Element.preparePrototype(proto);\n            if (\"_super\" in proto) (0, $jNRwG.Rinn).override(_super, proto._super);\n            if (\"events\" in proto) (0, $jNRwG.Rinn).override(events, proto.events);\n            (0, $jNRwG.Rinn).override(elem.prototype, proto);\n            (0, $jNRwG.Rinn).override(self, proto);\n        }\n        elem.prototype._super = _super;\n        elem.prototype.events = events;\n        self._super = _super;\n        self.events = events;\n    },\n    /*\n\t**\tAppends a hook to a function of a custom element.\n\t*/ hookAppend: function(name, functionName, newFunction) {\n        if (!(name in $a5c21812244207c8$var$elementPrototypes)) return;\n        let hook1 = (0, $jNRwG.Rinn).hookAppend($a5c21812244207c8$var$elementPrototypes[name], functionName, newFunction);\n        let hook2 = (0, $jNRwG.Rinn).hookAppend($a5c21812244207c8$var$elementClasses[name].prototype, functionName, newFunction);\n        return {\n            unhook: function() {\n                hook1.unhook();\n                hook2.unhook();\n            }\n        };\n    },\n    /*\n\t**\tPrepends a hook to a function of a custom element.\n\t*/ hookPrepend: function(name, functionName, newFunction) {\n        if (!(name in $a5c21812244207c8$var$elementPrototypes)) return;\n        let hook1 = (0, $jNRwG.Rinn).hookPrepend($a5c21812244207c8$var$elementPrototypes[name], functionName, newFunction);\n        let hook2 = (0, $jNRwG.Rinn).hookPrepend($a5c21812244207c8$var$elementClasses[name].prototype, functionName, newFunction);\n        return {\n            unhook: function() {\n                hook1.unhook();\n                hook2.unhook();\n            }\n        };\n    },\n    /**\n\t**\tBuilt-in action handlers.\n\t*/ /**\n\t**\t:toggleClass <className> [<selector>]\n\t**\n\t**\tToggles a CSS class on the element.\n\t*/ \":toggleClass\": function(args, evt) {\n        let elem = evt.source;\n        if (\"2\" in args) elem = document.querySelector(args[2]);\n        if (!elem) return;\n        if (elem.classList.contains(args[1])) elem.classList.remove(args[1]);\n        else elem.classList.add(args[1]);\n    },\n    /**\n\t**\t:setClass <className> [<selector>]\n\t**\n\t**\tSets a CSS class on the element.\n\t*/ \":setClass\": function(args, evt) {\n        let elem = evt.source;\n        if (\"2\" in args) elem = document.querySelector(args[2]);\n        if (!elem) return;\n        elem.classList.add(args[1]);\n    },\n    /**\n\t**\t:volatileClass <className> [<selector>]\n\t**\n\t**\tAdds the CSS class to the element and any click outside will cause it to be removed.\n\t*/ \":volatileClass\": function(args, evt) {\n        let elem = evt.source;\n        if (\"2\" in args) elem = document.querySelector(args[2]);\n        if (!elem) return;\n        elem.classList.add(args[1]);\n        let fn = ()=>{\n            window.removeEventListener(\"click\", fn, true);\n            elem.classList.remove(args[1]);\n        };\n        window.addEventListener(\"click\", fn, true);\n    },\n    /**\n\t**\t:toggleClassUnique <className> <parentSelector> <childSelector>\n\t**\n\t**\tToggles a CSS class on the element and only one element in the selected parent can have the class.\n\t*/ \":toggleClassUnique\": function(args, evt) {\n        let elem = evt.source;\n        if (!elem) return;\n        if (elem.classList.contains(args[1])) elem.classList.remove(args[1]);\n        else {\n            elem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach((elem)=>elem.classList.remove(args[1]));\n            elem.classList.add(args[1]);\n        }\n    },\n    /**\n\t**\t:setClassUnique <className> <parentSelector> <childSelector>\n\t**\n\t**\tSets a CSS class on the element and only that element in the selected parent can have the class.\n\t*/ \":setClassUnique\": function(args, evt) {\n        let elem = evt.source;\n        if (!elem) return;\n        elem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach((elem)=>elem.classList.remove(args[1]));\n        elem.classList.add(args[1]);\n    }\n};\n$a5c21812244207c8$var$Element.debug = false;\n$a5c21812244207c8$var$Element.register(\"r-elem\", {});\n$a5c21812244207c8$var$Element.register(\"r-dom-probe\", {});\n/* ****************************************** */ /**\n * Finds the parent element given a selector.\n */ HTMLElement.prototype.querySelectorParent = function(selector) {\n    let elem = this;\n    while(elem != null){\n        if (elem.matches(selector)) break;\n        elem = elem.parentElement;\n    }\n    return elem;\n};\nvar $a5c21812244207c8$export$2e2bcd8739ae039 = $a5c21812244207c8$var$Element;\n\n\n\nvar $8AUAG = parcelRequire(\"8AUAG\");\n/**\r\n * API interface utility functions.\r\n */ const $7a42222fdfbd696d$var$Api = {\n    /**\r\n\t * Flags constants.\r\n\t */ REQUEST_PACKAGE_SUPPORTED: 0x01,\n    REQ64_SUPPORTED: 0x02,\n    JSON_RESPONSE_SUPPORTED: 0x04,\n    XML_RESPONSE_SUPPORTED: 0x08,\n    INCLUDE_CREDENTIALS: 0x10,\n    UNIQUE_STAMP: 0x20,\n    DISABLE_CORS: 0x40,\n    /**\r\n\t * Target URL for all the API requests. Set by calling `setEndPoint`.\r\n\t */ apiUrl: \"/api\",\n    /**\r\n\t * Capabilities flag.\r\n\t */ flags: 63,\n    /**\r\n\t * Indicates if all request data will be packed into a req64 parameter instead of individual fields.\r\n\t */ useReq64: false,\n    /**\r\n\t * Number of retries to execute each API call before giving up and invoking error handlers.\r\n\t */ retries: 0,\n    /**\r\n\t * Headers for the request.\r\n\t */ headers: {},\n    /**\r\n\t * Level of the current request. Used to detect nested requests.\r\n\t */ _requestLevel: 0,\n    /**\r\n\t * Indicates if all API calls should be bundled in a request package. Activated by calling the packageBegin() function and finished with packageEnd().\r\n\t */ _requestPackage: 0,\n    /**\r\n\t * When in package-mode, this contains the package data to be sent upon a call to packageEnd().\r\n\t */ _packageData: [],\n    /**\r\n\t * Sets the API end-point URL address.\r\n\t */ setEndPoint: function(apiUrl, flags = null) {\n        this.apiUrl = apiUrl;\n        this.flags = flags ?? this.flags;\n        return this;\n    },\n    /**\r\n\t * Overridable filter that processes the response from the server and returns true if it was successful. The `res` parameter indicates the response data, and `req` the request data.\r\n\t */ responseFilter: function(res, req) {\n        return true;\n    },\n    /**\r\n\t * Starts \"package-mode\" (using the `rpkg` field). Any API calls after this will be bundled together.\r\n\t */ packageBegin: function() {\n        if (!(this.flags & $7a42222fdfbd696d$var$Api.REQUEST_PACKAGE_SUPPORTED)) return;\n        this._requestPackage++;\n    },\n    /**\r\n\t * Finishes \"package-mode\" and a single API request with the currently constructed package will be sent.\r\n\t */ packageEnd: function(callback) {\n        if (!(this.flags & $7a42222fdfbd696d$var$Api.REQUEST_PACKAGE_SUPPORTED)) return;\n        if (!this._requestPackage) return;\n        if (--this._requestPackage) return;\n        this.packageSend(callback);\n    },\n    /**\r\n\t * Starts package-mode, executes the callback and finishes package-mode. Therefore any requests made by the callback will be packed together.\r\n\t */ batch: function(callback, responseCallback = null) {\n        if (!(this.flags & $7a42222fdfbd696d$var$Api.REQUEST_PACKAGE_SUPPORTED)) {\n            callback();\n            if (responseCallback) responseCallback();\n            return;\n        }\n        this.packageBegin();\n        callback();\n        this.packageEnd(responseCallback);\n    },\n    /**\r\n\t * Sends a single API request with the currently constructed package and maintains package-mode.\r\n\t */ packageSend: function(callback) {\n        if (!(this.flags & $7a42222fdfbd696d$var$Api.REQUEST_PACKAGE_SUPPORTED)) return;\n        if (!this._packageData.length) return;\n        let _packageData = this._packageData;\n        this._packageData = [];\n        var rpkg = \"\";\n        for(var i = 0; i < _packageData.length; i++)rpkg += \"r\" + i + \",\" + (0, (/*@__PURE__*/$parcel$interopDefault($8AUAG))).encode(this.encodeParams(_packageData[i][2])) + \";\";\n        this._showProgress();\n        this.apiCall({\n            rpkg: rpkg\n        }, (res, req)=>{\n            this._hideProgress();\n            for(let i = 0; i < _packageData.length; i++)try {\n                var response = res[\"r\" + i];\n                if (!response) {\n                    if (_packageData[i][1] != null) _packageData[i][1](_packageData[i][2]);\n                    continue;\n                }\n                if (_packageData[i][0] != null) {\n                    if (this.responseFilter(response, _packageData[i][2])) _packageData[i][0](response, _packageData[i][2]);\n                }\n            } catch (e) {}\n            if (callback) callback();\n        }, (req)=>{\n            this._hideProgress();\n            for(let i = 0; i < _packageData.length; i++)if (_packageData[i][1] != null) _packageData[i][1](_packageData[i][2]);\n        });\n    },\n    /**\r\n\t * Adds CSS class 'busy' to the HTML root element, works only if running inside a browser.\r\n\t */ _showProgress: function() {\n        if (\"document\" in $parcel$global) {\n            this._requestLevel++;\n            if (this._requestLevel > 0) $parcel$global.document.documentElement.classList.add(\"busy\");\n        }\n    },\n    /**\r\n\t * Removes the 'busy' CSS class from the HTML element.\r\n\t */ _hideProgress: function() {\n        if (\"document\" in $parcel$global) {\n            this._requestLevel--;\n            if (this._requestLevel) return;\n            setTimeout(()=>{\n                if (this._requestLevel === 0) $parcel$global.document.documentElement.classList.remove(\"busy\");\n            }, 250);\n        }\n    },\n    /**\r\n\t * Sets an HTTP header.\r\n\t */ header: function(name, value) {\n        if (value === null) delete this.headers[name];\n        else this.headers[name] = value;\n        return this;\n    },\n    /**\r\n\t * Returns a parameter string for a GET request given an object with fields.\r\n\t */ encodeParams: function(obj) {\n        let s = [];\n        if (obj instanceof FormData) for (let i of obj.entries())s.push(encodeURIComponent(i[0]) + \"=\" + encodeURIComponent(i[1]));\n        else for(let i in obj)s.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(obj[i]));\n        return s.join(\"&\");\n    },\n    /**\r\n\t * Returns a URL given a relative or absolute URL.\r\n\t */ getUrl: function(url) {\n        if (url.indexOf(\"//\") !== -1) return url;\n        return this.apiUrl + url;\n    },\n    /**\r\n\t * Appends a parameter to the URL.\r\n\t */ appendParam: function(url, param) {\n        return url + (url.indexOf(\"?\") == -1 ? \"?\" : \"&\") + param;\n    },\n    /**\r\n\t * Executes an API call to the URL stored in the `apiUrl` property. By default `httpMethod` is \"auto\", which will determine the best depending on the data to\r\n\t * be sent. Any connection error will be reported to the `failure` callback, and similarly any success to the `success` callback. The `params` object can be\r\n\t * a FormData object or just a regular object.\r\n\t */ apiCall: function(params, success, failure, httpMethod = null, retries = null, relativeUrl = \"\") {\n        let url = this.getUrl(relativeUrl);\n        if (this.flags & $7a42222fdfbd696d$var$Api.UNIQUE_STAMP) url = this.appendParam(url, \"_=\" + Date.now());\n        httpMethod = httpMethod ? httpMethod.toUpperCase() : null;\n        if (httpMethod != \"GET\" && httpMethod != \"POST\") httpMethod = \"auto\";\n        if (retries === null) retries = this.retries;\n        if (this._requestPackage && this.flags & $7a42222fdfbd696d$var$Api.REQUEST_PACKAGE_SUPPORTED) {\n            if (!(params instanceof FormData)) params = {\n                ...params\n            };\n            this._packageData.push([\n                success,\n                failure,\n                params\n            ]);\n            return;\n        }\n        this._showProgress();\n        let data = params;\n        let options = {\n            mode: this.flags & $7a42222fdfbd696d$var$Api.DISABLE_CORS ? \"no-cors\" : \"cors\",\n            headers: {\n                \"Accept\": \"text/html,application/xhtml+xml,application/xml,application/json;q=0.9\",\n                ...this.headers\n            },\n            method: httpMethod,\n            body: null,\n            multipart: false\n        };\n        if (this.flags & $7a42222fdfbd696d$var$Api.INCLUDE_CREDENTIALS) options.credentials = \"include\";\n        if (typeof data !== \"string\" && !(data instanceof Blob)) {\n            if (!(data instanceof FormData)) {\n                data = new FormData();\n                for(let i in params)if (params[i] instanceof File || params[i] instanceof Blob) data.append(i, params[i], params[i].name);\n                else data.append(i, params[i]);\n            }\n            for (let i of data.entries())if (i[1] instanceof File || i[1] instanceof Blob) {\n                options.method = \"POST\";\n                options.multipart = true;\n                break;\n            }\n            if (this.useReq64 && this.flags & $7a42222fdfbd696d$var$Api.REQ64_SUPPORTED && !options.multipart) {\n                let tmp = new FormData();\n                tmp.append(\"req64\", (0, (/*@__PURE__*/$parcel$interopDefault($8AUAG))).encode(this.encodeParams(data)));\n                data = tmp;\n            }\n            if (options.method == \"auto\") {\n                let l = 0;\n                options.method = \"GET\";\n                for (let i of data.entries()){\n                    l += i[0].length + i[1].length + 2;\n                    if (l > 960) {\n                        options.method = \"POST\";\n                        break;\n                    }\n                }\n            }\n            if (options.method == \"GET\") url = this.appendParam(url, this.encodeParams(data));\n            else if (!options.multipart) {\n                options.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n                options.body = this.encodeParams(data);\n            } else options.body = data;\n        } else {\n            if (typeof data === \"string\") {\n                if (data[0] === \"<\") {\n                    if (data.endsWith(\"</soap:Envelope>\")) options.headers[\"Content-Type\"] = \"application/soap+xml\";\n                    else options.headers[\"Content-Type\"] = \"application/xml\";\n                } else if (data[0] === \"{\" || data[0] === \"[\") options.headers[\"Content-Type\"] = \"application/json\";\n                else options.headers[\"Content-Type\"] = \"application/octet-stream\";\n            } else options.headers[\"Content-Type\"] = data.type;\n            options.method = \"POST\";\n            options.body = data;\n        }\n        $parcel$global.fetch(url, options).then((result)=>this.decodeResult(result)).then((result)=>{\n            this._hideProgress();\n            if (!success) return;\n            if (this.responseFilter(result, params)) try {\n                success(result, params);\n            } catch (e) {}\n        }).catch((err)=>{\n            this._hideProgress();\n            if (retries == 0) {\n                if (failure) failure(err, params);\n            } else this.apiCall(data, success, failure, httpMethod, retries - 1, relativeUrl);\n        });\n    },\n    /**\r\n\t * Decodes a result obtained using fetch into a usable object.\r\n\t */ decodeResult: function(result) {\n        let type = result.headers.get(\"content-type\").split(\";\")[0].toLowerCase();\n        if (this.flags & $7a42222fdfbd696d$var$Api.JSON_RESPONSE_SUPPORTED && type.indexOf(\"json\") !== -1) return result.json();\n        if (this.flags & $7a42222fdfbd696d$var$Api.XML_RESPONSE_SUPPORTED && type.indexOf(\"xml\") !== -1) return new Promise((resolve, reject)=>{\n            result.text().then((data)=>{\n                data = (new DOMParser).parseFromString(data, \"text/xml\");\n                resolve(data);\n            }).catch(reject);\n        });\n        return result.blob();\n    },\n    /**\r\n\t * Makes a blob with the specified data and type.\r\n\t */ getBlob: function(data, type) {\n        return new Blob([\n            data\n        ], {\n            type: type\n        });\n    },\n    /**\r\n\t * Provided access to the base64 module to encode/decode data.\r\n\t */ base64: {\n        encode: function(value) {\n            return (0, (/*@__PURE__*/$parcel$interopDefault($8AUAG))).encode(value);\n        },\n        decode: function(value) {\n            return (0, (/*@__PURE__*/$parcel$interopDefault($8AUAG))).decode(value);\n        }\n    },\n    /**\r\n\t * Executes an API request, returns a promise.\r\n\t */ request: function(method, url, params = null) {\n        if (params === null) {\n            if (typeof url !== \"string\") {\n                params = url;\n                url = \"\";\n            }\n        }\n        return new Promise((resolve, reject)=>{\n            this.apiCall(params, resolve, reject, null, method, url);\n        });\n    },\n    /**\r\n\t * Executes a POST API call.\r\n\t */ post: function(params, success = null, failure = null) {\n        return this.apiCall(params, success, failure, \"POST\");\n    },\n    /**\r\n\t * Executes a GET API call.\r\n\t */ get: function(params, success = null, failure = null) {\n        return this.apiCall(params, success, failure, \"GET\");\n    },\n    /**\r\n\t * Executes an automatic API call, returns a promise.\r\n\t */ fetch: function(url, params = null) {\n        if (params === null) {\n            if (typeof url !== \"string\") {\n                params = url;\n                url = \"\";\n            }\n        }\n        return new Promise((resolve, reject)=>{\n            this.apiCall(params, resolve, reject, null, null, url);\n        });\n    },\n    /**\r\n\t * Builds a URL from the given data.\r\n\t */ makeUrl: function(url, params = null) {\n        if (params === null) {\n            if (typeof url !== \"string\") {\n                params = url;\n                url = \"\";\n            }\n        }\n        return this.appendParam(this.getUrl(url), this.encodeParams(params));\n    }\n};\nvar $7a42222fdfbd696d$export$2e2bcd8739ae039 = $7a42222fdfbd696d$var$Api;\n\n\n\nvar $jNRwG = parcelRequire(\"jNRwG\");\n\nvar /*\r\n**\tProvides several methods to quickly interface with a remote data-source as defined by Wind.\r\n*/ $80620d99b03812be$export$2e2bcd8739ae039 = (0, $jNRwG.EventDispatcher).extend({\n    className: \"DataSource\",\n    debounceDelay: 250,\n    request: null,\n    includeCount: false,\n    includeEnum: false,\n    includeList: true,\n    eid: null,\n    count: 0,\n    list: null,\n    enum: null,\n    /*\r\n\t**\tConstructs the data source with the specified optional `config` parameters, any of the properties of this object can be specified\r\n\t**\tin the config. Uses the given basePath as prefix for the `f` parameter for subsequent API operations, a basePath of `candies` will\r\n\t**\tresult in calls to `candies.list`, `candies.count`, etc.\r\n\t*/ __ctor: function(basePath, config) {\n        this._super.EventDispatcher.__ctor();\n        this.basePath = basePath;\n        if (config) Object.assign(this, config);\n        this.request = new (0, $jNRwG.Model)(this.request);\n        this.eid = Math.random().toString().substr(2);\n        this.count = 0;\n        this.list = new (0, $jNRwG.ModelList)();\n        this.list.dataSource = this;\n        this.enum = new (0, $jNRwG.ModelList)();\n        this.enum.dataSource = this;\n        this.request.addEventListener(this.eid + \":propertyChanged\", this.forwardRequestEvent, this);\n        this.list.addEventListener(this.eid + \":itemsCleared\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemsChanged\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemRemoved\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemChanged\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemAdded\", this.forwardListEvent, this);\n        this.enum.addEventListener(this.eid + \":itemsCleared\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemsChanged\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemRemoved\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemChanged\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemAdded\", this.forwardEnumEvent, this);\n    },\n    forwardRequestEvent: function(evt, args) {\n        this.prepareEvent(\"request\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    forwardListEvent: function(evt, args) {\n        this.prepareEvent(\"list\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    forwardEnumEvent: function(evt, args) {\n        this.prepareEvent(\"enum\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    /*\r\n\t**\tExecutes one or more API functions (depending on `includeCount`, `includeEnum` and `includeList` properties) to retrieve the\r\n\t**\trequired data (uses debounce to prevent too-quick refreshes).\r\n\t**\r\n\t**\tRefresh mode can be: order, filter, range, enum or full. Setting `mode` to `true` will cause a full refresh without debouncing.\r\n\t*/ refresh: function(mode = \"full\", callback = null) {\n        if (typeof mode == \"function\") {\n            callback = mode;\n            mode = \"full\";\n        }\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = null;\n        }\n        const fn = ()=>{\n            this._timeout = null;\n            (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).packageBegin();\n            if (this.includeCount && (mode === \"full\" || mode === \"filter\")) this.fetchCount();\n            if (this.includeEnum && (mode === \"full\" || mode === \"enum\")) this.fetchEnum();\n            if (this.includeList && mode !== \"enum\") this.fetchList();\n            (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).packageEnd(callback);\n        };\n        if (mode === true) {\n            mode = \"full\";\n            fn();\n        } else this._timeout = setTimeout(fn, this.debounceDelay);\n    },\n    /*\r\n\t**\tSearches for the item in `list` that matches the specified `fields` and sends it to the callback. If no item is found (or if `forced` is true),\r\n\t**\ta call to API function `.get` will be executed with the fields as request parameters. Returns a promise.\r\n\t*/ fetch: function(fields, forced = false) {\n        return new Promise((resolve, reject)=>{\n            let item = forced == true ? null : this.list.find(fields, true);\n            if (!item) this.fetchOne(fields, (r)=>{\n                if (r && r.response == 200) {\n                    if (r.data.length > 0) resolve(r.data[0]);\n                    else reject(r);\n                } else reject(r);\n            });\n            else resolve(item.get());\n        });\n    },\n    /*\r\n\t**\tRemoves an item from the remote data source by executing the `.delete` API function, passes the given `fields` as request\r\n\t**\tparameters. Returns a promise.\r\n\t*/ delete: function(params) {\n        return new Promise((resolve, reject)=>{\n            this.fetchDelete(params, (r)=>{\n                if (r.response == 200) resolve(r);\n                else reject(r.error);\n            });\n        });\n    },\n    fetchList: function() {\n        let data = {\n            ...this.request.get()\n        };\n        data.f = this.basePath + \".list\";\n        this.dispatchEvent(\"listLoading\");\n        (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            this.list.setData(r.response == 200 ? r.data : null);\n            this.dispatchEvent(\"listLoaded\");\n            this.dispatchEvent(\"listChanged\");\n        });\n    },\n    fetchEnum: function() {\n        let data = {\n            ...this.request.get()\n        };\n        data.f = this.basePath + \".enum\";\n        this.dispatchEvent(\"enumLoading\");\n        (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            this.enum.setData(r.response == 200 ? r.data : null);\n            this.dispatchEvent(\"enumLoaded\");\n            this.dispatchEvent(\"enumChanged\");\n        });\n    },\n    fetchCount: function() {\n        let data = {\n            ...this.request.get()\n        };\n        data.f = this.basePath + \".count\";\n        this.dispatchEvent(\"countLoading\");\n        (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            this.count = r.response == 200 ? r.count : 0;\n            this.dispatchEvent(\"countLoaded\");\n            this.dispatchEvent(\"countChanged\");\n        });\n    },\n    fetchOne: function(params, callback) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        data.f = this.basePath + \".get\";\n        (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            callback(r);\n        });\n    },\n    fetchDelete: function(params, callback) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        data.f = this.basePath + \".delete\";\n        (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            callback(r);\n        });\n    },\n    fetchData: function(params) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        if (data.f[0] == \".\") data.f = this.basePath + data.f;\n        return (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).fetch(data);\n    },\n    makeUrl: function(params) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        if (data.f[0] == \".\") data.f = this.basePath + data.f;\n        return (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).makeUrl(data);\n    }\n});\n\n\n\nvar $jNRwG = parcelRequire(\"jNRwG\");\n\nvar /*\r\n**\tProvides an interface to connect with a listing API function.\r\n*/ $dae0bbca73793b94$export$2e2bcd8739ae039 = (0, $jNRwG.ModelList).extend({\n    className: \"DataList\",\n    debounceDelay: 250,\n    request: null,\n    eid: null,\n    /*\r\n\t**\tConstructs the data list with the specified optional `config` parameters, any of the properties of this object can be specified\r\n\t**\tin the config. The given `f` parameter is passed directly as a request parameter to the API.\r\n\t*/ __ctor: function(f, config = null) {\n        this._super.ModelList.__ctor();\n        if (config !== null) Object.assign(this, config);\n        if (!this.request) this.request = {};\n        this.request.f = f;\n        this.request = new (0, $jNRwG.Model)(this.request);\n        this.eid = Math.random().toString().substr(2);\n        this.dataList = this;\n        this.request.addEventListener(this.eid + \":propertyChanged\", this.forwardRequestEvent, this);\n    },\n    forwardRequestEvent: function(evt, args) {\n        this.prepareEvent(\"request\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    /*\r\n\t**\tExecutes a request to retrieve the data for the list (uses debounce to prevent too-quick refreshes).\r\n\t*/ refresh: function(callback = null, _callback = null) {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = null;\n        }\n        if (callback === true) {\n            this.dispatchEvent(\"listLoading\");\n            (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).fetch(this.request.get()).then((r)=>{\n                this.setData(r.response == 200 ? r.data : null);\n                this.dispatchEvent(\"listLoaded\");\n                this.dispatchEvent(\"listChanged\");\n                if (_callback !== null) _callback();\n            });\n            return;\n        }\n        const fn = ()=>{\n            this.refresh(true, callback);\n        };\n        this._timeout = setTimeout(fn, this.debounceDelay);\n    }\n});\n\n\n/**\n**\tCollection of useful easing functions (imported from Cherry source code).\n*/ const $34149b5e20a7ad4b$var$Easing = {\n    /**\n\t**\tInterpolates numeric values between two objects (`src` and `dst`) using the specified `duration` (in seconds) and `easing` function. Note\n\t**\tthat all four parameters `src`, `dst`, `duration` and `easing` must be objects having the same number of values.\n\t*/ interpolate: function(src, dst, duration, easing, callback /* function(data, isFinished) */ ) {\n        let time = {};\n        let data = {};\n        let count = 0;\n        for(let x in src){\n            time[x] = 0.0;\n            data[x] = src[x];\n            count++;\n        }\n        let lastTime = Date.now() / 1000;\n        let dt = 0;\n        let interpolator = function() {\n            let curTime = Date.now() / 1000;\n            dt = curTime - lastTime;\n            lastTime = curTime;\n            for(let x in time){\n                if (time[x] == duration[x]) continue;\n                time[x] += dt;\n                if (time[x] >= duration[x]) {\n                    time[x] = duration[x];\n                    count--;\n                }\n                let t = easing[x](time[x] / duration[x]);\n                data[x] = (1 - t) * src[x] + t * dst[x];\n            }\n            callback(data, count == 0);\n            if (count != 0) requestAnimationFrame(interpolator);\n        };\n        interpolator();\n    },\n    /* ******************************************** */ Linear: {\n        IN: function(t) {\n            return t;\n        },\n        OUT: function(t) {\n            return t;\n        },\n        IN_OUT: function(t) {\n            return t;\n        }\n    },\n    /* ******************************************** */ Back: {\n        k: 1.70158,\n        IN: function(t, k) {\n            if (k === undefined) k = $34149b5e20a7ad4b$var$Easing.Back.k;\n            return t * t * ((k + 1) * t - k);\n        },\n        OUT: function(t, k) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Back.IN(1 - t, k);\n        },\n        IN_OUT: function(t, k) {\n            if (t < 0.5) return $34149b5e20a7ad4b$var$Easing.Back.IN(t * 2, k) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Back.OUT((t - 0.5) * 2, k) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Bounce: {\n        getConst: function(t) {\n            if (t < 1.0 / 2.75) return 7.5625 * t * t;\n            else if (t < 2.0 / 2.75) return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n            else if (t < 2.5 / 2.75) return 7.5625 * (t -= 2.250 / 2.75) * t + 0.9375;\n            return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n        },\n        IN: function(t) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Bounce.getConst(1 - t);\n        },\n        OUT: function(t) {\n            return $34149b5e20a7ad4b$var$Easing.Bounce.getConst(t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return (1 - $34149b5e20a7ad4b$var$Easing.Bounce.getConst(1 - 2 * t)) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Bounce.getConst((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Circ: {\n        IN: function(t) {\n            return 1 - Math.sqrt(1 - t * t);\n        },\n        OUT: function(t) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Circ.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $34149b5e20a7ad4b$var$Easing.Circ.IN(t * 2) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Circ.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Cubic: {\n        IN: function(t) {\n            return t * t * t;\n        },\n        OUT: function(t) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Cubic.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $34149b5e20a7ad4b$var$Easing.Cubic.IN(t * 2) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Cubic.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Expo: {\n        IN: function(t) {\n            return Math.pow(2, 12 * (t - 1));\n        },\n        OUT: function(t) {\n            return -Math.pow(2, -12 * t) + 1;\n        },\n        IN_OUT: function(t) {\n            if ((t *= 2) < 1) return Math.pow(2, 12 * (t - 1)) / 2;\n            else return (-Math.pow(2, -12 * (t - 1)) + 2) / 2;\n        }\n    },\n    /* ******************************************** */ Power: {\n        p: 12,\n        IN: function(t) {\n            return Math.pow(t, $34149b5e20a7ad4b$var$Easing.Power.p);\n        },\n        OUT: function(t) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Power.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $34149b5e20a7ad4b$var$Easing.Power.IN(t * 2) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Power.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Quad: {\n        IN: function(t) {\n            return t * t;\n        },\n        OUT: function(t) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Quad.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $34149b5e20a7ad4b$var$Easing.Quad.IN(t * 2) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Quad.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Quartic: {\n        IN: function(t) {\n            return t * t * t * t;\n        },\n        OUT: function(t) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Quartic.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $34149b5e20a7ad4b$var$Easing.Quartic.IN(t * 2) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Quartic.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Quintic: {\n        IN: function(t) {\n            return t * t * t * t * t;\n        },\n        OUT: function(t) {\n            return 1 - $34149b5e20a7ad4b$var$Easing.Quintic.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $34149b5e20a7ad4b$var$Easing.Quintic.IN(t * 2) / 2;\n            else return $34149b5e20a7ad4b$var$Easing.Quintic.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Sine: {\n        IN: function(t) {\n            return 1 - Math.sin(1.5708 * (1 - t));\n        },\n        OUT: function(t) {\n            return Math.sin(1.5708 * t);\n        },\n        IN_OUT: function(t) {\n            return (Math.cos(3.1416 * t) - 1) / -2;\n        }\n    },\n    /* ******************************************** */ Step: {\n        IN: function(t) {\n            return t != 1.0 ? 0 : 1.0;\n        },\n        OUT: function(t) {\n            return t != 1.0 ? 0 : 1.0;\n        },\n        IN_OUT: function(t) {\n            return t != 1.0 ? 0 : 1.0;\n        }\n    }\n};\nvar $34149b5e20a7ad4b$export$2e2bcd8739ae039 = $34149b5e20a7ad4b$var$Easing;\n\n\n\nvar $jNRwG = parcelRequire(\"jNRwG\");\n/**\n**\tClass to animate properties using rules (imported from Cherry source code).\n*/ const $b77ee20098523c74$var$Anim = (0, $jNRwG.Class).extend({\n    list: null,\n    initialData: null,\n    data: null,\n    stack: null,\n    block: null,\n    timeScale: 1,\n    time: 0,\n    blockTime: 0,\n    index: 0,\n    paused: false,\n    finished: false,\n    onFinishedCallback: null,\n    onUpdatedCallback: null,\n    __ctor: function() {\n        this.list = [];\n        this.initialData = {};\n        this.data = {};\n        this.stack = [];\n        this.block = this.list;\n        this.reset();\n    },\n    __dtor: function() {},\n    clone: function() {\n        let a = new $b77ee20098523c74$var$Anim();\n        a.list = this.list;\n        a.initialData = this.initialData;\n        return a.reset();\n    },\n    onFinished: function(callback) {\n        this.onFinishedCallback = callback;\n        return this;\n    },\n    onUpdated: function(callback) {\n        this.onUpdatedCallback = callback;\n        return this;\n    },\n    // Resets the animation to its initial state.\n    reset: function() {\n        this.stack.length = 0;\n        this.blockTime = 0;\n        this.time = 0;\n        this.index = 0;\n        this.block = this.list;\n        this.paused = true;\n        this.finished = false;\n        this.handle = null;\n        for(let i in this.initialData)this.data[i] = this.initialData[i];\n        return this;\n    },\n    // Sets the initial data.\n    initial: function(data) {\n        this.initialData = data;\n        return this.reset();\n    },\n    // Sets the time scale (animation speed).\n    speed: function(value) {\n        this.timeScale = value > 0.0 ? value : 1.0;\n        return this;\n    },\n    // Sets the output data object.\n    setOutput: function(data) {\n        this.data = data;\n        return this;\n    },\n    // Pauses the animation.\n    pause: function() {\n        if (this.paused) return;\n        clearInterval(this.handle);\n        this.paused = true;\n    },\n    // Resumes the animation.\n    resume: function() {\n        if (!this.paused) return;\n        let lastTime = Date.now() / 1000;\n        this.handle = setInterval(()=>{\n            let curTime = Date.now() / 1000;\n            let dt = curTime - lastTime;\n            lastTime = curTime;\n            this.update(dt);\n            if (this.onUpdatedCallback) this.onUpdatedCallback(this.data, this);\n        }, 16);\n        if (this.onUpdatedCallback) this.onUpdatedCallback(this.data, this);\n        this.paused = false;\n    },\n    // Updates the animation by the specified delta time (seconds).\n    update: function(dt) {\n        if (this.paused) return false;\n        if (this.index >= this.block.length) return true;\n        let i = 0;\n        let _block;\n        let _index;\n        let _blockTime;\n        this.time += dt * this.timeScale;\n        while(this.index < this.block.length){\n            let cmd = this.block[this.index];\n            let duration;\n            switch(cmd.op){\n                case \"parallel\":\n                    if (cmd.started == false) {\n                        cmd.blocks.length = 0;\n                        cmd.started = true;\n                        for(i = 0; i < cmd.block.length; i++){\n                            cmd.blocks.push([\n                                cmd.block[i]\n                            ]);\n                            cmd.indices[i] = 0;\n                            cmd.blockTimes[i] = this.blockTime;\n                        }\n                    }\n                    _block = this.block;\n                    _index = this.index;\n                    _blockTime = this.blockTime;\n                    let n = 0;\n                    let blockTime = _blockTime;\n                    for(i = 0; i < cmd.blocks.length; i++){\n                        this.block = cmd.blocks[i];\n                        this.index = cmd.indices[i];\n                        this.blockTime = cmd.blockTimes[i];\n                        if (this.update(0) === true) n++;\n                        if (this.blockTime > blockTime) blockTime = this.blockTime;\n                        cmd.blockTimes[i] = this.blockTime;\n                        cmd.blocks[i] = this.block;\n                        cmd.indices[i] = this.index;\n                    }\n                    this.block = _block;\n                    this.index = _index;\n                    this.blockTime = _blockTime;\n                    if (cmd.fn) cmd.fn.call(this);\n                    if (n != cmd.blocks.length) return false;\n                    cmd.started = false;\n                    this.blockTime = blockTime;\n                    this.index++;\n                    break;\n                case \"serial\":\n                    if (cmd.started == false) {\n                        cmd._block = cmd.block;\n                        cmd._index = 0;\n                        cmd._blockTime = this.blockTime;\n                        cmd.started = true;\n                    }\n                    _block = this.block;\n                    _index = this.index;\n                    _blockTime = this.blockTime;\n                    this.block = cmd._block;\n                    this.index = cmd._index;\n                    this.blockTime = cmd._blockTime;\n                    i = this.update(0);\n                    cmd._block = this.block;\n                    cmd._index = this.index;\n                    cmd._blockTime = this.blockTime;\n                    this.block = _block;\n                    this.index = _index;\n                    this.blockTime = _blockTime;\n                    if (cmd.fn) cmd.fn.call(this);\n                    if (i !== true) return false;\n                    cmd.started = false;\n                    this.blockTime = cmd._blockTime;\n                    this.index++;\n                    break;\n                case \"repeat\":\n                    if (cmd.started == false) {\n                        cmd._block = cmd.block;\n                        cmd._index = 0;\n                        cmd._blockTime = this.blockTime;\n                        cmd._count = cmd.count;\n                        cmd.started = true;\n                    }\n                    _block = this.block;\n                    _index = this.index;\n                    _blockTime = this.blockTime;\n                    this.block = cmd._block;\n                    this.index = cmd._index;\n                    this.blockTime = cmd._blockTime;\n                    i = this.update(0);\n                    cmd._block = this.block;\n                    cmd._index = this.index;\n                    cmd._blockTime = this.blockTime;\n                    this.block = _block;\n                    this.index = _index;\n                    this.blockTime = _blockTime;\n                    if (cmd.fn) cmd.fn.call(this);\n                    if (i !== true) return false;\n                    if (cmd._count <= 1) {\n                        cmd.started = false;\n                        this.blockTime = cmd._blockTime;\n                        this.index++;\n                        return false;\n                    } else {\n                        cmd._index = 0;\n                        cmd._count--;\n                        return false;\n                    }\n                    break;\n                case \"set\":\n                    this.data[cmd.field] = cmd.value;\n                    this.index++;\n                    break;\n                case \"restart\":\n                    this.index = 0;\n                    break;\n                case \"wait\":\n                    duration = (0, $jNRwG.Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) return false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"range\":\n                    if (cmd.started == false) {\n                        if (cmd.startValue === null) cmd._startValue = this.data[cmd.field];\n                        else cmd._startValue = cmd.startValue;\n                        cmd._endValue = cmd.endValue;\n                        cmd.started = true;\n                    }\n                    duration = (0, $jNRwG.Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) dt = (this.time - this.blockTime) / duration;\n                    else dt = 1;\n                    if (cmd.easing && dt != 1.0) this.data[cmd.field] = cmd.easing(dt) * (cmd._endValue - cmd._startValue) + cmd._startValue;\n                    else this.data[cmd.field] = dt * (cmd._endValue - cmd._startValue) + cmd._startValue;\n                    if (dt != 1) return false;\n                    cmd.started = false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"rand\":\n                    if (cmd.started == false) {\n                        cmd.started = true;\n                        cmd.last = null;\n                    }\n                    duration = (0, $jNRwG.Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) dt = (this.time - this.blockTime) / duration;\n                    else dt = 1;\n                    if (cmd.easing && dt != 1) cmd.cur = ~~(cmd.easing(dt) * cmd.count);\n                    else cmd.cur = ~~(dt * cmd.count);\n                    if (cmd.cur != cmd.last) {\n                        while(true){\n                            i = ~~(Math.random() * (cmd.endValue - cmd.startValue + 1)) + cmd.startValue;\n                            if (i != this.data[cmd.field]) break;\n                        }\n                        this.data[cmd.field] = i;\n                        cmd.last = cmd.cur;\n                    }\n                    if (dt != 1) return false;\n                    cmd.started = false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"randt\":\n                    duration = (0, $jNRwG.Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) dt = (this.time - this.blockTime) / duration;\n                    else dt = 1;\n                    if (cmd.easing && dt != 1) i = cmd.easing(dt) * (cmd.count - 1);\n                    else i = dt * (cmd.count - 1);\n                    this.data[cmd.field] = cmd.table[~~((i + cmd.count) % cmd.count)];\n                    if (dt != 1) return false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"play\":\n                    cmd.snd.play();\n                    this.index++;\n                    break;\n                case \"exec\":\n                    cmd.fn.call(this, this);\n                    this.index++;\n                    break;\n            }\n        }\n        if (this.block == this.list) {\n            if (!this.finished && this.onFinishedCallback != null) this.onFinishedCallback();\n            this.pause();\n            this.finished = true;\n        }\n        return true;\n    },\n    // Runs the subsequent commands in parallel. Should end the parallel block by calling end().\n    parallel: function() {\n        let block = [];\n        this.block.push({\n            op: \"parallel\",\n            started: false,\n            block: block,\n            blocks: [],\n            indices: [],\n            blockTimes: []\n        });\n        this.stack.push(this.block);\n        this.block = block;\n        return this;\n    },\n    // Runs the subsequent commands in series. Should end the serial block by calling end().\n    serial: function() {\n        let block = [];\n        this.block.push({\n            op: \"serial\",\n            started: false,\n            block: block\n        });\n        this.stack.push(this.block);\n        this.block = block;\n        return this;\n    },\n    // Repeats a block the specified number of times.\n    repeat: function(count) {\n        let block = [];\n        this.block.push({\n            op: \"repeat\",\n            started: false,\n            block: block,\n            count: count\n        });\n        this.stack.push(this.block);\n        this.block = block;\n        return this;\n    },\n    // Sets the callback of the current block.\n    callback: function(fn) {\n        let block = this.stack[this.stack.length - 1];\n        block[block.length - 1].fn = fn;\n        return this;\n    },\n    // Ends a parallel(), serial() or repeat() block.\n    end: function() {\n        this.block = this.stack.pop();\n        return this;\n    },\n    // Sets the value of a variable.\n    set: function(field, value) {\n        this.block.push({\n            op: \"set\",\n            field: field,\n            value: value\n        });\n        return this;\n    },\n    // Restarts the current block.\n    restart: function(duration) {\n        this.block.push({\n            op: \"restart\"\n        });\n        return this;\n    },\n    // Waits for the specified duration.\n    wait: function(duration) {\n        this.block.push({\n            op: \"wait\",\n            duration: duration\n        });\n        return this;\n    },\n    // Sets the range of a variable.\n    range: function(field, duration, startValue, endValue, easing) {\n        this.block.push({\n            op: \"range\",\n            started: false,\n            field: field,\n            duration: duration,\n            startValue: startValue,\n            endValue: endValue,\n            easing: easing ? easing : null\n        });\n        return this;\n    },\n    // Generates a certain amount of random numbers in the given range (inclusive).\n    rand: function(field, duration, count, startValue, endValue, easing) {\n        this.block.push({\n            op: \"rand\",\n            started: false,\n            field: field,\n            duration: duration,\n            count: count,\n            startValue: startValue,\n            endValue: endValue,\n            easing: easing ? easing : null\n        });\n        return this;\n    },\n    // Generates a certain amount of random numbers in the given range (inclusive). This uses a static random table to determine the next values.\n    randt: function(field, duration, count, startValue, endValue, easing) {\n        let table = [];\n        for(let i = 0; i < count; i++)table.push(i % (endValue - startValue + 1) + startValue);\n        for(let i = count >> 2; i > 0; i--){\n            let a = ~~(Math.random() * count);\n            let b = ~~(Math.random() * count);\n            let c = table[b];\n            table[b] = table[a];\n            table[a] = c;\n        }\n        this.block.push({\n            op: \"randt\",\n            field: field,\n            duration: duration,\n            count: count,\n            startValue: startValue,\n            endValue: endValue,\n            table: table,\n            easing: easing ? easing : null\n        });\n        return this;\n    },\n    // Plays a sound.\n    play: function(snd) {\n        this.block.push({\n            op: \"play\",\n            snd: snd\n        });\n        return this;\n    },\n    // Executes a function.\n    exec: function(fn) {\n        this.block.push({\n            op: \"exec\",\n            fn: fn\n        });\n        return this;\n    }\n});\nvar $b77ee20098523c74$export$2e2bcd8739ae039 = $b77ee20098523c74$var$Anim;\n\n\n/*\n    <r-tabs data-container=\"div.tab-container\" data-base-route=\"@\" data-initial=\"tab1\">\n        <a data-name=\"tab1\">Tab-1</a>\n        <a data-name=\"tab2\">Tab-2</a>\n        <a data-name=\"tab3\">Tab-3</a>\n    </r-tabs>\n\n    <div class=\"tab-container\">\n        <div data-name=\"tab1\">\n            This is tab-1.\n        </div>\n\n        <div data-name=\"tab2\">\n            This is tab-2.\n        </div>\n\n        <div data-name=\"tab3\">\n            This is tab-3.\n        </div>\n    </div>\n\n    .is-hidden {\n        display: none;\n    }\n\n    r-tabs [data-name].is-active {\n        font-weight: bold;\n    }\n*/ \n\nvar $f7bcc5a668e0670f$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-tabs\", {\n    /**\n     * Container element for tab content.\n     */ container: null,\n    /**\n     * Active tab name.\n     */ activeTab: null,\n    /**\n    **\tElement events.\n    */ \"event click [data-name]\": function(evt) {\n        evt.continuePropagation = true;\n        if (this.dataset.baseRoute) {\n            location = \"#\" + (0, $a60d7ab082450164$export$2e2bcd8739ae039).realLocation(this.dataset.baseRoute.replace(\"@\", evt.source.dataset.name));\n            return;\n        }\n        this.selectTab(evt.source.dataset.name);\n    },\n    /**\n    **\tInitializes the Tabs element.\n    */ init: function() {\n        this._routeHandler = (evt, args)=>{\n            if ((0, $a60d7ab082450164$export$2e2bcd8739ae039).location != \"\") this.querySelectorAll(\"[href]\").forEach((link)=>{\n                if (!link.href) return;\n                if ((0, $a60d7ab082450164$export$2e2bcd8739ae039).location.startsWith(link.href.substr(link.href.indexOf(\"#\") + 1))) {\n                    link.classList.add(\"is-active\");\n                    link.classList.remove(\"is-inactive\");\n                } else {\n                    link.classList.add(\"is-inactive\");\n                    link.classList.remove(\"is-active\");\n                }\n                link.classList.remove(\"anim-ended\");\n                link.onanimationend = ()=>{\n                    link.onanimationend = null;\n                    link.classList.add(\"anim-ended\");\n                };\n            });\n            if (!args.route.changed) return;\n            this.showTab(args.tabName);\n        };\n    },\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ ready: function() {\n        if (\"container\" in this.dataset) {\n            if (this.dataset.container == \":previousElement\") this.container = this.previousElementSibling;\n            else if (this.dataset.container == \":nextElement\") this.container = this.nextElementSibling;\n            else if (this.dataset.container == \":none\") this.container = null;\n            else this.container = document.querySelector(this.dataset.container);\n        } else this.container = this.nextElementSibling;\n        this._hideTabsExcept(this.dataset.initial);\n    },\n    /**\n    **\tAdds a handler to Router if the data-base-route attribute was set.\n    */ onConnected: function() {\n        if (this.dataset.baseRoute) (0, $a60d7ab082450164$export$2e2bcd8739ae039).addRoute(this.dataset.baseRoute.replace(\"@\", \":tabName\"), this._routeHandler);\n    },\n    /**\n    **\tRemoves a handler previously added to Router if the data-base-route attribute was set.\n    */ onDisconnected: function() {\n        if (this.dataset.baseRoute) (0, $a60d7ab082450164$export$2e2bcd8739ae039).removeRoute(this.dataset.baseRoute.replace(\"@\", \":tabName\"), this._routeHandler);\n    },\n    /**\n    **\tHides all tabs except the one with the specified exceptName, if none specified then all tabs will be hidden (adds `.is-hidden` CSS class),\n    **\tadditionally the respective link item in the tab definition will have class `.is-active`.\n    */ _hideTabsExcept: function(exceptName) {\n        if (!exceptName) exceptName = \"\";\n        if (this.container != null) this.container.querySelectorAll(\":scope > [data-name]\").forEach((i)=>{\n            if (i.dataset.name === exceptName) {\n                i.classList.remove(\"is-hidden\");\n                this.dispatch(\"tabShown\", {\n                    name: i.dataset.name,\n                    el: i\n                });\n            } else {\n                i.classList.add(\"is-hidden\");\n                this.dispatch(\"tabHidden\", {\n                    name: i.dataset.name,\n                    el: i\n                });\n            }\n        });\n        this.querySelectorAll(\"[data-name]\").forEach((link)=>{\n            if (link.dataset.name === exceptName) {\n                link.classList.add(\"is-active\");\n                link.classList.remove(\"is-inactive\");\n            } else {\n                link.classList.add(\"is-inactive\");\n                link.classList.remove(\"is-active\");\n            }\n            link.classList.remove(\"anim-ended\");\n            link.onanimationend = ()=>{\n                link.onanimationend = null;\n                link.classList.add(\"anim-ended\");\n            };\n        });\n        this.activeTab = exceptName;\n        this.dispatch(\"tabChanged\", {\n            name: exceptName,\n            el: this\n        });\n    },\n    /**\n    **\tShows the tab with the specified name, ignores `data-base-route` and current route as well.\n    */ showTab: function(name) {\n        return this._hideTabsExcept(name);\n    },\n    /**\n    **\tShows a tab given its name. The route will be changed automatically if `data-base-route` is enabled.\n    */ selectTab: function(name) {\n        if (this.dataset.baseRoute) {\n            const hash = \"#\" + (0, $a60d7ab082450164$export$2e2bcd8739ae039).realLocation(this.dataset.baseRoute.replace(\"@\", name));\n            if (location.hash != hash) {\n                location = hash;\n                return;\n            }\n        }\n        this.showTab(name);\n    }\n});\n\n\n/*\n<r-form data-form-action=\"api-function-name\" [data-strict=\"true|false\"] [data-errors-at=\"\"] [data-method=\"post\"]>\n    <input type=\"text\" data-field=\"username\"/>\n</r-form>\n\nr-form .message.is-hidden {\n    display: none;\n}\n\nr-form span.field-error {\n    display: block;\n    color: red;\n}\n*/ \nvar $jNRwG = parcelRequire(\"jNRwG\");\n\n\nvar $fc9b87eb8eb33755$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-form\", {\n    /**\n    **\tElement events.\n    */ events: {\n        \"change [data-field]\": \"_fieldChanged\",\n        \"click input[type=reset]\": \"reset\",\n        \"click .reset\": \"reset\",\n        \"click input[type=submit]\": \"submit\",\n        \"click button[type=submit]\": \"submit\",\n        \"click .submit\": \"submit\",\n        \"submit form\": \"submit\"\n    },\n    /*\n    **\tInitial form model.\n    */ model: {},\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ ready: function() {\n        let formElement = document.createElement(\"form\");\n        formElement.append(...this.childNodes);\n        this.append(formElement);\n        let def = {};\n        let names = this.model.get();\n        this.querySelectorAll(\"[data-field]\").forEach((i)=>{\n            i.name = i.dataset.field;\n            names[i.name] = i.type;\n            let val = i.dataset.default;\n            if (val == undefined) switch(i.type){\n                case \"radio\":\n                    if (!i.checked) return;\n                    val = i.value;\n                    break;\n                case \"checkbox\":\n                    val = i.checked ? \"1\" : \"0\";\n                    break;\n                case \"field\":\n                    val = i.getValue();\n                    break;\n                case \"file\":\n                    val = \"\";\n                    break;\n                default:\n                    val = \"\";\n                    break;\n            }\n            def[i.dataset.field] = val;\n        });\n        for(let name in names)if (name in def) names[name] = def[name];\n        else names[name] = \"\";\n        def = names;\n        this.model.defaults = def;\n        this.model.reset();\n        this.clearMarkers();\n    },\n    /*\n    **\tTransforms an string returned by the server to a local representation.\n    */ filterString: function(str, r) {\n        if (!str || !(\"messages\" in $parcel$global)) return str;\n        if (str.startsWith(\"@messages.\")) {\n            if (str.substr(10) in $parcel$global.messages) str = (0, $jNRwG.Template).eval($parcel$global.messages[str.substr(10)], r);\n        }\n        return str;\n    },\n    _change: function(elem) {\n        if (\"createEvent\" in document) {\n            let evt = document.createEvent(\"HTMLEvents\");\n            evt.initEvent(\"change\", false, true);\n            elem.dispatchEvent(evt);\n        } else elem.fireEvent(\"onchange\");\n    },\n    _setField: function(f, value, silent) {\n        if (!f) return;\n        for (f of this.querySelectorAll('[data-field=\"' + f + '\"]'))switch(f.type || f.tagName.toLowerCase()){\n            case \"select\":\n                f.val = f.dataset.value = f.multiple ? value ? value.split(\",\") : value : value;\n                f.value = f.val = f.dataset.value;\n                if (silent !== true) this._change(f);\n                break;\n            case \"checkbox\":\n                f.checked = parseInt(value) ? true : false;\n                break;\n            case \"radio\":\n                f.checked = value == f.value;\n                break;\n            case \"field\":\n                f.val = f.dataset.value = value;\n                f.setValue(value);\n                break;\n            case \"file\":\n                if (value instanceof File || value instanceof Blob) {\n                    f.val = value;\n                    f.dataset.value = value;\n                } else if (value instanceof FileList) {\n                    f.val = value;\n                    f.dataset.value = value;\n                } else {\n                    f.val = f.dataset.value = \"\";\n                    f.value = \"\";\n                }\n                break;\n            default:\n                f.val = f.dataset.value = value;\n                f.value = value;\n                if (silent !== true) this._change(f);\n                break;\n        }\n    },\n    _getField: function(f, _value = null, fromFileFields = false) {\n        if (!f) return null;\n        if (typeof f != \"string\") {\n            let value = f.value == null ? f.val : f.value;\n            if (value === null) value = _value;\n            switch(f.type || f.tagName.toLowerCase()){\n                case \"select\":\n                    _value = f.multiple ? value ? value.join(\",\") : value : value;\n                    break;\n                case \"checkbox\":\n                    _value = f.checked ? \"1\" : \"0\";\n                    break;\n                case \"radio\":\n                    if (f.checked) _value = f.value;\n                    break;\n                case \"field\":\n                    _value = f.getValue();\n                    break;\n                case \"file\":\n                    _value = fromFileFields ? f.files && f.files.length ? f.multiple ? f.files : f.files[0] : null : f.val;\n                    break;\n                default:\n                    _value = value;\n                    break;\n            }\n            return _value === null ? \"\" : _value;\n        }\n        _value = null;\n        for (f of this.querySelectorAll('[data-field=\"' + f + '\"]'))_value = this._getField(f, _value);\n        return _value === null ? \"\" : _value;\n    },\n    getField: function(name) {\n        return this._getField(name);\n    },\n    clearMarkers: function() {\n        this.classList.remove(\"busy\");\n        this.querySelectorAll(\".message\").forEach((i)=>i.classList.add(\"is-hidden\"));\n        this.querySelectorAll(\"span.field-error\").forEach((i)=>i.remove());\n        this.querySelectorAll(\".field-error\").forEach((i)=>{\n            i.classList.remove(\"field-error\");\n            i.classList.remove(\"is-invalid\");\n        });\n        this.querySelectorAll(\".field-passed\").forEach((i)=>i.classList.remove(\"field-passed\"));\n    },\n    _fieldChanged: function(evt) {\n        let f = evt.source;\n        if (f.type == \"file\") this.model.set(f.dataset.field, this._getField(f, null, true), true);\n        else this.model.set(f.dataset.field, this._getField(f));\n        evt.continuePropagation = true;\n    },\n    onModelPropertyChanged: function(evt, args) {\n        this._setField(args.name, args.value);\n    },\n    _onSuccess: function(r) {\n        this.classList.remove(\"busy\");\n        this.clearMarkers();\n        let tmp;\n        this.dispatch(\"formSuccess\", r);\n        if (r.message && (tmp = this.querySelector(\".message.success\")) != null) {\n            tmp.innerHTML = this.filterString(r.message, r).replace(/\\n/g, \"<br/>\");\n            tmp.classList.remove(\"is-hidden\");\n            tmp.onanimationend = ()=>tmp.classList.add(\"is-hidden\");\n        }\n    },\n    _onFailure: function(r) {\n        this.classList.remove(\"busy\");\n        this.clearMarkers();\n        let tmp;\n        this.dispatch(\"formError\", r);\n        if (r.fields) {\n            for(let i in r.fields){\n                let f = this.querySelector('[data-field-container=\"' + i + '\"]');\n                if (!f) {\n                    f = this.querySelector('[data-field=\"' + i + '\"]');\n                    if (!f) continue;\n                }\n                let tmp = document.createElement(\"span\");\n                tmp.classList.add(\"field-error\");\n                tmp.innerHTML = this.filterString(r.fields[i], r).replace(/\\n/g, \"<br/>\");\n                f.classList.add(\"field-error\");\n                f.classList.add(\"is-invalid\");\n                if (this.dataset.errorsAt == \"bottom\") f.parentElement.append(tmp);\n                else if (this.dataset.errorsAt == \"top\") f.parentElement.prepend(tmp);\n                else f.parentElement.insertBefore(tmp, f.nextElementSibling);\n                setTimeout(function(tmp) {\n                    return function() {\n                        tmp.classList.add(\"active\");\n                    };\n                }(tmp), 25);\n            }\n            if (r.error && (tmp = this.querySelector(\".message.error\")) != null) {\n                tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, \"<br/>\");\n                tmp.classList.remove(\"is-hidden\");\n                tmp.onanimationend = ()=>tmp.classList.add(\"is-hidden\");\n            }\n        } else if ((tmp = this.querySelector(\".message.error\")) != null) {\n            tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, \"<br/>\") || \"Error: \" + r.response;\n            tmp.classList.remove(\"is-hidden\");\n            tmp.onanimationend = ()=>tmp.classList.add(\"is-hidden\");\n        }\n    },\n    reset: function(nsilent) {\n        this.model.reset(nsilent);\n        this.clearMarkers();\n        if (nsilent === false) for(var i in this.model.data)this._setField(i, this.model.data[i], true);\n        return false;\n    },\n    submit: function() {\n        if (this.classList.contains(\"busy\")) return;\n        let data = {};\n        if (this.dataset.strict == \"false\") Object.assign(data, this.model.get());\n        let list = {};\n        this.querySelectorAll(\"[data-field]\").forEach((e)=>list[e.dataset.field] = true);\n        Object.keys(list).forEach((f)=>data[f] = this._getField(f));\n        if (this.onbeforesubmit) this.onbeforesubmit(data);\n        this.model.set(data);\n        let f = this.dataset.formAction || this.formAction;\n        if (!f) return;\n        this.classList.add(\"busy\");\n        if (typeof f != \"function\") {\n            data.f = f;\n            (0, $7a42222fdfbd696d$export$2e2bcd8739ae039).apiCall(data, (r)=>this[r.response == 200 ? \"_onSuccess\" : \"_onFailure\"](r), (r)=>this._onFailure({\n                    error: \"Unable to execute request.\"\n                }), this.dataset.method ?? \"POST\");\n        } else f(data, (r)=>this[r.response == 200 ? \"_onSuccess\" : \"_onFailure\"](r));\n    }\n});\n\n\n/*\n    <r-panel data-route=\"name\">\n    </r-panel>\n\n    r-panel {\n        display: block;\n    }\n\n    r-panel:not(.is-active) {\n        display: none;\n    }\n\n    r-panel.is-inactive {\n    }\n\n    r-panel.is-active {\n    }\n*/ \n\nvar $0a5950960712be2b$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-panel\", {\n    /**\n     * Route object used by this element.\n     */ route: null,\n    /**\n     * Initializes the element.\n     */ init: function() {\n        this.style.display = \"\";\n        // Executed then the panel route is activated.\n        this._onActivate = (evt, args)=>{\n            if (!args.route.changed) return;\n            this.show(true);\n        };\n        // Executed then the panel route is deactivated.\n        this._onDeactivate = (evt, args)=>{\n            this.hide();\n        };\n        this.hide();\n    },\n    /**\n     * Adds a handler to Router if the data-route attribute was set.\n     */ onConnected: function() {\n        if (this.dataset.route) {\n            this.route = (0, $a60d7ab082450164$export$2e2bcd8739ae039).addRoute(this.dataset.route, this._onActivate, this._onDeactivate);\n            this.classList.remove(\"is-active\");\n            this.classList.add(\"is-inactive\");\n        } else {\n            this.classList.add(\"is-active\");\n            this.classList.remove(\"is-inactive\");\n        }\n        this.classList.add(\"anim-ended\");\n    },\n    /**\n     * Removes a handler previously added to Router if the data-route attribute was set.\n     */ onDisconnected: function() {\n        if (this.dataset.route) (0, $a60d7ab082450164$export$2e2bcd8739ae039).removeRoute(this.dataset.route, this._onActivate, this._onDeactivate);\n    },\n    /**\n     * Hides the panel by removing the `is-active` and adding `is-inactive` class to the element. Fires `panelHidden` event.\n     */ hide: function() {\n        this.dispatch(\"panelHidden\", this.route ? this.route.args : {});\n        this.classList.remove(\"anim-ended\");\n        this.classList.remove(\"is-active\");\n        this.classList.add(\"is-inactive\");\n        this.onanimationend = ()=>{\n            this.classList.add(\"anim-ended\");\n            this.onanimationend = null;\n        };\n    },\n    /**\n     * Shows the panel visible by adding `is-active` and removing `is-inactive` class from the element. If `silent` is true and `data-route` enabled,\n     * the current route will not be updated. Fires `panelShown` event.\n     * @param {boolean} silent \n     */ show: function(silent = false) {\n        if (this.dataset.route && !silent) {\n            let hash = \"#\" + this.dataset.route;\n            if (window.location.hash.substr(0, hash.length) != hash) {\n                window.location = hash;\n                return;\n            }\n        }\n        this.dispatch(\"panelShown\", this.route ? this.route.args : {});\n        this.classList.remove(\"anim-ended\");\n        this.classList.remove(\"is-inactive\");\n        this.classList.add(\"is-active\");\n        this.onanimationend = ()=>{\n            this.classList.add(\"anim-ended\");\n            this.onanimationend = null;\n        };\n    },\n    /**\n     * Toggles the visibility of the panel. If `silent` is true and `data-route` enabled, the current route will not be updated.\n     */ toggleVisibility: function(silent = false) {\n        if (this.classList.contains(\"is-active\")) this.hide();\n        else this.show(silent);\n    }\n});\n\n\n/*\n    <r-list data-list=\"window.dataList1\" data-container=\".x-data\" data-wrap=\"true|false\">\n\n        <template data-mode=\"static|dynamic\">\n        </template>\n\n        <div class=\"x-empty\">\n            Nothing to show.\n        </div>\n\n        <div class=\"x-data\">\n        </div>\n\n    </r-list>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n    Modifiers:\n        .x-empty-null\t\tVisible when the list is in undefined state (before first load).\n        .x-empty\t\t\tVisible when there is no data in the list.\n        .x-not-empty \t\tVisible when there is data in the list.\n        .is-loading \t\tVisible when the list is loading.\n*/ \nvar $jNRwG = parcelRequire(\"jNRwG\");\n\nvar /*\n**\tConnects to a ModelList and renders its contents using a template. When using \"dynamic\" template, the contents can be other custom elements, and\n**\tthe model of each item can be accessed by using data-model=\":list-item\", which will cause the item model to be added to the element.\n**\n**\tAdditionally root attribute data-wrap can be set to 'true' to wrap the template contents inside a div with a data-iid representing the ID of the\n**\titem, this will cause any changes to items to affect only the specific item in question.\n*/ $aa6a6e90ef8dc4c8$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-list\", {\n    list: null,\n    container: null,\n    template: null,\n    isEmpty: false,\n    isDynamicTemplate: false,\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ ready: function() {\n        this.container = this.querySelector(this.dataset.container || \".x-data\");\n        if (!this.container) {\n            this.container = document.createElement(\"div\");\n            this.container.className = \"x-data\";\n            this.appendChild(this.container);\n        }\n        let tmp = this.template_elem = this.querySelector(\"template\");\n        if (tmp) {\n            if (tmp.dataset.mode != \"dynamic\") this.template = (0, $jNRwG.Template).compile(tmp.innerHTML);\n            else {\n                this.template = ()=>tmp.innerHTML;\n                this.isDynamicTemplate = true;\n            }\n            tmp.remove();\n        } else this.template = ()=>\"\";\n        this.container.textContent = \" \";\n        this.setEmpty(null);\n        this.setLoading(null);\n    },\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ rready: function() {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error(\"data-list not found: \" + this.dataset.list);\n            return;\n        }\n        this.setList(list);\n    },\n    /*\n    **\tIndicates if the list is empty. Elements having x-empty, x-not-empty and x-empty-null will be updated.\n    */ setEmpty: function(value) {\n        if (this.isEmpty === value) return;\n        if (value === true) {\n            this.querySelectorAll(\".x-empty\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-empty-null\").forEach((i)=>i.classList.add(\"is-hidden\"));\n        } else if (value === false) {\n            this.querySelectorAll(\".x-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n            this.querySelectorAll(\".x-empty-null\").forEach((i)=>i.classList.add(\"is-hidden\"));\n        } else {\n            this.querySelectorAll(\".x-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-empty-null\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n        }\n        this.isEmpty = value;\n    },\n    /*\n    **\tIndicates if the list is loading. Elements having is-loading will be updated.\n    */ setLoading: function(value) {\n        if (value === true) this.querySelectorAll(\".is-loading\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n        else this.querySelectorAll(\".is-loading\").forEach((i)=>i.classList.add(\"is-hidden\"));\n    },\n    /**\n    **\tSets the list model-list of the element.\n    */ setList: function(list) {\n        if (!list || !(0, $jNRwG.Rinn).isInstanceOf(list, (0, $jNRwG.ModelList)) || this.list === list) return;\n        if (this.list != null) {\n            if (this.list.dataSource) this.list.dataSource.removeEventListener(this.eid + \":*\");\n            if (this.list.dataList) this.list.dataList.removeEventListener(this.eid + \":*\");\n            this.list.removeEventListener(this.eid + \":*\");\n        }\n        this.list = list;\n        if (this.list.dataSource) {\n            this.list.dataSource.addEventListener(this.eid + \":listLoading\", this.onLoading, this);\n            this.list.dataSource.addEventListener(this.eid + \":listLoaded\", this.onLoaded, this);\n        }\n        if (this.list.dataList) {\n            this.list.dataList.addEventListener(this.eid + \":listLoading\", this.onLoading, this);\n            this.list.dataList.addEventListener(this.eid + \":listLoaded\", this.onLoaded, this);\n        }\n        this.list.addEventListener(this.eid + \":itemsCleared\", this.onItemsCleared, this);\n        this.list.addEventListener(this.eid + \":itemsChanged\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemRemoved\", this.onItemRemoved, this);\n        this.list.addEventListener(this.eid + \":itemChanged\", this.onItemChanged, this);\n        this.list.addEventListener(this.eid + \":itemAdded\", this.onItemAdded, this);\n    },\n    /*\n    **\tBuilds an item (inside a div) to be added to the container.\n    */ buildItem: function(iid, data, asHtml = false) {\n        if (this.content) {\n            let elem = this.content(data.get());\n            elem.dataset.iid = iid;\n            return elem;\n        }\n        if (this.container.content) {\n            let elem = this.container.content(data.get());\n            elem.dataset.iid = iid;\n            return elem;\n        }\n        let html = this.template(data.get());\n        if (asHtml) return html;\n        let elem = document.createElement(\"div\");\n        elem.dataset.iid = iid;\n        elem.innerHTML = html;\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach((i)=>{\n            i.model = data;\n            i.dataset.model = \"this.model\";\n        });\n        for (let attr of this.template_elem.attributes){\n            if (attr.nodeName.startsWith(\"data-_\") || attr.nodeName == \"data-mode\") continue;\n            elem.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        return elem;\n    },\n    /*\n    **\tExecuted when the list is loading.\n    */ onLoading: function() {\n        this.setLoading(true);\n    },\n    /*\n    **\tExecuted when the list finished loading.\n    */ onLoaded: function() {\n        this.setLoading(false);\n    },\n    /*\n    **\tExecuted when the list is cleared.\n    */ onItemsCleared: function() {\n        this.container._timeout = setTimeout(()=>{\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = \"\";\n        }, 300);\n    },\n    /*\n    **\tExecuted when the items of the list changed.\n    */ onItemsChanged: function() {\n        if (this.list.length() == 0) return;\n        if (this.container._timeout) clearTimeout(this.container._timeout);\n        this.container._timeout = null;\n        this.container.textContent = \"\";\n        let i = 0;\n        for (let data of this.list.getData())if (this.dataset.wrap != \"false\") this.container.append(this.buildItem(this.list.itemId[i++], data));\n        else this.container.innerHTML += this.buildItem(this.list.itemId[i++], data, true);\n        this.setEmpty(i == 0);\n    },\n    /*\n    **\tExecuted when an item is removed from the list.\n    */ onItemRemoved: function(evt, args) {\n        if (this.dataset.wrap == \"false\") {\n            this.onItemsChanged();\n            return;\n        }\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        elem.remove();\n        this.setEmpty(this.list.length() == 0);\n    },\n    /*\n    **\tExecuted when an item changes.\n    */ onItemChanged: function(evt, args) {\n        if (this.isDynamicTemplate) return;\n        if (this.dataset.wrap == \"false\") {\n            this.onItemsChanged();\n            return;\n        }\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        elem.innerHTML = this.template(args.item);\n    },\n    /*\n    **\tExecuted when an item is added to the list.\n    */ onItemAdded: function(evt, args) {\n        if (args.position == \"head\") {\n            if (this.dataset.wrap != \"false\") this.container.prepend(this.buildItem(args.id, args.item));\n            else this.container.innerHTML = this.buildItem(args.id, args.item, true) + this.container.innerHTML;\n        } else if (this.dataset.wrap != \"false\") this.container.append(this.buildItem(args.id, args.item));\n        else this.container.innerHTML += this.buildItem(args.id, args.item, true);\n        this.setEmpty(false);\n    },\n    /**\n     * \tForces re-rendering of the element.\n     */ refresh: function() {\n        this.onItemsChanged();\n    }\n});\n\n\n/*\n    <r-item data-model=\"window.model1\">\n    </r-item>\n*/ \nvar $6ebf9e92cac4cb5e$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-item\", {\n    /**\n    **\tInitializes the element.\n    */ init: function() {},\n    /**\n    **\tExecuted when the children and root are ready.\n    */ rready: function() {\n        let model = this.dataModel ?? this.getFieldByPath(this.dataset.model);\n        if (!model) model = {};\n        this.setModel(model);\n    }\n});\n\n\n/*\n    <r-paginator data-source=\"window.dataSource1\" data-page-size=\"25\">\n        <span data-watch=\"count\">Showing [offsetStart] to [offsetEnd] out of [count]</span>\n\n        <button data-action=\"firstPage\">First</button>\n        <button data-action=\"prevPage\">&laquo;</button>\n        <button data-action=\"nextPage\">&raquo;</button>\n        <button data-action=\"lastPage\">Last</button>\n        <button data-action=\"refresh\">Refresh</button>\n\n        <input type=\"text\" data-property=\"pageSize\" />\n    </r-paginator>\n*/ \nvar $jNRwG = parcelRequire(\"jNRwG\");\n\n\nvar /*\n**\tConnects to a data source to provide pagination features.\n*/ $9fd4b08f8abedc01$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-paginator\", {\n    source: null,\n    template: null,\n    /**\n    **\tInitializes the element.\n    */ init: function() {\n        this.setModel({\n            offsetStart: 0,\n            offsetEnd: 0,\n            count: 0,\n            offset: 0,\n            currentPageSize: this.dataset.pageSize || 25,\n            pageSize: this.dataset.pageSize || 25\n        });\n        this.listen(\"propertyChanged.pageSize\", (evt, args)=>{\n            if (this.model.get(\"currentPageSize\") == args.value) return;\n            this.model.set(\"currentPageSize\", args.value);\n            this.updateOffset(\"range\");\n        });\n    },\n    rready: function() {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error(\"data-source not found: \" + this.dataset.source);\n            return;\n        }\n        this.setSource(source);\n    },\n    /**\n    **\tSets the source model-list of the paginator.\n    */ setSource: function(source) {\n        if (!source || !(0, $jNRwG.Rinn).isInstanceOf(source, (0, $80620d99b03812be$export$2e2bcd8739ae039)) || this.source === source) return;\n        if (this.source != null) {\n            this.source.removeEventListener(this.eid + \":*\");\n            this.source.includeCount = false;\n        }\n        this.source = source;\n        this.source.includeCount = true;\n        this.updateOffset();\n        this.source.addEventListener(this.eid + \":requestPropertyChanged\", this.onRequestPropertyChanged, this);\n        this.source.addEventListener(this.eid + \":countChanged\", this.onCountChanged, this);\n        this.source.addEventListener(this.eid + \":listItemRemoved\", this.onItemRemoved, this);\n        this.source.addEventListener(this.eid + \":listItemAdded\", this.onItemAdded, this);\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n    /*\n    **\tUpdates several offset related fields in the paginator model. Optionally refreshes the data source with the specified mode.\n    */ updateOffset: function(mode = null) {\n        this.model.set(\"offsetStart\", this.model.get(\"count\") != 0 ? this.model.get(\"offset\") + 1 : 0);\n        this.model.set(\"offsetEnd\", Math.min(this.model.get(\"count\"), this.model.get(\"offsetStart\") + this.model.getInt(\"pageSize\") - 1));\n        this.model.update(\"count\");\n        let _count = this.source.request.get(\"count\");\n        let _offset = this.source.request.get(\"offset\");\n        this.source.request.set(\"count\", this.model.getInt(\"pageSize\"));\n        this.source.request.set(\"offset\", this.model.get(\"offset\"));\n        if (mode && (_count != this.source.request.get(\"count\") || _offset != this.source.request.get(\"offset\"))) this.source.refresh(mode);\n    },\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */ onRequestPropertyChanged: function(evt, args) {\n        if (args.name == \"count\" || args.name == \"offset\") return;\n        this.model.set(args.name, args.value);\n    },\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */ onModelPropertyChanged: function(evt, args) {\n        let ignored = [\n            \"offsetStart\",\n            \"offsetEnd\",\n            \"count\",\n            \"offset\",\n            \"currentPageSize\",\n            \"pageSize\"\n        ];\n        if (ignored.indexOf(args.name) != -1) return;\n        if (this.source.request.get(args.name) == args.value) return;\n        this.source.request.set(args.name, args.value);\n        this.source.refresh(\"filter\");\n    },\n    /*\n    **\tExecuted when the remote count changes.\n    */ onCountChanged: function(evt, args) {\n        this.model.set(\"count\", evt.source.count, false);\n        this.updateOffset();\n    },\n    /*\n    **\tExecuted when an item is removed from the list.\n    */ onItemRemoved: function(evt, args) {\n        this.model.set(\"count\", this.model.getInt(\"count\") - 1, false);\n        this.updateOffset();\n    },\n    /*\n    **\tExecuted when an item is added to the list.\n    */ onItemAdded: function(evt, args) {\n        this.model.set(\"count\", this.model.getInt(\"count\") + 1, false);\n        this.updateOffset();\n    },\n    /*\n    **\tMoves to the previous page.\n    */ prevPage: function() {\n        if (this.model.get(\"offset\") <= 0) return;\n        let offs = this.model.get(\"offset\") - this.model.getInt(\"pageSize\");\n        if (offs < 0) offs = 0;\n        this.model.set(\"offset\", offs);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tMoves to the next page.\n    */ nextPage: function() {\n        let offs = this.model.get(\"offset\") + this.model.getInt(\"pageSize\");\n        if (offs >= this.model.get(\"count\")) return;\n        this.model.set(\"offset\", offs);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tMoves to the first page.\n    */ firstPage: function() {\n        this.model.set(\"offset\", 0);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tMoves to the last page.\n    */ lastPage: function() {\n        let offs = this.model.get(\"count\") - this.model.getInt(\"pageSize\");\n        if (offs < 0) offs = 0;\n        this.model.set(\"offset\", offs);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tRefreshes the data source.\n    */ refresh: function() {\n        this.source.refresh(\"full\");\n    },\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */ clear: function(args) {\n        for(let i = 0; i < args.length; i++)this.model.set(args[i], \"\");\n    }\n});\n\n\n/*\n    <r-table data-source=\"window.dataSource1\">\n        <table>\n            <thead>\n                <tr>\n                    <th>A</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"x-data\">\n                <tr>\n                    <td>[a]</td>\n                    <td>[b]</td>\n                </tr>\n            </tbody>\n        </table>\n    </r-table>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n        th[data-sort] {\n            cursor: pointer; text-decoration: underline;\n        }\n\n        th[data-sort][data-order=\"asc\"]:before {\n            content: \"\\25B2\";\n        }\n\n        th[data-sort][data-order=\"desc\"]:before {\n            content: \"\\25BC\";\n        }\n\n    Modifiers:\n        .x-empty\t\t\tAdd to elements that should be shown only when there is no data in the data source.\n        .x-not-empty \t\tAdd to elements that should be shown only when there is data in the data source.\n        [data-sort]\t\t\tAdded to th/td elements in thead, marks the column as sortable.\n*/ \nvar $jNRwG = parcelRequire(\"jNRwG\");\n\n\nvar /*\n**\tConnects to a DataSource and renders its contents as a table.\n*/ $0eddb6c9ad6478b4$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-table\", {\n    source: null,\n    template: null,\n    container: null,\n    isEmpty: null,\n    /**\n    **\tInitializes the element.\n    */ init: function() {\n        this.setModel({});\n    },\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ ready: function() {\n        this.container = this.querySelector(this.dataset.container || \"tbody.x-data\");\n        if (!this.container) throw new Error(\"r-table requires a container\");\n        if (this.container.dataset.mode != \"dynamic\") this.template = (0, $jNRwG.Template).compile(this.container.innerHTML);\n        else this.template = ()=>this.container.innerHTML;\n        this.temporalBody = document.createElement(\"tbody\");\n        this.container.textContent = \" \";\n        this.setEmpty(true);\n    },\n    /**\n    **\tExecuted when the children and root elements are ready.\n    */ rready: function() {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error(\"data-source not found: \" + this.dataset.source);\n            return;\n        }\n        this.setSource(source);\n    },\n    /*\n    **\tIndicates if the table is empty. Elements having .x-not-empty will be hidden.\n    */ setEmpty: function(value) {\n        if (this.isEmpty === value) return;\n        if (value) {\n            this.querySelectorAll(\".x-empty\").forEach((i1)=>i1.classList.remove(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i1)=>i1.classList.add(\"is-hidden\"));\n        } else {\n            this.querySelectorAll(\".x-empty\").forEach((i1)=>i1.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i1)=>i1.classList.remove(\"is-hidden\"));\n        }\n        this.isEmpty = value;\n    },\n    /**\n    **\tSets the data source of the element.\n    */ setSource: function(source) {\n        if (!source || !(0, $jNRwG.Rinn).isInstanceOf(source, (0, $80620d99b03812be$export$2e2bcd8739ae039)) || this.source === source) return;\n        if (this.source != null) this.source.removeEventListener(this.eid + \":*\");\n        this.source = source;\n        this.source.addEventListener(this.eid + \":requestPropertyChanged\", this.onRequestPropertyChanged, this);\n        this.source.addEventListener(this.eid + \":listItemsCleared\", this.onItemsCleared, this);\n        this.source.addEventListener(this.eid + \":listItemsChanged\", this.onItemsChanged, this);\n        this.source.addEventListener(this.eid + \":listItemRemoved\", this.onItemRemoved, this);\n        this.source.addEventListener(this.eid + \":listItemChanged\", this.onItemChanged, this);\n        this.source.addEventListener(this.eid + \":listItemAdded\", this.onItemAdded, this);\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */ onRequestPropertyChanged: function(evt, args) {\n        this.model.set(args.name, args.value);\n        if (args.name == \"sort\") this.querySelectorAll(\"thead [data-sort]\").forEach((i1)=>i1.dataset.order = \"\");\n        else if (args.name == \"order\") {\n            let elem = this.querySelector('thead [data-sort=\"' + evt.source.get(\"sort\") + '\"]');\n            if (elem) elem.dataset.order = args.value;\n        }\n    },\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */ onModelPropertyChanged: function(evt, args) {\n        if (this.source.request.get(args.name) == args.value) return;\n        this.source.request.set(args.name, args.value);\n        let ignored = [\n            \"count\",\n            \"offset\"\n        ];\n        if (ignored.indexOf(args.name) != -1) return;\n        this.source.refresh(\"filter\");\n    },\n    /*\n    **\tEvent handler invoked when a property of the model is removed.\n    */ onModelPropertyRemoved: function(evt, args) {\n        if (typeof args.fields == \"string\") this.source.request.remove(i);\n        else args.fields.forEach((i1)=>this.source.request.remove(i1));\n        this.source.refresh(\"filter\");\n    },\n    /*\n    **\tBuilds an item to be added to the container.\n    */ buildItem: function(iid, data) {\n        if (this.container.content) {\n            let elem = this.container.content(data.get());\n            elem.dataset.iid = iid;\n            return elem;\n        }\n        let elem = this.temporalBody;\n        elem.innerHTML = this.template(data.get());\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach((i1)=>{\n            i1.model = data;\n            i1.dataset.model = \"this.model\";\n        });\n        elem = elem.firstElementChild;\n        elem.dataset.iid = iid;\n        return elem;\n    },\n    /*\n    **\tExecuted when the list is cleared.\n    */ onItemsCleared: function(evt, args) {\n        this.container._timeout = setTimeout(()=>{\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = \"\";\n        }, 300);\n    },\n    /*\n    **\tExecuted when the items of the list changed.\n    */ onItemsChanged: function(evt, args) {\n        if (this.source.list.length() == 0) return;\n        if (this.container._timeout) clearTimeout(this.container._timeout);\n        this.container._timeout = null;\n        this.container.textContent = \"\";\n        let i1 = 0;\n        for (let data of this.source.list.getData())this.container.append(this.buildItem(this.source.list.itemId[i1++], data));\n        this.setEmpty(i1 == 0);\n    },\n    /*\n    **\tExecuted when an item is removed from the list.\n    */ onItemRemoved: function(evt, args) {\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        elem.remove();\n        this.setEmpty(this.source.list.length() == 0);\n    },\n    /*\n    **\tExecuted when an item changes.\n    */ onItemChanged: function(evt, args) {\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        let _elem = this.buildItem(args.id, args.item);\n        this.container.replaceChild(_elem, elem);\n    },\n    /*\n    **\tExecuted when an item is added to the list.\n    */ onItemAdded: function(evt, args) {\n        if (args.position == \"head\") this.container.prepend(this.buildItem(args.id, args.item));\n        else this.container.append(this.buildItem(args.id, args.item));\n        this.setEmpty(false);\n    },\n    /*\n    **\tHandles clicks to data-sort elements.\n    */ \"event click thead [data-sort]\": function(evt, args) {\n        if (this.source.request.get(\"sort\") == evt.source.dataset.sort) {\n            this.source.request.set(\"order\", this.source.request.get(\"order\") == \"asc\" ? \"desc\" : \"asc\");\n            this.source.refresh(\"order\");\n        } else {\n            this.source.request.set(\"sort\", evt.source.dataset.sort);\n            this.source.request.set(\"order\", \"asc\", true);\n            this.source.refresh(\"order\");\n        }\n    },\n    /*\n    **\tRefreshes the data source.\n    */ refresh: function() {\n        this.source.refresh(\"full\");\n    },\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */ clear: function(args) {\n        for(let i1 = 0; i1 < args.length; i1++)this.model.set(args[i1], \"\");\n    }\n});\n\n\n/*\n    <r-select data-list=\"window.dataList1\" data-blank=\"\"></r-select>\n*/ \nvar $jNRwG = parcelRequire(\"jNRwG\");\n\nvar /*\n**\tConnects to a ModelList and renders its contents as a <select> element.\n*/ $b31b5ad1048f6f9a$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-select\", {\n    list: null,\n    container: null,\n    value: \"\",\n    /**\n    **\tInitializes the element.\n    */ init: function() {\n        this.container = document.createElement(\"select\");\n        this.parentElement.insertBefore(this.container, this);\n        let list = [];\n        for (let attr of this.attributes){\n            if (attr.nodeName.startsWith(\"data-_\") || attr.nodeName == \"data-list\" || attr.nodeName == \"data-blank\") continue;\n            this.container.setAttribute(attr.nodeName, attr.nodeValue);\n            list.push(attr.nodeName);\n        }\n        if (this.disabled) this.container.disabled = this.disabled;\n        list.forEach((i)=>this.removeAttribute(i));\n        this.textContent = \" \";\n        this.style.display = \"none\";\n    },\n    /**\n    **\tExecuted when the children and parent of the element are ready.\n    */ rready: function() {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error(\"data-list not found: \" + this.dataset.list);\n            return;\n        }\n        this.setList(list);\n        if (this.parentElement.lastElementChild !== this) this.parentElement.append(this);\n    },\n    /**\n    **\tSets the list model-list of the element.\n    */ setList: function(list) {\n        if (!list || !(0, $jNRwG.Rinn).isInstanceOf(list, (0, $jNRwG.ModelList)) || this.list === list) return;\n        if (this.list != null) this.list.removeEventListener(this.eid + \":*\");\n        this.list = list;\n        if (this.list.dataSource) this.list.dataSource.includeEnum = true;\n        this.list.addEventListener(this.eid + \":itemsCleared\", this.onItemsCleared, this);\n        this.list.addEventListener(this.eid + \":itemsChanged\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemRemoved\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemChanged\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemAdded\", this.onItemsChanged, this);\n        this.onItemsChanged();\n    },\n    /*\n    **\tExecuted when the list is cleared.\n    */ onItemsCleared: function(evt, args) {\n        this.container.textContent = \"\";\n    },\n    /*\n    **\tExecuted when the items of the list changed.\n    */ onItemsChanged: function(evt, args) {\n        if (this.list.length() == 0) return;\n        let list = this.list.getData();\n        let value, label, s = \"\";\n        if (list[0].has(\"value\")) value = \"value\";\n        else if (list[0].has(\"id\")) value = \"id\";\n        if (list[0].has(\"label\")) label = \"label\";\n        else if (list[0].has(\"name\")) label = \"name\";\n        if (\"blank\" in this.dataset) s += '<option value=\"\">' + this.dataset.blank + \"</option>\";\n        if (list[0].has(\"group\")) {\n            let groups = {};\n            list.forEach((i)=>groups[i.get(\"group\")] = null);\n            for(let i in groups)groups[i] = {\n                name: i,\n                list: []\n            };\n            list.forEach((i)=>groups[i.get(\"group\")].list.push(i));\n            groups = Object.values(groups);\n            groups.forEach((g)=>{\n                s += '<optgroup label=\"' + g.name + '\">';\n                g.list.forEach((i)=>s += '<option value=\"' + i.get(value) + '\">' + i.get(label) + \"</option>\");\n                s += \"</optgroup>\";\n            });\n        } else list.forEach((i)=>s += '<option value=\"' + i.get(value) + '\">' + i.get(label) + \"</option>\");\n        this.container.innerHTML = s;\n        this.container.value = this.container.dataset.value;\n    },\n    /**\n     * \tForces re-rendering of the element.\n     */ refresh: function() {\n        this.onItemsChanged();\n    }\n});\n\n\n/*\n    <r-image-cropper>\n    </r-image-cropper>\n*/ \nconst $56b80282f7eea6ac$var$Utils = {\n    /**\n\t**\tForces the browser to show a download dialog.\n\t*/ showDownload: function(filename, url) {\n        var link = document.createElement(\"a\");\n        link.href = url;\n        link.style.display = \"none\";\n        link.download = filename;\n        link.target = \"_blank\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    },\n    /**\n\t**\tForces the browser to show a file selection dialog.\n\t*/ showFilePicker: function(allowMultiple, accept, callback) {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n        input.accept = accept;\n        input.style.display = \"none\";\n        input.multiple = allowMultiple;\n        document.body.appendChild(input);\n        input.onchange = function() {\n            callback(input.files);\n        };\n        document.body.onfocus = function() {\n            document.body.onfocus = null;\n            document.body.removeChild(input);\n        };\n        input.click();\n    },\n    /**\n\t**\tLoads a URL using FileReader and returns as a dataURL.\n\t*/ loadAsDataUrl: function(file, callback) {\n        var reader = new FileReader();\n        reader.onload = function(e) {\n            callback(e.target.result, null);\n        };\n        reader.onerror = function(e) {\n            callback(null, e);\n        };\n        reader.readAsDataURL(file);\n    },\n    /**\n\t**\tLoads a URL using FileReader and returns as text.\n\t*/ loadAsText: function(file, callback) {\n        var reader = new FileReader();\n        reader.onload = function(e) {\n            callback(e.target.result);\n        };\n        reader.readAsText(file);\n    },\n    /**\n\t**\tLoads a URL using FileReader and returns as an array buffer.\n\t*/ loadAsArrayBuffer: function(file, callback) {\n        var reader = new FileReader();\n        reader.onload = function(e) {\n            callback(e.target.result);\n        };\n        reader.readAsArrayBuffer(file);\n    },\n    /**\n\t**\tLoads an array of URLs using FileReader and returns them as data url.\n\t*/ loadAllAsDataUrl: function(fileList, callback) {\n        var result = [];\n        if (!fileList || !fileList.length) {\n            callback(result);\n            return;\n        }\n        var loadNext = function(i) {\n            if (i == fileList.length) {\n                callback(result);\n                return;\n            }\n            $56b80282f7eea6ac$var$Utils.loadAsDataUrl(fileList[i], function(url, err) {\n                if (!err) result.push({\n                    name: fileList[i].name,\n                    size: fileList[i].size,\n                    url: url\n                });\n                loadNext(i + 1);\n            });\n        };\n        loadNext(0);\n    },\n    /*\n\t**\tLoads a URL as an image.\n\t*/ loadImageFromUrl: function(url, callback) {\n        let image = new Image();\n        image.onload = ()=>callback(image);\n        image.onerror = ()=>callback(null);\n        image.src = url;\n    }\n};\nvar $56b80282f7eea6ac$export$2e2bcd8739ae039 = $56b80282f7eea6ac$var$Utils;\n\n\nvar $518ecafe6bac0ac2$export$2e2bcd8739ae039 = (0, $a5c21812244207c8$export$2e2bcd8739ae039).register(\"r-image-cropper\", {\n    /*\n    **\tDefault aspect ratio.\n    */ aspectRatio: 1,\n    /*\n    **\tCurrent image scale.\n    */ imageScale0: 0,\n    imageScale: 1,\n    /*\n    **\tImage translation offsets.\n    */ imageOffsX: 0,\n    imageOffsY: 0,\n    /*\n    **\tPointer contexts.\n    */ pointerA: null,\n    pointerB: null,\n    /*\n    **\tClient bounding box.\n    */ bounds: null,\n    /*\n    **\tInitializes the element.\n    */ init: function() {\n        this.canvas = document.createElement(\"canvas\");\n        this.appendChild(this.canvas);\n        this.g = this.canvas.getContext(\"2d\");\n        this.pointerA = {\n            id: null,\n            active: false,\n            sx: 0,\n            sy: 0,\n            cx: 0,\n            cy: 0,\n            ix: 0,\n            iy: 0\n        };\n        this.pointerB = {\n            id: null,\n            active: false,\n            sx: 0,\n            sy: 0,\n            cx: 0,\n            cy: 0,\n            ix: 0,\n            iy: 0\n        };\n        this.log = document.createElement(\"div\");\n        this.appendChild(this.log);\n    },\n    /*\n    **\tSets the image for the cropper from an image URL.\n    */ setImageUrl: function(url) {\n        (0, $56b80282f7eea6ac$export$2e2bcd8739ae039).loadImageFromUrl(url, (image)=>{\n            this.setImage(image);\n        });\n    },\n    /*\n    **\tSets the image for the cropper from an HTML File object.\n    */ setImageFile: function(file) {\n        (0, $56b80282f7eea6ac$export$2e2bcd8739ae039).loadAsDataUrl(file, (url)=>{\n            (0, $56b80282f7eea6ac$export$2e2bcd8739ae039).loadImageFromUrl(url, (image)=>{\n                this.setImage(image);\n            });\n        });\n    },\n    /*\n    **\tSets the cropper image from an HTML Image element.\n    */ setImage: function(image) {\n        this.image = image;\n        this.reset();\n        this.imageScale = Math.max(this.canvas.width / this.image.width, this.canvas.height / this.image.height);\n        this.imageOffsX = (this.canvas.width - this.imageScale * this.image.width) * 0.5;\n        this.imageOffsY = (this.canvas.height - this.imageScale * this.image.height) * 0.5;\n        this.render();\n    },\n    /*\n    **\tReturns the blob and URL representing the current canvas state.\n    */ getBlobAndUrl: function(callback, type = \"image/png\", quality = 0.9) {\n        this.canvas.toBlob((blob)=>{\n            callback(blob, URL.createObjectURL(blob));\n        }, type, quality);\n    },\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained.\n    */ reset: function() {\n        this.bounds = this.getBoundingClientRect();\n        this.canvas.width = this.bounds.width;\n        this.canvas.height = this.bounds.width / this.aspectRatio;\n    },\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained and renders the image.\n    */ render: function() {\n        this.canvas.width = this.canvas.width;\n        this.g.fillStyle = \"#000\";\n        this.g.beginPath();\n        this.g.rect(0, 0, this.canvas.width, this.canvas.height);\n        this.g.fill();\n        this.g.translate(this.imageOffsX, this.imageOffsY);\n        this.g.scale(this.imageScale, this.imageScale);\n        this.g.drawImage(this.image, 0, 0);\n    },\n    /*\n    **\tTranslates the image by the given offsets.\n    */ translateImage: function(offsX, offsY) {\n        this.imageOffsX += offsX;\n        this.imageOffsY += offsY;\n        this.render(true);\n    },\n    /*\n    **\tHandle mouse events on the canvas.\n    */ \"event mousemove canvas\": function(evt) {\n        if (this.pointerA.active) {\n            this.pointerA.cx = evt.clientX;\n            this.pointerA.cy = evt.clientY;\n            this.translateImage(this.pointerA.cx - this.pointerA.sx, this.pointerA.cy - this.pointerA.sy);\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n        }\n        this.pointerA.ix = (evt.clientX - this.bounds.left - this.imageOffsX) / this.imageScale;\n        this.pointerA.iy = (evt.clientY - this.bounds.top - this.imageOffsY) / this.imageScale;\n    },\n    \"event mousedown canvas\": function(evt) {\n        this.pointerA.active = true;\n        this.pointerA.sx = evt.clientX;\n        this.pointerA.sy = evt.clientY;\n    },\n    \"event mouseup canvas\": function(evt) {\n        this.pointerA.active = false;\n    },\n    \"event wheel canvas\": function(evt) {\n        if (evt.deltaY > 0) this.imageScale -= 0.045;\n        else this.imageScale += 0.045;\n        if (this.imageScale < 0.1) this.imageScale = 0.1;\n        this.imageOffsX += -this.pointerA.ix * this.imageScale + (evt.clientX - this.bounds.left) - this.imageOffsX;\n        this.imageOffsY += -this.pointerA.iy * this.imageScale + (evt.clientY - this.bounds.top) - this.imageOffsY;\n        this.render();\n    },\n    /*\n    **\tHandle touch events on the canvas.\n    */ \"event touchmove canvas\": function(evt) {\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id == i.identifier) {\n                this.pointerA.cx = i.clientX;\n                this.pointerA.cy = i.clientY;\n            } else if (this.pointerB.id == i.identifier) {\n                this.pointerB.cx = i.clientX;\n                this.pointerB.cy = i.clientY;\n            }\n        }\n        if (this.pointerA.active && this.pointerB.active) {\n            let d0 = Math.sqrt(Math.pow(this.pointerA.sx - this.pointerB.sx, 2) + Math.pow(this.pointerA.sy - this.pointerB.sy, 2));\n            let d1 = Math.sqrt(Math.pow(this.pointerA.cx - this.pointerB.cx, 2) + Math.pow(this.pointerA.cy - this.pointerB.cy, 2));\n            let d = d1 - d0;\n            this.imageScale += d / 10 * 0.025;\n            if (this.imageScale < 0.1) this.imageScale = 0.1;\n            this.imageOffsX += -this.pointerA.ix * this.imageScale + (this.pointerA.cx - this.bounds.left) - this.imageOffsX;\n            this.imageOffsY += -this.pointerA.iy * this.imageScale + (this.pointerA.cy - this.bounds.top) - this.imageOffsY;\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n            this.pointerB.sx = this.pointerB.cx;\n            this.pointerB.sy = this.pointerB.cy;\n            this.render();\n        } else {\n            let p = this.pointerA.active ? this.pointerA : this.pointerB.active ? this.pointerB : null;\n            if (!p) return;\n            this.translateImage(p.cx - p.sx, p.cy - p.sy);\n            p.sx = p.cx;\n            p.sy = p.cy;\n        }\n    },\n    \"event touchstart canvas\": function(evt) {\n        this.imageScale0 = this.imageScale;\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id === null) {\n                this.pointerA.id = i.identifier;\n                this.pointerA.active = true;\n                this.pointerA.sx = i.clientX;\n                this.pointerA.sy = i.clientY;\n                this.pointerA.ix = (i.clientX - this.bounds.left - this.imageOffsX) / this.imageScale;\n                this.pointerA.iy = (i.clientY - this.bounds.top - this.imageOffsY) / this.imageScale;\n            } else if (this.pointerB.id === null) {\n                this.pointerB.id = i.identifier;\n                this.pointerB.active = true;\n                this.pointerB.sx = i.clientX;\n                this.pointerB.sy = i.clientY;\n                this.pointerB.ix = (i.clientX - this.bounds.left - this.imageOffsX) / this.imageScale;\n                this.pointerB.iy = (i.clientY - this.bounds.top - this.imageOffsY) / this.imageScale;\n            }\n        }\n    },\n    \"event touchend canvas\": function(evt) {\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id == i.identifier) {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            } else if (this.pointerB.id == i.identifier) {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    },\n    \"event touchcancel canvas\": function(evt) {\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id == i.identifier) {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            } else if (this.pointerB.id == i.identifier) {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    }\n});\n\n\nvar $71bc70b9c4af45f1$export$2e2bcd8739ae039 = {\n    Tabs: (0, $f7bcc5a668e0670f$export$2e2bcd8739ae039),\n    Form: (0, $fc9b87eb8eb33755$export$2e2bcd8739ae039),\n    Panel: (0, $0a5950960712be2b$export$2e2bcd8739ae039),\n    List: (0, $aa6a6e90ef8dc4c8$export$2e2bcd8739ae039),\n    Item: (0, $6ebf9e92cac4cb5e$export$2e2bcd8739ae039),\n    Paginator: (0, $9fd4b08f8abedc01$export$2e2bcd8739ae039),\n    Table: (0, $0eddb6c9ad6478b4$export$2e2bcd8739ae039),\n    Select: (0, $b31b5ad1048f6f9a$export$2e2bcd8739ae039),\n    ImageCropper: (0, $518ecafe6bac0ac2$export$2e2bcd8739ae039)\n};\n\n\n\n\nvar $jNRwG = parcelRequire(\"jNRwG\");\nvar //!class db\n$2adc75ff92895237$export$2e2bcd8739ae039 //!/class\n = {\n    /**\n\t * Database connection.\n\t */ db: null,\n    /**\n\t * Initializes the database connection.\n\t * @param {string} dbName\n\t * @param {number} version\n\t * @param {(db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void} upgradeCallback\n\t * @returns {Promise<void>}\n\t * !static init (dbName: string, version: number, upgradeCallback: (db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void) : Promise<void>;\n\t */ init: function(dbName, version, upgradeCallback) {\n        return new Promise((resolve, reject)=>{\n            if (!$parcel$global.indexedDB) {\n                reject(\"IndexedDB is not available in your system.\");\n                return;\n            }\n            let req = indexedDB.open(dbName, version);\n            req.onerror = (evt)=>{\n                let err = evt.target.error + \"\";\n                if (err.indexOf(\"AbortError\") !== -1) err = \"\\n\" + req.message;\n                reject(\"Unable to open database: \" + err);\n                return;\n            };\n            req.onupgradeneeded = async (evt)=>{\n                try {\n                    const db = evt.target.result;\n                    const txn = evt.target.transaction;\n                    if (evt.oldVersion < 1) db.createObjectStore(\"system\", {\n                        keyPath: [\n                            \"name\"\n                        ]\n                    });\n                    await upgradeCallback(db, txn, evt.oldVersion);\n                } catch (e) {\n                    req.message = e.message;\n                    req.transaction.abort();\n                }\n            };\n            req.onsuccess = async (evt)=>{\n                this.db = evt.target.result;\n                resolve();\n            };\n        });\n    },\n    /**\n\t * Ensures the database is ready to be used, or throws an exception.\n\t */ ensureConnected: function() {\n        if (!this.db) alert(\"Error: Database not initialized.\");\n    },\n    /**\n\t * Returns an index object for later use with methods that accept an IDBIndex in the `storeName` parameter.\n\t * @param {string} storeName\n\t * @param {string} indexName\n\t * @returns {IDBIndex}\n\t * !static index (storeName: string, indexName: string) : IDBIndex;\n\t */ index: function(storeName, indexName) {\n        this.ensureConnected();\n        let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n        let index = store.index(indexName);\n        if (!index) throw new Error(\"Unable to find index `\" + indexName + \"` in store \" + storeName);\n        return index;\n    },\n    /**\n\t * Runs a callback for each record in a data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} id\n\t * @param { (value:object, cursor:IDBCursor) => Promise<boolean> } callback\n\t * @returns {Promise<void>}\n\t * !static forEach (storeName: string|IDBIndex|IDBObjectStore, id: string, callback: (value:object, cursor:IDBCursor) => Promise<boolean>) : Promise<void>;\n\t */ forEach: function(storeName, id, callback) {\n        this.ensureConnected();\n        if (typeof id === \"function\") {\n            callback = id;\n            id = null;\n        }\n        return new Promise(async (resolve, reject)=>{\n            let request, store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            else store = storeName;\n            if (id === null) request = store.openCursor();\n            else request = store.openCursor(id);\n            request.onsuccess = async (event)=>{\n                let cursor = event.target.result;\n                if (!cursor) {\n                    resolve();\n                    return;\n                }\n                let result = await callback(cursor.value, cursor);\n                if (result === false) {\n                    resolve();\n                    return;\n                }\n                cursor.continue();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns the count of all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @returns {Promise<number>}\n\t * !static count (storeName: string|IDBIndex|IDBObjectStore) : Promise<number>;\n\t */ count: function(storeName) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.count();\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<object>>}\n\t * !static getAll (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */ getAll: function(storeName, filter = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.getAll(filter);\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns all keys from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<string|number|Array<string|number>>>}\n\t * !static getAllKeys (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */ getAllKeys: function(storeName, filter = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.getAllKeys(filter);\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Loads a list of records having unique values from the specified data store and returns the entire object or just the specified field.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} [field]\n\t * @returns {Promise<Array<number|string|object>>}\n\t * !static getAllUnique (storeName: string|IDBIndex|IDBObjectStore) : Promise<Array<number|string|object>>;\n\t */ getAllUnique: function(storeName, fieldName = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.openCursor(null, \"nextunique\");\n            let list = [];\n            request.onsuccess = (event)=>{\n                let cursor = event.target.result;\n                if (!cursor) {\n                    resolve(list);\n                    return;\n                }\n                list.push(fieldName ? cursor.value[fieldName] : cursor.value);\n                cursor.continue();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns a single record from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<object>}\n\t * !static get (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<object>;\n\t */ get: function(storeName, id) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.get(id);\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result || null);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Adds or overwrites a record in the specified data store (data must include the primary key).\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static put (storeName: string, data: object) : Promise<void>;\n\t */ put: function(storeName, data) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            let request = store.put(data);\n            request.onsuccess = (evt)=>{\n                resolve();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns a variable from the system table.\n\t * @param {string} name - Name of the property to read.\n\t * @param {boolean} full - When `true` the entire object will be returned.\n\t * @returns {any}\n\t * !static sysGet (name: string, full?: boolean) : any;\n\t */ sysGet: async function(name, full = false) {\n        let data = await this.get(\"system\", [\n            name\n        ]);\n        return data ? full ? data : data.value : null;\n    },\n    /**\n\t * Writes a variable to the system table.\n\t * @param {string} name - Name of the property to write.\n\t * @param {any} value - Value to write.\n\t * @param {boolean} full - When `true` the entire value will be written as-is.\n\t * @returns {void}\n\t * !static sysPut (name: string, value: any, full?: boolean) : void;\n\t */ sysPut: async function(name, value, full = false) {\n        if (full) {\n            value.name = name;\n            await this.put(\"system\", value);\n        } else await this.put(\"system\", {\n            name: name,\n            value: value\n        });\n    },\n    /**\n\t * Returns a single record from the specified data store that matches the `partial` object and does NOT match the `notPartial` object.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {object} [partial]\n\t * @param {object} [notPartial]\n\t * @returns {Promise<object>}\n\t * !static findOne (storeName: string|IDBIndex|IDBObjectStore, partial?: object, notPartial?: object) : Promise<object>;\n\t */ findOne: function(storeName, partial = null, notPartial = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.openCursor();\n            request.onsuccess = (event)=>{\n                let cursor = event.target.result;\n                if (!cursor) {\n                    resolve(null);\n                    return;\n                }\n                if (partial === null || (0, $jNRwG.Rinn).partialCompare(cursor.value, partial)) {\n                    if (notPartial !== null) {\n                        if ((0, $jNRwG.Rinn).partialCompare(cursor.value, notPartial)) {\n                            cursor.continue();\n                            return;\n                        }\n                    }\n                    resolve(cursor.value);\n                    return;\n                }\n                cursor.continue();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Deletes a record from the specified data store.\n\t * @param {string} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static delete (storeName: string, id: string|number|Array<string|number>) : Promise<void>;\n\t */ delete: function(storeName, id) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            let request = store.delete(id);\n            request.onsuccess = (evt)=>{\n                resolve();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Deletes all items in the specified store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static deleteAll (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<void>;\n\t */ deleteAll: function(storeName, id = null) {\n        return this.forEach(storeName, id, async (value, cursor)=>{\n            await cursor.delete();\n        });\n    },\n    /**\n\t * Inserts a new record in the specified data store.\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static insert (storeName: string, data: object) : Promise<void>;\n\t */ insert: function(storeName, data) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            let request = store.add(data);\n            request.onsuccess = (evt)=>{\n                resolve();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    }\n};\n\n\n\nvar $jNRwG = parcelRequire(\"jNRwG\");\nconst $a8da540bf1e6d416$export$55185c17a0fcbe46 = (0, $a60d7ab082450164$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$db77ccec0bb4ccac = (0, $a5c21812244207c8$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$9864de54bd63ed8a = (0, $a5c21812244207c8$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$bf71da7aebe9ddc1 = (0, $7a42222fdfbd696d$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$accd73d198d77d2f = (0, $80620d99b03812be$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$d3568da47c78d35c = (0, $dae0bbca73793b94$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$cea96571ebbff9dd = (0, $34149b5e20a7ad4b$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$deefd61317ad2797 = (0, $b77ee20098523c74$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$3abb4be70fa2c84e = (0, $71bc70b9c4af45f1$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$d2ca453b913dcdea = (0, $56b80282f7eea6ac$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$f932f06c7eb6abeb = (0, $2adc75ff92895237$export$2e2bcd8739ae039);\nconst $a8da540bf1e6d416$export$eefcfe56efaaa57d = $jNRwG.Rinn;\nconst $a8da540bf1e6d416$export$4c85e640eb41c31b = $jNRwG.Class;\nconst $a8da540bf1e6d416$export$d61e24a684f9e51 = $jNRwG.Event;\nconst $a8da540bf1e6d416$export$ec8b666c5fe2c75a = $jNRwG.EventDispatcher;\nconst $a8da540bf1e6d416$export$a1edc412be3e1841 = $jNRwG.Model;\nconst $a8da540bf1e6d416$export$59eced47f477f85a = $jNRwG.ModelList;\nconst $a8da540bf1e6d416$export$19342e026b58ebb7 = $jNRwG.Schema;\nconst $a8da540bf1e6d416$export$3a9581c9ade29768 = $jNRwG.Flattenable;\nconst $a8da540bf1e6d416$export$fb8073518f34e6ec = $jNRwG.Collection;\nconst $a8da540bf1e6d416$export$14416b8d99d47caa = $jNRwG.Template;\n$parcel$global.riza = {\n    Router: $a8da540bf1e6d416$export$55185c17a0fcbe46,\n    Element: $a8da540bf1e6d416$export$db77ccec0bb4ccac,\n    CElement: $a8da540bf1e6d416$export$9864de54bd63ed8a,\n    Api: $a8da540bf1e6d416$export$bf71da7aebe9ddc1,\n    DataSource: $a8da540bf1e6d416$export$accd73d198d77d2f,\n    DataList: $a8da540bf1e6d416$export$d3568da47c78d35c,\n    Easing: $a8da540bf1e6d416$export$cea96571ebbff9dd,\n    Anim: $a8da540bf1e6d416$export$deefd61317ad2797,\n    Elements: $a8da540bf1e6d416$export$3abb4be70fa2c84e,\n    Utils: $a8da540bf1e6d416$export$d2ca453b913dcdea,\n    db: $a8da540bf1e6d416$export$f932f06c7eb6abeb,\n    Rinn: $a8da540bf1e6d416$export$eefcfe56efaaa57d,\n    Class: $a8da540bf1e6d416$export$4c85e640eb41c31b,\n    Event: $a8da540bf1e6d416$export$d61e24a684f9e51,\n    EventDispatcher: $a8da540bf1e6d416$export$ec8b666c5fe2c75a,\n    Model: $a8da540bf1e6d416$export$a1edc412be3e1841,\n    ModelList: $a8da540bf1e6d416$export$59eced47f477f85a,\n    Schema: $a8da540bf1e6d416$export$19342e026b58ebb7,\n    Flattenable: $a8da540bf1e6d416$export$3a9581c9ade29768,\n    Collection: $a8da540bf1e6d416$export$fb8073518f34e6ec,\n    Template: $a8da540bf1e6d416$export$14416b8d99d47caa\n};\n\n\nexport {$a8da540bf1e6d416$export$55185c17a0fcbe46 as Router, $a8da540bf1e6d416$export$db77ccec0bb4ccac as Element, $a8da540bf1e6d416$export$9864de54bd63ed8a as CElement, $a8da540bf1e6d416$export$bf71da7aebe9ddc1 as Api, $a8da540bf1e6d416$export$accd73d198d77d2f as DataSource, $a8da540bf1e6d416$export$d3568da47c78d35c as DataList, $a8da540bf1e6d416$export$cea96571ebbff9dd as Easing, $a8da540bf1e6d416$export$deefd61317ad2797 as Anim, $a8da540bf1e6d416$export$3abb4be70fa2c84e as Elements, $a8da540bf1e6d416$export$d2ca453b913dcdea as Utils, $a8da540bf1e6d416$export$f932f06c7eb6abeb as db, $a8da540bf1e6d416$export$eefcfe56efaaa57d as Rinn, $a8da540bf1e6d416$export$4c85e640eb41c31b as Class, $a8da540bf1e6d416$export$d61e24a684f9e51 as Event, $a8da540bf1e6d416$export$ec8b666c5fe2c75a as EventDispatcher, $a8da540bf1e6d416$export$a1edc412be3e1841 as Model, $a8da540bf1e6d416$export$59eced47f477f85a as ModelList, $a8da540bf1e6d416$export$19342e026b58ebb7 as Schema, $a8da540bf1e6d416$export$3a9581c9ade29768 as Flattenable, $a8da540bf1e6d416$export$fb8073518f34e6ec as Collection, $a8da540bf1e6d416$export$14416b8d99d47caa as Template};\n//# sourceMappingURL=riza.js.map\n","function $parcel$export(t,e,n,r){Object.defineProperty(t,e,{get:n,set:r,enumerable:!0,configurable:!0})}var $parcel$global=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:{},$parcel$modules={},$parcel$inits={},parcelRequire=$parcel$global.parcelRequire25d2;null==parcelRequire&&((parcelRequire=function(t){if(t in $parcel$modules)return $parcel$modules[t].exports;if(t in $parcel$inits){var e=$parcel$inits[t];delete $parcel$inits[t];var n={id:t,exports:{}};return $parcel$modules[t]=n,e.call(n.exports,n,n.exports),n.exports}var r=Error(\"Cannot find module '\"+t+\"'\");throw r.code=\"MODULE_NOT_FOUND\",r}).register=function(t,e){$parcel$inits[t]=e},$parcel$global.parcelRequire25d2=parcelRequire),parcelRequire.register(\"4VREF\",function(module,exports){$parcel$export(module.exports,\"default\",()=>$39761b0dd175036e$export$2e2bcd8739ae039);var $fMUO1=parcelRequire(\"fMUO1\"),$cAEYe=parcelRequire(\"cAEYe\"),/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/$39761b0dd175036e$export$2e2bcd8739ae039={/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/_getref:function(value,obj){return\"string\"!=typeof value?value:(\"#\"==value.substr(0,1)?value=obj.get(value.substr(1)):\"@\"==value.substr(0,1)&&(value=obj[value.substr(1)]),\"string\"==typeof value)?eval(value):value},/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/type:function(t,e,n,r){switch(e){case\"int\":if(isNaN(r=parseInt(r)))throw Error(e);break;case\"float\":if(isNaN(r=parseFloat(r)))throw Error(e);break;case\"string\":r=null==r?\"\":r.toString();break;case\"bit\":if(!0===r||!1===r){r=r?1:0;break}if(isNaN(r=parseInt(r)))throw Error(e);r=r?1:0;break;case\"array\":if(\"array\"==(0,$fMUO1.default).typeOf(r))break;if(null==r){r=[];break}throw Error(e);case\"bool\":if(\"true\"===r||!0===r){r=!0;break}if(\"false\"===r||!1===r){r=!1;break}throw Error(e)}return r},/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/model:function(t,e,n,r){var i=this._getref(e,t);if(!i)throw Error(e);return r?i.ensure(r):new i},/**\n\t**\tVerifies that the field is of the specified class.\n\t*/cls:function(t,e,n,r){var i=this._getref(e,t);return r?(0,$fMUO1.default).ensureTypeOf(i,r):new i},/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/arrayof:function(t,e,n,r){var i=this._getref(e,t);if(r||(r=[]),!i||\"array\"!=(0,$fMUO1.default).typeOf(r))throw Error(e);for(var s=0;s<r.length;s++)r[s]=(0,$fMUO1.default).ensureTypeOf(i,r[s]);return r},/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/arraynull:function(t,e,n,r){var i=!1;if(\"object\"==(0,$fMUO1.default).typeOf(e)&&(e.remove&&(i=e.remove),e=e.value),e)return r;if(\"array\"!=(0,$fMUO1.default).typeOf(r))throw Error(e);for(var s=0;s<r.length;s++)if(null==r[s]){if(i)r.splice(s--,1);else throw Error(e)}return r},/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/arraycompliant:function(t,e,n,r){var i=!1;if(\"object\"==(0,$fMUO1.default).typeOf(e)&&(e.remove&&(i=e.remove),e=e.value),!e)return r;if(\"array\"!=(0,$fMUO1.default).typeOf(r))throw Error(e);for(var s=0;s<r.length;s++)if(null!=r[s]&&!r[s].isCompliant()){if(i)r.splice(s--,1);else throw Error(e)}return r},/**\n\t**\tVerifies the presense of the field.\n\t*/required:function(t,e,n,r){if(null==r)throw Error(e?\"\":\"null\");if(\"array\"===(0,$fMUO1.default).typeOf(r)){if(0==r.length)throw Error(e?\"\":\"null\")}else if(0==r.toString().length)throw Error(e?\"\":\"null\");return r},/**\n\t**\tVerifies the minimum length of the field.\n\t*/minlen:function(t,e,n,r){if(r.toString().length<e)throw Error(e);return r},/**\n\t**\tVerifies the maximum length of the field.\n\t*/maxlen:function(t,e,n,r){if(r.toString().length>e)throw Error(e);return r},/**\n\t**\tVerifies the minimum value of the field.\n\t*/minval:function(t,e,n,r){if(parseFloat(r)<e)throw Error(e);return r},/**\n\t**\tVerifies the maximum value of the field.\n\t*/maxval:function(t,e,n,r){if(parseFloat(r)>e)throw Error(e);return r},/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/mincount:function(t,e,n,r){if(\"array\"!=(0,$fMUO1.default).typeOf(r)||r.length<e)throw Error(e);return r},/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/maxcount:function(t,e,n,r){if(\"array\"!=(0,$fMUO1.default).typeOf(r)||r.length>e)throw Error(e);return r},/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/pattern:function(t,e,n,r){if(!(0,$cAEYe.default)[e].test(r.toString()))throw Error(e);return r},/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/inset:function(t,e,n,r){if(\"array\"!=(0,$fMUO1.default).typeOf(e)){if(!RegExp(\"^(\"+e.toString()+\")$\").test(r.toString()))throw Error(e);return r}if(-1==e.indexOf(r.toString()))throw Error(e.join(\"|\"));return r},/**\n\t**\tSets the field to upper case.\n\t*/upper:function(t,e,n,r){return e?r.toString().toUpperCase():r},/**\n\t**\tSets the field to lower case.\n\t*/lower:function(t,e,n,r){return e?r.toString().toLowerCase():r}}}),parcelRequire.register(\"fMUO1\",function(t,e){$parcel$export(t.exports,\"default\",()=>r);let n={};var r=n;/*\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/n.invokeLater=function(t){t&&setTimeout(function(){t()},10)},/*\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/n.wait=function(t){return new Promise(function(e,n){setTimeout(e,t)})},/*\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/n.typeOf=function(t){return t instanceof Array?\"array\":null===t?\"null\":(typeof t).toString().toLowerCase()},/*\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/n.isArrayOrObject=function(t){switch(n.typeOf(t)){case\"array\":case\"object\":return!0}return!1},/*\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/n.clone=function(t){let e=n.typeOf(t);if(\"array\"===e){e=[];for(let r=0;r<t.length;r++)e.push(n.clone(t[r]))}else if(\"object\"===e){if(\"clone\"in t&&\"function\"==typeof t.clone)return t.clone();for(let r in e={},t)e[r]=n.clone(t[r])}else e=t;return e},/*\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/n.merge=function(t,...e){if(\"array\"==n.typeOf(t))for(let r=0;r<e.length;r++){let i=e[r];if(\"array\"!=n.typeOf(i))t.push(i);else for(let e=0;e<i.length;e++)t.push(n.clone(i[e]))}else if(\"object\"==n.typeOf(t))for(let r=0;r<e.length;r++){let i=e[r];if(\"object\"==n.typeOf(i))for(let e in i)n.isArrayOrObject(i[e])?e in t?n.merge(t[e],i[e]):t[e]=n.clone(i[e]):t[e]=i[e]}return t},/*\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/n.override=function(t,...e){for(let n=0;n<e.length;n++)for(let r in e[n])t[r]=e[n][r];return t},/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/n.partialCompare=function(t,e){if(null==t||null==e)return!1;if(t===e)return!0;for(var n in e)if(t[n]!=e[n])return!1;return!0},/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/n.arrayFind=function(t,e,n){for(var r=0;t&&r<t.length;r++)if(this.partialCompare(t[r],e))return n?t[r]:r;return!!n&&null},/*\r\n**\tVerifies if the specified object is of class `m`, returns boolean.\r\n**\r\n**\t>> bool isTypeOf (object obj, class _class);\r\n*/n.isInstanceOf=function(t,e){return!!t&&!!e&&\"object\"==typeof t&&(t instanceof e||\"isInstanceOf\"in t&&t.isInstanceOf(e))},/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/n.indexOf=function(t,e,n=!1){if(n){for(let n=0;n<t.length;n++)if(t[n]===e)return n;return -1}for(let n in t)if(t[n]===e)return n;return -1},/*\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/n.escape=function(t){return(t+\"\").replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")},/*\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/n.ensureTypeOf=function(t,e){return!e||!t||e instanceof t||e.isInstanceOf&&t.prototype.className&&e.isInstanceOf(t.prototype.className)?e:new t(e)},/*\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/n.serialize=function(t){return JSON.stringify(t)},/*\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/n.deserialize=function(t){return JSON.parse(t)},/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/n.hookAppend=function(t,e,n,r=!0){let i=t[e];return r?t[e]=function(...t){if(!1!==i.apply(this,t))return n.apply(this,t)}:t[e]=function(...t){return i.apply(this,t),n.apply(this,t)},{unhook:function(){t[e]=i}}},/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/n.hookPrepend=function(t,e,n,r=!0){let i=t[e];return r?t[e]=function(...t){if(!1!==n.apply(this,t))return i.apply(this,t)}:t[e]=function(...t){return n.apply(this,t),i.apply(this,t)},{unhook:function(){t[e]=i}}}}),parcelRequire.register(\"cAEYe\",function(t,e){$parcel$export(t.exports,\"default\",()=>n);/**\n**\tCommon regular expressions for pattern validation.\n*/var n={email:/^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,url:/^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,urlNoProt:/^[\\w-]+(\\.\\w+)+.*$/,name:/^[-A-Za-z0-9_.]+$/,uname:/^['\\pL\\pN ]+$/,text:/^[^&<>{}]*$/,utext:/^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/}});var $fMUO1=parcelRequire(\"fMUO1\"),$fMUO1=parcelRequire(\"fMUO1\");/**\r\n * Base class used to create other classes with complex prototype based multiple inheritance while at the\r\n * same time avoiding the prototype chain for faster access. Supports calling parent class methods.\r\n *///!class Class\nlet $2394d727dfd6a212$var$Class=function(){};/**\r\n * Reference to the class itself.\r\n */$2394d727dfd6a212$var$Class._class=$2394d727dfd6a212$var$Class,/**\r\n * Contains the methods of each of the super classes.\r\n */$2394d727dfd6a212$var$Class._super={},/**\r\n * Name of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n * !readonly string className;\r\n */$2394d727dfd6a212$var$Class.prototype.className=\"Class\",/**\r\n * Class constructor, should initialize the instance. Invoked when the `new` keyword is used with the class.\r\n * !constructor();\r\n */$2394d727dfd6a212$var$Class.prototype.__ctor=function(){},/**\r\n * Class destructor, should clear the instance and release any used resources, invoked when the global `dispose` function is called with an instance as parameter.\r\n * !__dtor() : void;\r\n */$2394d727dfd6a212$var$Class.prototype.__dtor=function(){},/**\r\n * Returns true if the object is an instance of the specified class, the parameter can be a class name (string), a constructor (function) or\r\n * a class instance (object), in any cases the appropriate checks will be done.\r\n * !isInstanceOf (className: string|function|object) : boolean;\r\n */$2394d727dfd6a212$var$Class.prototype.isInstanceOf=function(t){return null!==t&&(\"function\"==typeof t?t=t.prototype.className:\"string\"!=typeof t&&(t=t.__proto__.className),this.className===t||this._super.hasOwnProperty(t))},/**\r\n * Returns true if the given object is an instance of the specified class, the parameter can be a class name (string), a constructor (function)\r\n * or a class instance (object), in any cases the appropriate checks will be done.\r\n * !instanceOf (object: object, className: string|function|object) : boolean;\r\n */$2394d727dfd6a212$var$Class.instanceOf=function(t,e){return null!==t&&null!==e&&t.isInstanceOf(e)},/**\r\n * Internal method to ensure the _super field of an instance has all functions properly bound to the instance.\r\n */$2394d727dfd6a212$var$Class.prototype._initSuperRefs=function(){let t=this.constructor._super,e={},n=this;for(let r in t){let i={},s=t[r].prototype;for(let t in s)\"function\"===(0,$fMUO1.default).typeOf(s[t])&&(i[t]=function(t){return function(e,r,i,s,a,l,o,u,f,h,c){return t.call(n,e,r,i,s,a,l,o,u,f,h,c)}}(s[t]));e[r]=i}this._super=e},/*\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/$2394d727dfd6a212$var$Class.inherit=function(t){let e=this._class,n=e._super,r=e._class;if(\"function\"===(0,$fMUO1.default).typeOf(t)){// Move constants (uppercased properties) to the class-level instead of prototype-level.\nfor(let n in t._class)/^[A-Z]/.test(n)||(e[n]=t._class[n]);// Combine methods and properties.\n(0,$fMUO1.default).override(e.prototype,t._class.prototype),// Combine super references.\n(0,$fMUO1.default).override(n,t._class._super),t._class.prototype.className&&(n[t._class.prototype.className]=t._class)}else(0,$fMUO1.default).override(e.prototype,t);return e._super=n,e._class=r,e},/**\r\n * Internal method used to extend a class with one or more prototypes.\r\n */$2394d727dfd6a212$var$Class.prototype._extend=function(t,e){if(0===e.length)return t;//VIOLET OPTIMIZE\nlet n=function(...t){this._initSuperRefs(),this.__ctor.apply(this,t)};n._class=n,n._super={},$2394d727dfd6a212$var$Class.inherit.call(n,t),delete n.prototype.className;for(let t=0;t<e.length;t++)n.inherit(e[t]);return delete n._super.Class,\"classInit\"in n.prototype&&n.prototype.classInit(),n.isInstance=function(t){return(0,$fMUO1.default).isInstanceOf(t,n)},n},/**\r\n * Creates a new class with the specified prototypes each of which can be a class constructor (function) or an object.\r\n */$2394d727dfd6a212$var$Class.extend=function(...t){return this._class.prototype._extend(this,t)},/**\r\n * Creates a new instance of a class resulting from extending the self class with the specified prototype.\r\n */$2394d727dfd6a212$var$Class.create=function(t){return new(this.extend(t))},/**\r\n * Mutates the host object to be an instance of the specified class.\r\n * !static mutate (classConstructor: object, host: object, override?: object) : object;\r\n */$2394d727dfd6a212$var$Class.mutate=function(t,e,n=null){let r=new t;// Copy all members from the class prototype.\nfor(let n in t.prototype)e.hasOwnProperty(n)||(e[n]=t.prototype[n]);// Copy all members from the zombie class instance.\nfor(let t in r)e.hasOwnProperty(t)||(e[t]=r[t]);// Rebind the super references.\nif(e._super)for(let n in e._super)for(let r in e._super[n])e._super[n][r]=t.prototype.constructor._super[n].prototype[r].bind(e);// Copy override members.\nif(null!==n)for(let t in n)e[t]=n[t];return e};var $2394d727dfd6a212$export$2e2bcd8739ae039=$2394d727dfd6a212$var$Class,$fMUO1=parcelRequire(\"fMUO1\"),/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/$13eda5a5dec8010f$export$2e2bcd8739ae039=$2394d727dfd6a212$export$2e2bcd8739ae039.extend({/**\r\n\t**\tName of the class.\r\n\t*/className:\"Event\",/**\r\n\t**\tSource of the event.\r\n\t*/source:null,/**\r\n\t**\tName of the event.\r\n\t*/name:null,/**\r\n\t**\tArguments of the event.\r\n\t*/args:null,/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/_async:!1,/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/list:null,/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/next:null,/**\r\n\t**\tReturn values from event handlers.\r\n\t*/ret:null,/**\r\n\t**\tOriginal root event.\r\n\t*/original:null,/**\r\n\t**\tIndex of the current event handler.\r\n\t*/i:-1,/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/__ctor:function(t,e,n,r,i,s){this.source=t,this.name=n,this.args=r,this.cbHandler=i,this.cbContext=s,this.list=e,this.reset()},/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/reset:function(){return this.next=null,this.ret=[],this._async=!1,this.i=-1,this},/**\r\n\t**\tChanges the source of the event.\r\n\t**\r\n\t**\tEvent setSource (object value);\r\n\t*/setSource:function(t){return this.source=t,this},/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/wait:function(){return this._async=!0,this},/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/resume:function(){for(this._async=!1;!this._async&&!(++this.i>=this.list.length);)if(!this.list[this.i].silent){if(\"string\"==(0,$fMUO1.default).typeOf(this.list[this.i].handler)){if(this.list[this.i].context){if(!this.list[this.i].context[this.list[this.i].handler])continue;if(!1===this.list[this.i].context[this.list[this.i].handler](this,this.args,this.list[this.i].data))break}else if(!1===$parcel$global[this.list[this.i].handler].call(null,this,this.args,this.list[this.i].data))break}else if(!1===this.list[this.i].handler.call(this.list[this.i].context,this,this.args,this.list[this.i].data))break}return this._async||(this.i>=this.list.length&&this.next&&this.next.resume(),this.cbHandler&&this.cbHandler.call(this.cbContext)),this},/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/from:function(t){return this.original=t,this},/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/enqueue:function(t){var e;if(!t)return this;for(e=this;null!=e.next;e=e.next);return e.next=t,t.from(this),this}}),/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/$c43adaf9cb6d6dd3$export$2e2bcd8739ae039=$2394d727dfd6a212$export$2e2bcd8739ae039.extend({/**\r\n\t**\tName of the class.\r\n\t*/className:\"EventDispatcher\",/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/listeners:null,/**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/namespace:null,/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/__ctor:function(){this.listeners={}},/**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/setNamespace:function(t){return this.namespace=t,this},/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/addEventListener:function(t,e,n,r){var i=(t=t.split(\":\"))[t.length-1],s=t.length>1?t[0]:null;return this.listeners[i]||(this.listeners[i]=[]),this.listeners[i].push({ns:s,handler:e,context:n,data:r,silent:0}),this},/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/removeEventListener:function(t,e,n){var r=(t=t.split(\":\"))[t.length-1],i=t.length>1?t[0]:null;if(\"*\"==r)for(var s in this.listeners)for(var a=this.listeners[s],l=0;l<a.length;l++){var o=!0;e&&(o=o&&a[l].handler===e),n&&(o=o&&a[l].context===n),i&&(o=o&&a[l].ns==i),o&&a.splice(l--,1)}else{if(!this.listeners[r])return this;for(var a=this.listeners[r],l=0;l<a.length;l++){var o=!0;e&&(o=o&&a[l].handler===e),n&&(o=o&&a[l].context===n),i&&(o=o&&a[l].ns==i),o&&a.splice(l--,1)}}return this},/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/prepareEvent:function(t,e,n,r){var i=[],s=(t=t.split(\":\"))[t.length-1],a=t.length>1?t[0]:null;this.listeners[s]&&(i=i.concat(this.listeners[s])),this.listeners[\"*\"]&&(i=i.concat(this.listeners[\"*\"]));for(var l=0;l<i.length;l++)i[l].silent&&i.splice(l--,1);if(a)for(var l=0;l<i.length;l++)i[l].ns!=a&&i.splice(l--,1);return new $13eda5a5dec8010f$export$2e2bcd8739ae039(this,i,s,e,n,r)},/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/silence:function(t,e){var n=(t=t.split(\":\"))[t.length-1],r=t.length>1?t[0]:null;if(e=!1===e?-1:1,\"*\"==n)for(var i in this.listeners)for(var s=this.listeners[i],a=0;a<s.length;a++)r&&s[a].ns!=r||(s[a].silent+=e);else{if(!this.listeners[n])return this;for(var s=this.listeners[n],a=0;a<s.length;a++)r&&s[a].ns!=r||(s[a].silent+=e)}return this},/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/dispatchEvent:function(t,e,n,r){return this.prepareEvent(this.namespace?this.namespace+\":\"+t:t,e,n,r).resume()}}),$fMUO1=parcelRequire(\"fMUO1\"),$4VREF=parcelRequire(\"4VREF\");/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/let $4dfa0622e14576ea$var$_Model=$c43adaf9cb6d6dd3$export$2e2bcd8739ae039.extend({/**\n\t**\tName of the class.\n\t*/className:\"Model\",/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/defaults:null,/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/constraints:null,/**\n\t**\tProperties of the model.\n\t*/data:null,/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/changedList:null,/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/_silent:0,/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/_level:0,/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/__ctor:function(t,e){if(this._super.EventDispatcher.__ctor(),this.data={},null!=e)this.reset(e,!1);else{let t=null;if(!this.defaults&&this.constraints)for(let e in t={},this.constraints){let n=this.constraints[e];if(null===n.def||void 0===n.def){t[e]=null;continue}\"function\"==typeof n.def?t[e]=n.def():t[e]=n.def}this.reset(t)}this.init(),null!=t&&this.set(t,!0),this.constraints&&this.update(),this.ready()},/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/reset:function(t,e){if(!this.defaults){if(!t||\"object\"!==(0,$fMUO1.default).typeOf(t)&&\"function\"!==(0,$fMUO1.default).typeOf(t))return this;this.defaults=t}return\"function\"===(0,$fMUO1.default).typeOf(this.defaults)?this.data=this.defaults():this.data=(0,$fMUO1.default).clone(this.defaults),!1===e||!1===t?this:this.update(null,!0)},/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/init:function(){},/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/ready:function(){},/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/silent:function(t){return this._silent+=t?1:-1,this},/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/_validate:function(t,e){if(!this.constraints||!this.constraints[t])return e;var n=this.constraints[t],r=e;for(var i in n)if($4dfa0622e14576ea$var$_Model.Constraints[i])try{r=$4dfa0622e14576ea$var$_Model.Constraints[i](this,n[i],t,r)}catch(e){if(\"null\"==e.message)break;throw Error(`Constraint [${i}:${n[i]}] failed on property '${t}'.`)}return r},/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/_set:function(t,e){if(!this.constraints||!this.constraints[t])return this.data[t]=e,e;var n=this.constraints[t];this.data[t];var r=e;for(var i in n)if($4dfa0622e14576ea$var$_Model.Constraints[i])try{r=$4dfa0622e14576ea$var$_Model.Constraints[i](this,n[i],t,r)}catch(n){if(\"null\"==n.message)break;this._silent||this.dispatchEvent(\"constraintError\",{constraint:i,message:n.message,name:t,value:e});break}return this.data[t]=r},/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/_propertyEvent:function(t,e,n,r){var i={name:t,old:e,value:n,level:this._level},s=this.dispatchEvent(\"propertyChanging\",i);r?this.data[t]=i.value:i.value=this._set(t,i.value),null!=s&&s.ret.length&&!1===s.ret[0]||(this.dispatchEvent(\"propertyChanged.\"+t,i),this.dispatchEvent(\"propertyChanged\",i),this.changedList.push(t))},/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/set:function(){var t=arguments.length,e=!1,n=!1;if((t>2||2==t&&\"object\"==(0,$fMUO1.default).typeOf(arguments[0]))&&\"boolean\"==(0,$fMUO1.default).typeOf(arguments[t-1])&&(e=arguments[--t],!1===e&&(n=!0)),0==this._level&&(this.changedList=[]),this._level++,2==t)(this.data[arguments[0]]!==arguments[1]||e)&&(this._silent||n?this._set(arguments[0],arguments[1]):this._propertyEvent(arguments[0],this.data[arguments[0]],this._validate(arguments[0],arguments[1])));else for(var r in arguments[0])(this.data[r]!==arguments[0][r]||e)&&(this._silent||n?this._set(r,arguments[0][r]):this._propertyEvent(r,this.data[r],this._validate(r,arguments[0][r])));return--this._level||!this.changedList.length||n||this._silent||this.dispatchEvent(\"modelChanged\",{fields:this.changedList}),this},/**\n\t**\tReturns true if the given key exists in the model.\n\t**\n\t**\t>> boolean has (string name);\n\t*/has:function(t){return t in this.data},/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/get:function(t,e){return 0==arguments.length||!1===t?this.data:1==arguments.length&&!0===t?this.flatten():2==arguments.length&&void 0===this.data[t]?e:this.data[t]},/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/getInt:function(t,e){return 2==arguments.length&&void 0===this.data[t]?e:parseInt(this.data[t])},/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/getFloat:function(t,e){return 2==arguments.length&&void 0===this.data[t]?e:parseFloat(this.data[t])},/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/getBool:function(t,e){return t=2==arguments.length&&void 0===this.data[t]?e:this.data[t],\"true\"===t||!0===t||\"false\"!==t&&!1!==t&&!!parseInt(t)},/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/getReference:function(t){var e=this;return{get:function(){return e.get(t)},set:function(n){e.set(t,n)}}},/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/constraint:function(t,e,n){if(3==arguments.length||2==arguments.length||1==arguments.length&&\"object\"==(0,$fMUO1.default).typeOf(t)){switch(this.constraints===this.constructor.prototype.constraints&&(this.constraints=(0,$fMUO1.default).clone(this.constraints)),arguments.length){case 1:(0,$fMUO1.default).override(this.constraints,t);break;case 2:(0,$fMUO1.default).override(this.constraints[t],e);break;case 3:this.constraints[t][e]=n}return this}return t?this.constraints[t]:this},/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/flatten:function(t,e){if(t){var n=this.flatten(!1,!0);return null==n?null:(n.class=this.classPath,n)}if(!this.constraints&&!this.defaults)return this.data;if(!this.isCompliant())return{};var r=this.constraints,i=this.defaults?\"function\"==(0,$fMUO1.default).typeOf(this.defaults)?this.defaults():this.defaults:this.constraints,n={};for(var s in this.data)if(s in i){if(r&&r[s]){var a=r[s];if(a.model){n[s]=this.data[s]?this.data[s].flatten(e):null;continue}if(a.arrayof){n[s]=[];for(var l=0;l<this.data[s].length;l++)n[s][l]=this.data[s][l]?this.data[s][l].flatten(e):null;continue}if(a.cls){n[s]=this.data[s]?this.data[s].flatten():null;continue}}n[s]=this.data[s]}return n},/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/remove:function(t,e){if(\"array\"==(0,$fMUO1.default).typeOf(t)){for(var n=0;n<t.length;n++)delete this.data[t[n]];!1===e||this._silent||this.dispatchEvent(\"propertyRemoved\",{fields:t})}else delete this.data[t],!1===e||this._silent||this.dispatchEvent(\"propertyRemoved\",{fields:[t]})},/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/update:function(t,e){if(this._silent)return this;if(0==this._level&&(this.changedList=[]),this._level++,t&&\"string\"==(0,$fMUO1.default).typeOf(t))this._propertyEvent(t,this.data[t],this.data[t],e);else if(t&&\"array\"==(0,$fMUO1.default).typeOf(t))for(var n of t)this._propertyEvent(n,this.data[n],this.data[n],e);else for(var n in this.data)this._propertyEvent(n,this.data[n],this.data[n],e);return--this._level||this._silent||0==this.changedList.length&&!0!==t||this.dispatchEvent(\"modelChanged\",{fields:this.changedList}),this},/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/validate:function(t){if(!this.constraints)return this;if(t&&\"string\"==(0,$fMUO1.default).typeOf(t))this._set(t,this.data[t]);else for(var e in this.data)t&&-1==(0,$fMUO1.default).indexOf(t,e)||this._set(e,this.data[e]);return this},/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/isCompliant:function(){if(!this.constraints)return!0;try{for(var t in this.data)this._validate(t,this.data[t]);return!0}catch(t){}return!1},/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/observe:function(t,e,n){this.addEventListener(\"propertyChanged.\"+t,e,n)},/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/unobserve:function(t,e,n){this.removeEventListener(\"propertyChanged.\"+t,e,n)},/**\n\t**\tAdds a propertyChanged event handler for the given property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void watch (string property, function handler);\n\t*/watch:function(t,e){1==(t=t.split(\":\")).length&&(t[1]=t[0],t[0]=\"watch\"),this.addEventListener(t[0]+\":propertyChanged.\"+t[1],function(t,n){e(n.value,n,t)})},/**\n\t**\tRemoves propertyChanged handlers related to the specified property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void unwatch (string property);\n\t*/unwatch:function(t){1==(t=t.split(\":\")).length&&(t[1]=t[0],t[0]=\"watch\"),this.removeEventListener(t[0]+\":propertyChanged.\"+t[1])},/**\n\t * Triggers a field change event. Even if the value of the field is the same as the model's, the event will still be triggered.\n\t */trigger:function(t,e=null){return this.set(t,e,!0)},/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/toString:function(){return(0,$fMUO1.default).serialize(this.get(!0))}});$4dfa0622e14576ea$var$_Model.Constraints=$4VREF.default;var $4dfa0622e14576ea$export$2e2bcd8739ae039=$4dfa0622e14576ea$var$_Model,$fMUO1=parcelRequire(\"fMUO1\"),/**\n**\tGeneric list for models.\n*/$0890bed8a163f087$export$2e2bcd8739ae039=$4dfa0622e14576ea$export$2e2bcd8739ae039.extend({/**\n\t**\tName of the class.\n\t*/className:\"ModelList\",/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/itemt:$4dfa0622e14576ea$export$2e2bcd8739ae039,/**\n\t**\tMirror of data.contents\n\t*/contents:null,/**\n\t**\tIDs of every item in the contents.\n\t*/itemId:null,/**\n\t**\tAutoincremental ID for the next item to be added.\n\t*/nextId:null,/**\n\t**\tDefault properties of the model.\n\t*/defaults:{contents:null},/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/constraints:{contents:{type:\"array\",arrayof:\"@itemt\"}},/**\n\t**\tConstructor.\n\t*/__ctor:function(...t){this.itemId=[],this.nextId=0,this._super.Model.__ctor(...t)},/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t*/ready:function(){this._eventGroup=\"ModelList_\"+Date.now()+\":modelChanged\",this.contents=this.data.contents},/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int iid, Model item);\n\t*/_bind:function(t,e){return e&&e.addEventListener&&e.addEventListener(this._eventGroup,this._onItemEvent,this,t),e},/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/_unbind:function(t){return t&&t.removeEventListener&&t.removeEventListener(this._eventGroup),t},/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, int iid);\n\t*/_onItemEvent:function(t,e,n){this.prepareEvent(\"itemChanged\",{id:n,item:t.source}).from(t).enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume()},/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int length ();\n\t*/length:function(){return this.data.contents.length},/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/clear:function(){for(var t=0;t<this.data.contents;t++)this._unbind(this.data.contents[t]);return this.itemId=[],this.nextId=0,this.contents=this.data.contents=[],this.prepareEvent(\"itemsCleared\").enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume(),this},/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> ModelList setData (array data);\n\t*/setData:function(t){if(this.clear(),!t)return this;for(var e=0;e<t.length;e++){var n=(0,$fMUO1.default).ensureTypeOf(this.itemt,t[e]);this.itemId.push(this.nextId++),this.data.contents.push(n),this._bind(this.nextId-1,n)}return this.prepareEvent(\"itemsChanged\").enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume(),this},/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/getData:function(){return this.data.contents},/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/getAt:function(t){return t<0||t>=this.data.contents.length?null:this.data.contents[t]},/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/removeAt:function(t){if(t<0||t>=this.data.contents.length)return null;let e=this.data.contents.splice(t,1)[0],n=this.itemId.splice(t,1)[0];return this._unbind(e),this.prepareEvent(\"itemRemoved\",{id:n,item:e}).enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume(),e},/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/setAt:function(t,e){return!(t<0)&&!(t>=this.data.contents.length)&&(e=(0,$fMUO1.default).ensureTypeOf(this.itemt,e),this._unbind(this.data.contents[t]),this.data.contents[t]=e,this._bind(this.itemId[t],e),this.prepareEvent(\"itemChanged\",{id:this.itemId[t],item:e}).enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume(),!0)},/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/updateAt:function(t){return!(t<0)&&!(t>=this.data.contents.length)&&(this.prepareEvent(\"itemChanged\",{id:this.itemId[t],item:this.data.contents[t]}).enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume(),!0)},/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/push:function(t){return t&&\"object\"!=(0,$fMUO1.default).typeOf(t)?null:(t=(0,$fMUO1.default).ensureTypeOf(this.itemt,t),this.itemId.push(this.nextId++),this.data.contents.push(t),this._bind(this.nextId-1,t),this.prepareEvent(\"itemAdded\",{id:this.itemId[this.itemId.length-1],item:t,position:\"tail\"}).enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume(),t)},/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/pop:function(){return this._unbind(this.data.contents.pop())},/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/unshift:function(t){return t&&\"object\"!=(0,$fMUO1.default).typeOf(t)?null:(t=(0,$fMUO1.default).ensureTypeOf(this.itemt,t),this.itemId.unshift(this.nextId++),this.data.contents.unshift(t),this._bind(this.nextId-1,t),this.prepareEvent(\"itemAdded\",{id:this.itemId[0],item:t,position:\"head\"}).enqueue(this.prepareEvent(\"modelChanged\",{fields:[\"contents\"]})).resume(),t)},/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/shift:function(){return this._unbind(this.data.contents.shift())},/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/find:function(t,e=!1){for(var n=this.data.contents,r=0;r<n.length;r++)if((0,$fMUO1.default).partialCompare(n[r].data,t))return e?n[r]:r;return e?null:-1}}),$fMUO1=parcelRequire(\"fMUO1\");/**\r\n * The utility functions in this module allow to create a very strict serialization/deserialization schema\r\n * to ensure that all values are of the specific type when stored in string format.\r\n */let $2710795e2347ba2a$var$Schema={Type:function(t){let e={flatten:function(t,e){return t},unflatten:function(t,e){return t}};return t?(0,$fMUO1.default).override(e,t):e},String:function(){return $2710795e2347ba2a$var$Schema.Type({flatten:function(t,e){return null!=t?t.toString():null},unflatten:function(t,e){return null!=t?t.toString():null}})},Integer:function(){return $2710795e2347ba2a$var$Schema.Type({flatten:function(t,e){return~~t},unflatten:function(t,e){return~~t}})},Number:function(t){return $2710795e2347ba2a$var$Schema.Type({_precision:t,_round:!1,precision:function(t){return this._precision=~~t,this},flatten:function(t,e){return t=parseFloat(t),this._precision>0&&(t=~~(t*Math.pow(10,this._precision))/Math.pow(10,this._precision)),t},unflatten:function(t,e){return parseFloat(t)}})},Bool:function(t){return $2710795e2347ba2a$var$Schema.Type({_compact:t,compact:function(t){return this._compact=t,this},flatten:function(t,e){return t=~~t,this._compact?t>0?1:0:t>0},unflatten:function(t,e){return!!~~t}})},SharedString:function(){return $2710795e2347ba2a$var$Schema.Type({flatten:function(t,e){return null==t?0:(t=t.toString(),\"strings\"in e||(e.index={},e.strings=[]),t in e.index||(e.strings.push(t),e.index[t]=e.strings.length),e.index[t])},unflatten:function(t,e){return null==t||0==t?null:e.strings[~~t-1]}})},Array:function(t){return $2710795e2347ba2a$var$Schema.Type({itemType:t,_debug:!1,_filter:null,debug:function(t){return this._debug=t,this},of:function(t){return this.itemType=t,this},filter:function(t){return this._filter=t,this},flatten:function(t,e){if(null==t)return null;let n=[];for(let r=0;r<t.length;r++)(!this._filter||this._filter(t[r],r))&&n.push(this.itemType.flatten(t[r],e));return n},unflatten:async function(t,e){if(null==t)return null;let n=[];for(let r=0;r<t.length;r++)n.push(await this.itemType.unflatten(t[r],e));return n}})},Object:function(){return $2710795e2347ba2a$var$Schema.Type({properties:[],property:function(t,e,n=null){return this.properties.push({name:t,source:t,type:e,defvalue:n}),this},propertyAlias:function(t,e,n,r=null){return this.properties.push({name:t,source:e,type:n,defvalue:r}),this},flatten:function(t,e){let n;if(null==t)return null;if(!0===e.symbolic){n={};for(let r=0;r<this.properties.length;r++)this.properties[r].source in t?n[this.properties[r].name]=this.properties[r].type.flatten(t[this.properties[r].source],e):n[this.properties[r].name]=this.properties[r].type.flatten(this.properties[r].defvalue,e)}else{n=[];for(let r=0;r<this.properties.length;r++)this.properties[r].source in t?n.push(this.properties[r].type.flatten(t[this.properties[r].source],e)):n.push(this.properties[r].type.flatten(this.properties[r].defvalue,e))}return n},unflatten:async function(t,e){if(null==t)return null;let n={};if(!0===e.symbolic)for(let r=0;r<this.properties.length;r++)n[this.properties[r].name]=await this.properties[r].type.unflatten(this.properties[r].name in t?t[this.properties[r].name]:this.properties[r].defvalue,e);else for(let r=0;r<this.properties.length;r++)n[this.properties[r].name]=await this.properties[r].type.unflatten(r in t?t[r]:this.properties[r].defvalue,e);return n}})},Class:function(t){return $2710795e2347ba2a$var$Schema.Type({_constructor:t,constructor:function(t){return this._constructor=t,this},flatten:function(t,e){return null==t?null:t.flatten(e)},unflatten:async function(t,e){return null==t?null:await new this._constructor().unflatten(t,e)}})},/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/Property:function(t,e){return $2710795e2347ba2a$var$Schema.Type({property:t,type:e,name:function(t){return this.property=t,this},is:function(t){return this.type=t,this},flatten:function(t,e){let n;return null==t?null:(!0===e.symbolic?(n={})[this.property]=this.type.flatten(t[this.property],e):n=this.type.flatten(t[this.property],e),n)},unflatten:async function(t,e){if(null==t)return null;let n={};return!0===e.symbolic?n[this.property]=await this.type.unflatten(t[this.property],e):n[this.property]=await this.type.unflatten(t,e),n}})},Map:function(){return $2710795e2347ba2a$var$Schema.Type({flatten:function(t,e){if(null==t)return null;if(!0===e.symbolic)return t;let n=[];for(let e in t)n.push(e),n.push(t[e]);return n},unflatten:function(t,e){if(null==t)return null;if(!0===e.symbolic)return t;let n={};for(let e=0;e<t.length;e+=2)n[t[e]]=t[e+1];return n}})},Selector:function(){return $2710795e2347ba2a$var$Schema.Type({conditions:[],value:null,when:function(t,e){return this.conditions.push([e=>e===t,e]),this},with:function(t){return this.value=t,this},flatten:function(t,e){if(null==t)return null;for(let n of this.conditions)if(!0===n[0](this.value))return n[1].flatten(t,e);return null},unflatten:async function(t,e){if(null==t)return null;for(let n of this.conditions)if(!0===n[0](this.value))return await n[1].unflatten(t,e);return null}})}};var $2710795e2347ba2a$export$2e2bcd8739ae039=$2710795e2347ba2a$var$Schema,/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/$32651d5f38a8a64c$export$2e2bcd8739ae039=$2394d727dfd6a212$export$2e2bcd8739ae039.extend({/**\r\n\t**\tName of the class.\r\n\t*/className:\"Flattenable\",/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/typeSchema:null,/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/flatten:function(t){return this.typeSchema.flatten(this,t)},/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/unflatten:async function(t,e){return Object.assign(this,await this.typeSchema.unflatten(t,e)),await this.onUnflattened(),this},/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/onUnflattened:async function(){}}),$fMUO1=parcelRequire(\"fMUO1\"),/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/$2bcce06113365814$export$2e2bcd8739ae039=$32651d5f38a8a64c$export$2e2bcd8739ae039.extend({/**\r\n\t**\tName of the class.\r\n\t*/className:\"Collection\",/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/itemTypeSchema:null,/**\r\n\t**\tArray of items.\r\n\t*/items:null,/* Array *//**\r\n\t**\tConstructs the collection.\r\n\t*/__ctor:function(t){t||(t=this.itemTypeSchema),t&&(this.typeSchema=$2710795e2347ba2a$export$2e2bcd8739ae039.Property(\"items\").is($2710795e2347ba2a$export$2e2bcd8739ae039.Array().of(t))),this.reset()},/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/onUnflattened:function(){let t=this.items;for(let e of(this.reset(),t))this.add(e)},/**\r\n\t * \tExecuted when the value in `items` is changed.\r\n\t */itemsReferenceChanged:function(){},/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/reset:function(){return this.items=[],this.itemsReferenceChanged(),this},/*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/clear:function(){var t=this.items;this.reset();for(var e=0;e<t.length;e++)this.onItemRemoved(t[e],0);return this},/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/sort:function(t,e){return\"function\"!=typeof t?this.items.sort(function(n,r){return(n[t]<=r[t]?-1:1)*(!0===e?-1:1)}):this.items.sort(t),this},/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/findItem:function(t,e){if(!this.items)return null;for(var n=0;n<this.items.length;n++)if(!(e&&(0,$fMUO1.default).partialCompare(this.items[n],e))&&(0,$fMUO1.default).partialCompare(this.items[n],t))return this.items[n];return null},/*\r\n\t**\tReturns the container array.\r\n\t*/getItems:function(){return this.items},/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/length:function(){return this.items.length},/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/isEmpty:function(){return!this.items.length},/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/indexOf:function(t){return this.items.indexOf(t)},/*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/getAt:function(t,e=!1){return t<0&&!0==e&&(t+=this.items.length),t>=0&&t<this.items.length?this.items[t]:null},/*\r\n\t**\tReturns the first item in the collection.\r\n\t*/first:function(){return this.getAt(0)},/*\r\n\t**\tReturns the last item in the collection.\r\n\t*/last:function(){return this.getAt(-1,!0)},/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/addAt:function(t,e){if(!e||!this.onBeforeItemAdded(e))return this;if(t<0&&(t=0),t>this.items.length&&(t=this.items.length),0==t)this.items.unshift(e);else if(t==this.items.length)this.items.push(e);else{var n=this.items.splice(0,t);n.push(e),this.items=n.concat(this.items),this.itemsReferenceChanged()}return this.onItemAdded(e),this},/*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/unshift:function(t){return this.addAt(0,t)},/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/push:function(t){return this.addAt(this.items.length,t)},/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/add:function(t){return this.push(t)},/*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/removeAt:function(t,e=!1){if(t<0&&!0==e&&(t+=this.items.length),t<0||t>=this.items.length)return null;var n=this.items[t];return this.items.splice(t,1),this.onItemRemoved(n,t),n},/*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/pop:function(t){return this.removeAt(-1,!0)},/*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/shift:function(t){return this.removeAt(0)},/*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/remove:function(t){return this.removeAt(this.indexOf(t))},/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/forEach:function(t){if(this.isEmpty())return this;for(var e=0;e<this.items.length&&!1!==t(this.items[e],e,this);e++);return this},/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/forEachCall:function(t,...e){if(this.isEmpty())return this;for(var n=0;n<this.items.length&&!1!==this.items[n][t](...e);n++);return this},/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/forEachRev:function(t){if(this.isEmpty())return this;for(var e=this.items.length-1;e>=0&&!1!==t(this.items[e],e,this);e--);return this},/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/forEachRevCall:function(t,...e){if(this.isEmpty())return this;for(var n=this.items.length-1;n>=0&&!1!==this.items[n][t](...e);n--);return this},/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/onBeforeItemAdded:function(t){return!0},/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/onItemAdded:function(t){},/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/onItemRemoved:function(t){}}),$fMUO1=parcelRequire(\"fMUO1\");/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRinn.Template.functions map, each of which have their own parameters.\n*/let $d261ccdafdfe12a9$var$Template={/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/strict:!1,/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/parseTemplate:function(t,e,n,r=!1,i=1){let s=\"string\",a=null,l=0,o=0,u=\"\",f=[],h=f,c=!1;function p(t){if(\"object\"==typeof t){if(t instanceof Array)for(let e=0;e<t.length;e++)p(t[e]);else t.data=p(t.data);return t}for(let e=0;e<t.length;e++)if(\"\\\\\"==t[e]){let n=t[e+1];switch(n){case\"n\":n=\"\\n\";break;case\"r\":n=\"\\r\";break;case\"f\":n=\"\\f\";break;case\"v\":n=\"\\v\";break;case\"t\":n=\"\t\";break;case\"s\":n=\"s\";break;case'\"':n='\"';break;case\"'\":n=\"'\"}t=t.substr(0,e)+n+t.substr(e+2)}return t}function d(t,r){if(\"template\"==t?r=$d261ccdafdfe12a9$var$Template.parseTemplate(r,e,n,!0,0):\"parse\"==t?(r=$d261ccdafdfe12a9$var$Template.parseTemplate(r,e,n,!1,0),t=\"base-string\",\"array\"==(0,$fMUO1.default).typeOf(r)&&(t=r[0].type,r=r[0].data)):\"parse-trim-merge\"==t?r=$d261ccdafdfe12a9$var$Template.parseTemplate(r.trim().split(\"\\n\").map(t=>t.trim()).join(\"\\n\"),e,n,!1,0):\"parse-merge\"==t?r=$d261ccdafdfe12a9$var$Template.parseTemplate(r,e,n,!1,0):\"parse-merge-alt\"==t&&(r=$d261ccdafdfe12a9$var$Template.parseTemplate(r,\"{\",\"}\",!1,0)),\"parse-merge\"==t||\"parse-merge-alt\"==t||\"parse-trim-merge\"==t)for(let t=0;t<r.length;t++)f.push(r[t]);else f.push({type:t,data:r});c&&(h.push(f=[]),c=!1)}!0===r&&(t=t.trim(),s=\"identifier\",l=10,h.push(f=[])),t+=\"\\x00\";for(let r=0;r<t.length;r++){if(\"\\\\\"==t[r]){u+=\"\\\\\"+t[++r];continue}switch(l){case 0:\"\\x00\"==t[r]?a=\"string\":t[r]==e&&\"<\"==t[r+1]?(l=1,o=1,a=\"string\",s=\"parse-merge\"):t[r]==e&&\"@\"==t[r+1]?(l=1,o=1,a=\"string\",s=\"parse-trim-merge\",r++):t[r]==e&&\":\"==t[r+1]?(l=12,o=1,a=\"string\",s=\"string\",r++):t[r]==e?(l=1,o=1,a=\"string\",s=\"template\"):u+=t[r];break;case 1:if(\"\\x00\"==t[r])throw Error(\"Parse error: Unexpected end of template\");if(t[r]==n){if(--o<0)throw Error(\"Parse error: Unmatched \"+n);if(0==o){l=0,a=s;break}}else t[r]==e&&o++;u+=t[r];break;case 10:if(\"\\x00\"==t[r]){a=s;break}if(\".\"==t[r]){d(s,u),d(\"access\",\".\"),s=\"identifier\",u=\"\";break}if(null!=t[r].match(/[\\t\\n\\r\\f\\v ]/)){for(a=s,s=\"identifier\",c=!0;null!=t[r].match(/[\\t\\n\\r\\f\\v ]/);)r++;r--;break}if(t[r]==e&&\"<\"==t[r+1]){u&&(a=s),l=11,o=1,s=\"parse-merge\";break}else if(t[r]==e&&\"@\"==t[r+1]){u&&(a=s),l=11,o=1,s=\"parse-trim-merge\",r++;break}else if('\"'==t[r]){u&&(a=s),l=14,o=1,s=\"parse-merge\";break}else if(\"'\"==t[r]){u&&(a=s),l=15,o=1,s=\"parse-merge\";break}else if(\"`\"==t[r]){u&&(a=s),l=16,o=1,s=\"parse-merge-alt\";break}else if(t[r]==e&&\":\"==t[r+1]){u&&(a=s),l=13,o=1,s=\"string\",r++;break}else if(t[r]==e){u&&d(s,u),l=11,o=1,s=\"parse\",u=\"\"+t[r];break}\"identifier\"!=s&&(d(s,u),u=\"\",s=\"identifier\"),u+=t[r];break;case 11:if(\"\\x00\"==t[r])throw Error(\"Parse error: Unexpected end of template\");if(t[r]==n){if(--o<0)throw Error(\"Parse error: Unmatched \"+n);if(0==o&&(l=10,\"parse-merge\"==s||\"parse-merge-alt\"==s||\"parse-trim-merge\"==s))break}else t[r]==e&&o++;u+=t[r];break;case 12:if(\"\\x00\"==t[r])throw Error(\"Parse error: Unexpected end of template\");if(t[r]==n){if(--o<0)throw Error(\"Parse error: Unmatched \"+n);if(0==o){0==u.length||\"<\"==u[0]||\"[\"==u[0]||\" \"==u[0]||(u=e+u+n),l=0,a=s;break}}else t[r]==e&&o++;u+=t[r];break;case 13:if(\"\\x00\"==t[r])throw Error(\"Parse error: Unexpected end of template\");if(t[r]==n){if(--o<0)throw Error(\"Parse error: Unmatched \"+n);if(0==o){\"<\"==u[0]||\"[\"==u[0]||\" \"==u[0]||(u=e+u+n),l=10;break}}else t[r]==e&&o++;u+=t[r];break;case 14:if(\"\\x00\"==t[r])throw Error(\"Parse error: Unexpected end of template\");if('\"'==t[r]){if(--o<0)throw Error('Parse error: Unmatched \"');if(0==o&&(l=10,\"parse-merge\"==s||\"parse-merge-alt\"==s||\"parse-trim-merge\"==s))break}u+=t[r];break;case 15:if(\"\\x00\"==t[r])throw Error(\"Parse error: Unexpected end of template\");if(\"'\"==t[r]){if(--o<0)throw Error(\"Parse error: Unmatched '\");if(0==o&&(l=10,\"parse-merge\"==s||\"parse-merge-alt\"==s||\"parse-trim-merge\"==s))break}u+=t[r];break;case 16:if(\"\\x00\"==t[r])throw Error(\"Parse error: Unexpected end of template\");if(\"`\"==t[r]){if(--o<0)throw Error(\"Parse error: Unmatched `\");if(0==o&&(l=10,\"parse-merge\"==s||\"parse-merge-alt\"==s||\"parse-trim-merge\"==s))break}u+=t[r]}a&&(d(a,u),a=u=\"\")}if(!r){let t=0;for(;t<h.length;)if(\"string\"==h[t].type&&\"\"==h[t].data)h.splice(t,1);else break;for(t=h.length-1;t>0;)if(\"string\"==h[t].type&&\"\"==h[t].data)h.splice(t--,1);else break;0==h.length&&h.push({type:\"string\",data:\"\"})}return i&&p(h),h},/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/parse:function(t){return this.parseTemplate(t.trim(),\"[\",\"]\",!1)},/**\n\t**\tRemoves all static parts from a parsed template.\n\t**\n\t**\t>> array clean (array parts);\n\t*/clean:function(t){for(let e=0;e<t.length;e++)\"template\"!=t[e].type&&(t.splice(e,1),e--);return t},/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/expand:function(t,e,n=\"text\",r=\"base-string\"){let i=[];// Expand variable parts.\nif(\"var\"==r){let n=!0,r=!1,s=e,a=null,l=!0,o=\"\";for(let i=0;i<t.length&&null!=e;i++)switch(t[i].type){case\"identifier\":case\"string\":o+=t[i].data,a=null;break;case\"template\":o+=\"object\"!=typeof(a=this.expand(t[i].data,s,\"arg\",\"template\"))?a:\"\";break;case\"base-string\":o+=this.expand(t[i].data,s,\"arg\",\"base-string\"),a=null;break;case\"access\":if(a&&\"object\"==typeof a)e=a;else{for(\"\"==o&&(o=\"this\");;)if(\"!\"==o[0])o=o.substr(1),n=!1;else if(\"$\"==o[0])o=o.substr(1),r=!0;else break;if(\"this\"!=o&&null!=e){let t=e;null===(e=o in e?e[o]:null)&&l&&o in $d261ccdafdfe12a9$var$Template.functions&&(e=$d261ccdafdfe12a9$var$Template.functions[o](null,null,t)),l=!1}}o=\"\"}for(;\"\"!=o;)if(\"!\"==o[0])o=o.substr(1),n=!1;else if(\"$\"==o[0])o=o.substr(1),r=!0;else break;if(\"this\"!=o){let n=!1;if(null!=e?o in e?e=e[o]:(n=!0,e=null):n=!0,n&&1==t.length&&!0==$d261ccdafdfe12a9$var$Template.strict)throw Error(\"Expression function `\"+o+\"` not found.\")}\"string\"==typeof e&&(n&&(e=e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")),r&&(e='\"'+e+'\"')),i.push(e)}// Expand variable parts and returns a reference to it.\nif(\"varref\"==n){let n=e,r=null,i=!0,s=\"\";for(let a=0;a<t.length&&null!=e;a++)switch(t[a].type){case\"identifier\":case\"string\":s+=t[a].data,r=null;break;case\"template\":s+=\"object\"!=typeof(r=this.expand(t[a].data,n,\"arg\",\"template\"))?r:\"\";break;case\"base-string\":s+=this.expand(t[a].data,n,\"arg\",\"base-string\"),r=null;break;case\"access\":if(r&&\"object\"==typeof r)e=r;else{for(\"\"==s&&(s=\"this\");;)if(\"!\"==s[0])s=s.substr(1);else if(\"$\"==s[0])s=s.substr(1);else break;if(\"this\"!=s&&null!=e){let t=e;null===(e=s in e?e[s]:null)&&i&&s in $d261ccdafdfe12a9$var$Template.functions&&(e=$d261ccdafdfe12a9$var$Template.functions[s](null,null,t)),i=!1}}s=\"\"}for(;\"\"!=s;)if(\"!\"==s[0])s=s.substr(1);else if(\"$\"==s[0])s=s.substr(1);else break;return\"this\"!=s?[e,s]:null}// Expand function parts.\nif(\"fn\"==r){var s=[];if(s.push($d261ccdafdfe12a9$var$Template.expand(t[0],e,\"text\",\"base-string\")),\"_\"+s[0] in $d261ccdafdfe12a9$var$Template.functions&&(s[0]=\"_\"+s[0]),!(s[0]in $d261ccdafdfe12a9$var$Template.functions)){if(!0==$d261ccdafdfe12a9$var$Template.strict)throw Error(\"Expression function `\"+s[0]+\"` not found.\");return`(Unknown: ${s[0]})`}if(\"_\"==s[0][0])return $d261ccdafdfe12a9$var$Template.functions[s[0]](t,e);for(let n=1;n<t.length;n++)s.push($d261ccdafdfe12a9$var$Template.expand(t[n],e,\"arg\",\"base-string\"));i.push($d261ccdafdfe12a9$var$Template.functions[s[0]](s,t,e))}// Template mode.\nif(\"template\"==r){if(1==t.length){if(1==t[0].length&&\"string\"==t[0][0].type)return t[0][0].data;if(1==t[0].length&&\"identifier\"==t[0][0].type){let r=t[0][0].data;if(r in $d261ccdafdfe12a9$var$Template.functions||\"_\"+r in $d261ccdafdfe12a9$var$Template.functions)return $d261ccdafdfe12a9$var$Template.expand(t,e,n,\"fn\")}return $d261ccdafdfe12a9$var$Template.expand(t[0],e,n,\"var\")}return $d261ccdafdfe12a9$var$Template.expand(t,e,n,\"fn\")}// Expand parts.\nif(\"base-string\"==r){let r=-1;for(let s of t){let a=null;switch(r++,s.type){case\"template\":a=$d261ccdafdfe12a9$var$Template.expand(s.data,e,n,\"template\");break;case\"string\":case\"identifier\":a=s.data;break;case\"base-string\":a=$d261ccdafdfe12a9$var$Template.expand(s.data,e,n,\"base-string\")}\"void\"!=n&&(\"last\"!=n||r==t.length-1)&&i.push(a)}}// Return types for direct objects.\nif(\"obj\"==n)return i;if(\"last\"==n)return\"Rose\\\\Arry\"==typeOf(i)&&(i=i[0]),i;// When the output is not really needed.\nif(\"void\"==n)return null;// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\nif(\"arg\"==n)return\"array\"==(0,$fMUO1.default).typeOf(i)?1!=i.length?i.join(\"\"):i[0]:i;if(\"text\"==n&&\"array\"==(0,$fMUO1.default).typeOf(i)){let t=e=>null!=e&&\"object\"==typeof e?\"map\"in e?e.map(t).join(\"\"):\"join\"in e?e.join(\"\"):e.toString():e;i=i.map(t).join(\"\")}return i},/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/compile:function(t){return t=$d261ccdafdfe12a9$var$Template.parse(t),function(e=null,n=\"text\"){return $d261ccdafdfe12a9$var$Template.expand(t,e||{},n)}},/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/eval:function(t,e=null,n=\"text\"){return t=$d261ccdafdfe12a9$var$Template.parse(t),$d261ccdafdfe12a9$var$Template.expand(t,e||{},n)},/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/value:function(t,e=null){return\"array\"!=(0,$fMUO1.default).typeOf(t)?t:$d261ccdafdfe12a9$var$Template.expand(t,e||{},\"arg\")},/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/register:function(t,e){$d261ccdafdfe12a9$var$Template.functions[t]=e},/**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/call:function(t,e,n=null){return t in $d261ccdafdfe12a9$var$Template.functions?$d261ccdafdfe12a9$var$Template.functions[t](e,null,n):null},/**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/getNamedValues:function(t,e,n=1,r=!0){let i={},s=0;for(;n<t.length;n+=2){let a=$d261ccdafdfe12a9$var$Template.expand(t[n],e,\"arg\");s||(s=a.startsWith(\":\")?1:a.endsWith(\":\")?2:3),1==s?a=a.substr(1):2==s&&(a=a.substr(0,a.length-1)),r?i[a]=$d261ccdafdfe12a9$var$Template.expand(t[n+1],e,\"arg\"):i[a]=t[n+1]}return i}};/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/$d261ccdafdfe12a9$var$Template.functions={/**\n\t**\tExpression functions.\n\t*/global:function(t){return globalThis},null:function(t){return null},true:function(t){return!0},false:function(t){return!1},len:function(t){return t[1].toString().length},int:function(t){return~~t[1]},str:function(t){return t[1].toString()},float:function(t){return parseFloat(t[1])},chr:function(t){return String.fromCharCode(t[1])},ord:function(t){return t[1].toString().charCodeAt(0)},not:function(t){return!t[1]},neg:function(t){return-t[1]},abs:function(t){return Math.abs(t[1])},and:function(t){for(let e=1;e<t.length;e++)if(!t[e])return!1;return!0},or:function(t){for(let e=1;e<t.length;e++)if(~~t[e])return!0;return!1},eq:function(t){return t[1]==t[2]},ne:function(t){return t[1]!=t[2]},lt:function(t){return t[1]<t[2]},le:function(t){return t[1]<=t[2]},gt:function(t){return t[1]>t[2]},ge:function(t){return t[1]>=t[2]},isnotnull:function(t){return!!t[1]},isnull:function(t){return!t[1]},iszero:function(t){return 0==parseInt(t[1])},\"eq?\":function(t){return t[1]==t[2]},\"ne?\":function(t){return t[1]!=t[2]},\"lt?\":function(t){return t[1]<t[2]},\"le?\":function(t){return t[1]<=t[2]},\"gt?\":function(t){return t[1]>t[2]},\"ge?\":function(t){return t[1]>=t[2]},\"notnull?\":function(t){return!!t[1]},\"null?\":function(t){return!t[1]},\"zero?\":function(t){return 0==parseInt(t[1])},typeof:function(t){return(0,$fMUO1.default).typeOf(t[1])},\"*\":function(t){let e=t[1];for(let n=2;n<t.length;n++)e*=t[n];return e},\"/\":function(t){let e=t[1];for(let n=2;n<t.length;n++)e/=t[n];return e},\"+\":function(t){let e=t[1];for(let n=2;n<t.length;n++)e-=-t[n];return e},\"-\":function(t){let e=t[1];for(let n=2;n<t.length;n++)e-=t[n];return e},mul:function(t){let e=t[1];for(let n=2;n<t.length;n++)e*=t[n];return e},div:function(t){let e=t[1];for(let n=2;n<t.length;n++)e/=t[n];return e},sum:function(t){let e=t[1];for(let n=2;n<t.length;n++)e-=-t[n];return e},sub:function(t){let e=t[1];for(let n=2;n<t.length;n++)e-=t[n];return e},mod:function(t){let e=t[1];for(let n=2;n<t.length;n++)e%=t[n];return e},pow:function(t){let e=t[1];for(let n=2;n<t.length;n++)e=Math.pow(e,t[n]);return e},/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tdump <expr>\n\t*/dump:function(t){return JSON.stringify(t[1])},/**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/_set:function(t,e){for(let n=1;n+1<t.length;n+=2){let r=$d261ccdafdfe12a9$var$Template.value(t[n+1],e);if(t[n].length>1){let i=$d261ccdafdfe12a9$var$Template.expand(t[n],e,\"varref\");null!=i&&(i[0][i[1]]=r)}else e[$d261ccdafdfe12a9$var$Template.value(t[n],e)]=r}return\"\"},/**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/_unset:function(t,e){for(let n=1;n<t.length;n++)if(t[n].length>1){let r=$d261ccdafdfe12a9$var$Template.expand(t[n],e,\"varref\");null!=r&&delete r[0][r[1]]}else delete e[$d261ccdafdfe12a9$var$Template.value(t[n],e)];return null},/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/trim:function(t){return t[1]?\"object\"==typeof t[1]?t[1].map(t=>t.trim()):t[1].trim():\"\"},/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/upper:function(t){return t[1]?\"object\"==typeof t[1]?t[1].map(t=>t.toUpperCase()):t[1].toUpperCase():\"\"},/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/lower:function(t){return t[1]?\"object\"==typeof t[1]?t[1].map(t=>t.toLowerCase()):t[1].toLowerCase():\"\"},/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/substr:function(t){let e=t[t.length-1].toString(),n=0,r=null;return 4==t.length?(n=~~t[1],r=~~t[2]):(n=~~t[1],r=null),n<0&&(n+=e.length),r<0&&(r+=e.length),null===r&&(r=e.length-n),e.substr(n,r)},/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/replace:function(t){return t[3].split(t[1]).join(t[2])},/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/nl2br:function(t){return t[1]?\"object\"==typeof t[1]?t[1].map(t=>t.replace(/\\n/g,\"<br/>\")):t[1].replace(/\\n/g,\"<br/>\"):\"\"},/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\"%\":function(t){t.shift();var e=t.shift();let n=\"\";for(let r=0;r<t.length;r++)if(\"array\"==(0,$fMUO1.default).typeOf(t[r])){n+=`<${e}>`;for(let e=0;e<t[r].length;e++)n+=t[r][e];n+=`</${e}>`}else n+=`<${e}>${t[r]}</${e}>`;return n},/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\"%%\":function(t){t.shift();var e=t.shift();let n=\"\",r=\"\";for(let e=0;e<t.length;e+=2)e+1<t.length?n+=` ${t[e]}=\"${t[e+1]}\"`:r=t[e];return r?`<${e}${n}>${r}</${e}>`:`<${e}${n}/>`},/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/join:function(t){return t[2]&&\"array\"==(0,$fMUO1.default).typeOf(t[2])?t[2].join(t[1]):\"\"},/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/split:function(t){return t[2]&&\"string\"==typeof t[2]?t[2].split(t[1]):[]},/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/keys:function(t){return t[1]&&\"object\"==typeof t[1]?Object.keys(t[1]):[]},/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/values:function(t){return t[1]&&\"object\"==typeof t[1]?Object.values(t[1]):[]},/**\n\t**\tConstructs a string obtained by concatenating the expanded template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/_each:function(t,e){let n=$d261ccdafdfe12a9$var$Template.expand(t[1],e,\"arg\"),r=$d261ccdafdfe12a9$var$Template.expand(t[2],e,\"arg\"),i=\"\",s=0;if(!r)return i;for(let a in r)e[n]=r[a],e[n+\"##\"]=s++,e[n+\"#\"]=a,i+=$d261ccdafdfe12a9$var$Template.expand(t[3],e,\"text\");return delete e[n],delete e[n+\"##\"],delete e[n+\"#\"],i},/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/_foreach:function(t,e){let n=$d261ccdafdfe12a9$var$Template.expand(t[1],e,\"arg\"),r=$d261ccdafdfe12a9$var$Template.expand(t[2],e,\"arg\"),i=0;if(!r)return null;for(let s in r)e[n]=r[s],e[n+\"##\"]=i++,e[n+\"#\"]=s,$d261ccdafdfe12a9$var$Template.expand(t[3],e,\"text\");return delete e[n],delete e[n+\"##\"],delete e[n+\"#\"],null},/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\"_?\":function(t,e){return $d261ccdafdfe12a9$var$Template.expand(t[1],e,\"arg\")?$d261ccdafdfe12a9$var$Template.expand(t[2],e,\"arg\"):t.length>3?$d261ccdafdfe12a9$var$Template.expand(t[3],e,\"arg\"):\"\"},/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\"_??\":function(t,e){return $d261ccdafdfe12a9$var$Template.expand(t[1],e,\"arg\")||$d261ccdafdfe12a9$var$Template.expand(t[2],e,\"arg\")},/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/_if:function(t,e){for(let n=0;n<t.length;n+=3){if(\"else\"==$d261ccdafdfe12a9$var$Template.expand(t[n],e,\"arg\"))return $d261ccdafdfe12a9$var$Template.expand(t[n+1],e,\"text\");if($d261ccdafdfe12a9$var$Template.expand(t[n+1],e,\"arg\"))return $d261ccdafdfe12a9$var$Template.expand(t[n+2],e,\"text\")}return\"\"},/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/_switch:function(t,e){let n=$d261ccdafdfe12a9$var$Template.expand(t[1],e,\"arg\");for(let r=2;r<t.length;r+=2){let i=$d261ccdafdfe12a9$var$Template.expand(t[r],e,\"arg\");if(i==n||\"default\"==i)return $d261ccdafdfe12a9$var$Template.expand(t[r+1],e,\"text\")}return\"\"},/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/_break:function(t,e){throw Error(\"EXC_BREAK\")},/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/_continue:function(t,e){throw Error(\"EXC_CONTINUE\")},/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/_repeat:function(t,e){if(t.length<3||(1&t.length)!=1)return\"(`repeat`: Wrong number of parameters)\";let n=$d261ccdafdfe12a9$var$Template.value(t[1],e),r=null,i=0,s=null,a=null;for(let n=2;n<t.length-1;n+=2)switch($d261ccdafdfe12a9$var$Template.value(t[n],e).toLowerCase()){case\"from\":i=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e));break;case\"to\":s=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e));break;case\"count\":r=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e));break;case\"step\":a=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e))}let l=t[t.length-1],o=[];if(null!==s){if(null===a&&(a=i>s?-1:1),a<0)for(let t=i;t>=s;t+=a)try{e[n]=t,o.push($d261ccdafdfe12a9$var$Template.value(l,e))}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}else for(let t=i;t<=s;t+=a)try{e[n]=t,o.push($d261ccdafdfe12a9$var$Template.value(l,e))}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}}else if(null!==r){null===a&&(a=1);for(let t=i;r>0;r--,t+=a)try{e[n]=t,o.push($d261ccdafdfe12a9$var$Template.value(l,e))}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}}else{null===a&&(a=1);for(let t=i;;t+=a)try{e[n]=t,o.push($d261ccdafdfe12a9$var$Template.value(l,e))}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}}return delete e[n],o},/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/_for:function(t,e){if(t.length<3||(1&t.length)!=1)return\"(`for`: Wrong number of parameters)\";let n=$d261ccdafdfe12a9$var$Template.value(t[1],e),r=null,i=0;to=null;let s=null;for(let n=2;n<t.length-1;n+=2)switch((value=$d261ccdafdfe12a9$var$Template.value(t[n],e)).toLowerCase()){case\"from\":i=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e));break;case\"to\":to=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e));break;case\"count\":r=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e));break;case\"step\":s=parseFloat($d261ccdafdfe12a9$var$Template.value(t[n+1],e))}let a=t[t.length-1];if(null!==to){if(null===s&&(s=i>to?-1:1),s<0)for(let t=i;t>=to;t+=s)try{e[n]=t,$d261ccdafdfe12a9$var$Template.value(a,e)}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}else for(let t=i;t<=to;t+=s)try{e[n]=t,$d261ccdafdfe12a9$var$Template.value(a,e)}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}}else if(null!==r){null===s&&(s=1);for(let t=i;r>0;r--,t+=s)try{e[n]=t,$d261ccdafdfe12a9$var$Template.value(a,e)}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}}else{null===s&&(s=1);for(let t=i;;t+=s)try{e[n]=t,$d261ccdafdfe12a9$var$Template.value(a,e)}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}}return delete e[n],null},/**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/_loop:function(t,e){if(t.length<2)return\"(`loop`: Wrong number of parameters)\";let n=t[1];for(;;)try{$d261ccdafdfe12a9$var$Template.value(n,e)}catch(e){let t=e.message;if(\"EXC_BREAK\"==t)break;if(\"EXC_CONTINUE\"==t)continue;throw e}return null},/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/_echo:function(t,e){let n=\"\";for(let r=1;r<t.length;r++)n+=$d261ccdafdfe12a9$var$Template.expand(t[r],e,\"arg\");return console.log(n),\"\"},/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\"_#\":function(t,e){let n=[];for(let r=1;r<t.length;r++)n.push($d261ccdafdfe12a9$var$Template.expand(t[r],e,\"arg\"));return n},/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\"_##\":function(t,e){let n=[];for(let e=1;e<t.length;e++)n.push(t[e]);return n},/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/\"_&\":function(t,e){return $d261ccdafdfe12a9$var$Template.getNamedValues(t,e,1,!0)},/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/\"_&&\":function(t,e){return $d261ccdafdfe12a9$var$Template.getNamedValues(t,e,1,!1)},/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/contains:function(t,e,n){let r=t[1];if(\"object\"!=typeof r)return n.err=\"Argument is not a Map\",!1;let i=\"\";for(let e=2;e<t.length;e++)t[e]in r||(i+=\", \"+t[e]);return\"\"==i||(n.err=i.substr(1),!1)},/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/has:function(t,e,n){let r=t[2];return\"object\"==(0,$fMUO1.default).typeOf(r)&&t[1]in r},/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/_map:function(t,e){let n=$d261ccdafdfe12a9$var$Template.expand(t[1],e,\"arg\"),r=$d261ccdafdfe12a9$var$Template.expand(t[2],e,\"arg\");if(!r)return r;let i=\"array\"==(0,$fMUO1.default).typeOf(r),s=i?[]:{},a=0;for(let l in r)e[n]=r[l],e[n+\"##\"]=a++,e[n+\"#\"]=l,i?s.push($d261ccdafdfe12a9$var$Template.expand(t[3],e,\"arg\")):s[l]=$d261ccdafdfe12a9$var$Template.expand(t[3],e,\"arg\");return delete e[n],delete e[n+\"##\"],delete e[n+\"#\"],s},/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/_filter:function(t,e){let n=$d261ccdafdfe12a9$var$Template.expand(t[1],e,\"arg\"),r=$d261ccdafdfe12a9$var$Template.expand(t[2],e,\"arg\");if(!r)return r;let i=\"array\"==(0,$fMUO1.default).typeOf(r),s=i?[]:{},a=0;for(let l in r)e[n]=r[l],e[n+\"##\"]=a++,e[n+\"#\"]=l,~~$d261ccdafdfe12a9$var$Template.expand(t[3],e,\"arg\")&&(i?s.push(r[l]):s[l]=r[l]);return delete e[n],delete e[n+\"##\"],delete e[n+\"#\"],s},/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/expand:function(t,e,n){return $d261ccdafdfe12a9$var$Template.expand($d261ccdafdfe12a9$var$Template.parseTemplate(t[1],\"{\",\"}\"),3==t.length?t[2]:n)},/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/_call:function(t,e){let n=$d261ccdafdfe12a9$var$Template.expand(t[1],e,\"varref\");if(!n||\"function\"!=typeof n[0][n[1]])throw Error(\"Expression is not a function: \"+$d261ccdafdfe12a9$var$Template.expand(t[1],e,\"obj\").map(t=>null==t?\".\":t).join(\"\"));let r=[];for(let n=2;n<t.length;n++)r.push($d261ccdafdfe12a9$var$Template.value(t[n],e));return n[0][n[1]](...r)}};var $d261ccdafdfe12a9$export$2e2bcd8739ae039=$d261ccdafdfe12a9$var$Template;let $9ffb7151b8b2d038$export$eefcfe56efaaa57d=$fMUO1.default,$9ffb7151b8b2d038$export$4c85e640eb41c31b=$2394d727dfd6a212$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$d61e24a684f9e51=$13eda5a5dec8010f$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$ec8b666c5fe2c75a=$c43adaf9cb6d6dd3$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$a1edc412be3e1841=$4dfa0622e14576ea$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$59eced47f477f85a=$0890bed8a163f087$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$19342e026b58ebb7=$2710795e2347ba2a$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$3a9581c9ade29768=$32651d5f38a8a64c$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$fb8073518f34e6ec=$2bcce06113365814$export$2e2bcd8739ae039,$9ffb7151b8b2d038$export$14416b8d99d47caa=$d261ccdafdfe12a9$export$2e2bcd8739ae039;export{$9ffb7151b8b2d038$export$eefcfe56efaaa57d as Rinn,$9ffb7151b8b2d038$export$4c85e640eb41c31b as Class,$9ffb7151b8b2d038$export$d61e24a684f9e51 as Event,$9ffb7151b8b2d038$export$ec8b666c5fe2c75a as EventDispatcher,$9ffb7151b8b2d038$export$a1edc412be3e1841 as Model,$9ffb7151b8b2d038$export$59eced47f477f85a as ModelList,$9ffb7151b8b2d038$export$19342e026b58ebb7 as Schema,$9ffb7151b8b2d038$export$3a9581c9ade29768 as Flattenable,$9ffb7151b8b2d038$export$fb8073518f34e6ec as Collection,$9ffb7151b8b2d038$export$14416b8d99d47caa as Template};//# sourceMappingURL=rinn.m.js.map\n\n//# sourceMappingURL=rinn.m.js.map\n","function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire25d2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire25d2\"] = parcelRequire;\n}\nparcelRequire.register(\"4VREF\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $39761b0dd175036e$export$2e2bcd8739ae039);\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n\nvar $cAEYe = parcelRequire(\"cAEYe\");\nvar /**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/ $39761b0dd175036e$export$2e2bcd8739ae039 = {\n    /**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/ _getref: function(value, obj) {\n        if (typeof value == \"string\") {\n            if (value.substr(0, 1) == \"#\") value = obj.get(value.substr(1));\n            else if (value.substr(0, 1) == \"@\") value = obj[value.substr(1)];\n            if (typeof value == \"string\") return eval(value);\n            return value;\n        } else return value;\n    },\n    /**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/ type: function(model11, ctval11, name11, value11) {\n        switch(ctval11){\n            case \"int\":\n                value11 = parseInt(value11);\n                if (isNaN(value11)) throw new Error(ctval11);\n                break;\n            case \"float\":\n                value11 = parseFloat(value11);\n                if (isNaN(value11)) throw new Error(ctval11);\n                break;\n            case \"string\":\n                value11 = value11 === null || value11 === undefined ? \"\" : value11.toString();\n                break;\n            case \"bit\":\n                if (value11 === true || value11 === false) {\n                    value11 = value11 ? 1 : 0;\n                    break;\n                }\n                value11 = parseInt(value11);\n                if (isNaN(value11)) throw new Error(ctval11);\n                value11 = value11 ? 1 : 0;\n                break;\n            case \"array\":\n                if ((0, $fMUO1.default).typeOf(value11) == \"array\") break;\n                if (value11 === null || value11 === undefined) {\n                    value11 = [];\n                    break;\n                }\n                throw new Error(ctval11);\n            case \"bool\":\n                if (value11 === \"true\" || value11 === true) {\n                    value11 = true;\n                    break;\n                }\n                if (value11 === \"false\" || value11 === false) {\n                    value11 = false;\n                    break;\n                }\n                throw new Error(ctval11);\n        }\n        return value11;\n    },\n    /**\n\t**\tVerifies that the field is of the specified model type.\n\t*/ model: function(model11, ctval11, name11, value11) {\n        var mclass11 = this._getref(ctval11, model11);\n        if (!mclass11) throw new Error(ctval11);\n        if (!value11) return new mclass11();\n        return mclass11.ensure(value11);\n    },\n    /**\n\t**\tVerifies that the field is of the specified class.\n\t*/ cls: function(model11, ctval11, name11, value11) {\n        var mclass11 = this._getref(ctval11, model11);\n        if (!value11) return new mclass11();\n        return (0, $fMUO1.default).ensureTypeOf(mclass11, value11);\n    },\n    /**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/ arrayof: function(model11, ctval11, name11, value11) {\n        var mclass11 = this._getref(ctval11, model11);\n        if (!value11) value11 = [];\n        if (!mclass11 || (0, $fMUO1.default).typeOf(value11) != \"array\") throw new Error(ctval11);\n        for(var i11 = 0; i11 < value11.length; i11++)value11[i11] = (0, $fMUO1.default).ensureTypeOf(mclass11, value11[i11]);\n        return value11;\n    },\n    /**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/ arraynull: function(model11, ctval11, name11, value11) {\n        var remove11 = false;\n        if ((0, $fMUO1.default).typeOf(ctval11) == \"object\") {\n            if (ctval11.remove) remove11 = ctval11.remove;\n            ctval11 = ctval11.value;\n        }\n        if (ctval11) return value11;\n        if ((0, $fMUO1.default).typeOf(value11) != \"array\") throw new Error(ctval11);\n        for(var i11 = 0; i11 < value11.length; i11++)if (value11[i11] == null) {\n            if (remove11) value11.splice(i11--, 1);\n            else throw new Error(ctval11);\n        }\n        return value11;\n    },\n    /**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/ arraycompliant: function(model11, ctval11, name11, value11) {\n        var remove11 = false;\n        if ((0, $fMUO1.default).typeOf(ctval11) == \"object\") {\n            if (ctval11.remove) remove11 = ctval11.remove;\n            ctval11 = ctval11.value;\n        }\n        if (!ctval11) return value11;\n        if ((0, $fMUO1.default).typeOf(value11) != \"array\") throw new Error(ctval11);\n        for(var i11 = 0; i11 < value11.length; i11++){\n            if (value11[i11] == null) continue;\n            if (!value11[i11].isCompliant()) {\n                if (remove11) value11.splice(i11--, 1);\n                else throw new Error(ctval11);\n            }\n        }\n        return value11;\n    },\n    /**\n\t**\tVerifies the presense of the field.\n\t*/ required: function(model11, ctval11, name11, value11) {\n        if (value11 === null || value11 === undefined) throw new Error(ctval11 ? \"\" : \"null\");\n        switch((0, $fMUO1.default).typeOf(value11)){\n            case \"array\":\n                if (value11.length == 0) throw new Error(ctval11 ? \"\" : \"null\");\n                break;\n            default:\n                if (value11.toString().length == 0) throw new Error(ctval11 ? \"\" : \"null\");\n                break;\n        }\n        return value11;\n    },\n    /**\n\t**\tVerifies the minimum length of the field.\n\t*/ minlen: function(model11, ctval11, name11, value11) {\n        if (value11.toString().length < ctval11) throw new Error(ctval11);\n        return value11;\n    },\n    /**\n\t**\tVerifies the maximum length of the field.\n\t*/ maxlen: function(model11, ctval11, name11, value11) {\n        if (value11.toString().length > ctval11) throw new Error(ctval11);\n        return value11;\n    },\n    /**\n\t**\tVerifies the minimum value of the field.\n\t*/ minval: function(model11, ctval11, name11, value11) {\n        if (parseFloat(value11) < ctval11) throw new Error(ctval11);\n        return value11;\n    },\n    /**\n\t**\tVerifies the maximum value of the field.\n\t*/ maxval: function(model11, ctval11, name11, value11) {\n        if (parseFloat(value11) > ctval11) throw new Error(ctval11);\n        return value11;\n    },\n    /**\n\t**\tVerifies the minimum number of items in the array.\n\t*/ mincount: function(model11, ctval11, name11, value11) {\n        if ((0, $fMUO1.default).typeOf(value11) != \"array\" || value11.length < ctval11) throw new Error(ctval11);\n        return value11;\n    },\n    /**\n\t**\tVerifies the maximum number of items in the array.\n\t*/ maxcount: function(model11, ctval11, name11, value11) {\n        if ((0, $fMUO1.default).typeOf(value11) != \"array\" || value11.length > ctval11) throw new Error(ctval11);\n        return value11;\n    },\n    /**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/ pattern: function(model11, ctval11, name11, value11) {\n        if (!(0, $cAEYe.default)[ctval11].test(value11.toString())) throw new Error(ctval11);\n        return value11;\n    },\n    /**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/ inset: function(model11, ctval11, name11, value11) {\n        if ((0, $fMUO1.default).typeOf(ctval11) != \"array\") {\n            if (!new RegExp(\"^(\" + ctval11.toString() + \")$\").test(value11.toString())) throw new Error(ctval11);\n            return value11;\n        }\n        if (ctval11.indexOf(value11.toString()) == -1) throw new Error(ctval11.join(\"|\"));\n        return value11;\n    },\n    /**\n\t**\tSets the field to upper case.\n\t*/ upper: function(model11, ctval11, name11, value11) {\n        return ctval11 ? value11.toString().toUpperCase() : value11;\n    },\n    /**\n\t**\tSets the field to lower case.\n\t*/ lower: function(model11, ctval11, name11, value11) {\n        return ctval11 ? value11.toString().toLowerCase() : value11;\n    }\n};\n\n});\nparcelRequire.register(\"fMUO1\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $b7e7672d417be9d7$export$2e2bcd8739ae039);\nconst $b7e7672d417be9d7$var$Rinn = {};\nvar $b7e7672d417be9d7$export$2e2bcd8739ae039 = $b7e7672d417be9d7$var$Rinn;\n/*\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/ $b7e7672d417be9d7$var$Rinn.invokeLater = function(fn) {\n    if (fn) setTimeout(function() {\n        fn();\n    }, 10);\n};\n/*\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/ $b7e7672d417be9d7$var$Rinn.wait = function(millis) {\n    return new Promise(function(resolve, reject) {\n        setTimeout(resolve, millis);\n    });\n};\n/*\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/ $b7e7672d417be9d7$var$Rinn.typeOf = function(o) {\n    if (o instanceof Array) return \"array\";\n    if (o === null) return \"null\";\n    return (typeof o).toString().toLowerCase();\n};\n/*\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/ $b7e7672d417be9d7$var$Rinn.isArrayOrObject = function(o) {\n    switch($b7e7672d417be9d7$var$Rinn.typeOf(o)){\n        case \"array\":\n        case \"object\":\n            return true;\n    }\n    return false;\n};\n/*\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/ $b7e7672d417be9d7$var$Rinn.clone = function(elem) {\n    let o = $b7e7672d417be9d7$var$Rinn.typeOf(elem);\n    if (o === \"array\") {\n        o = [];\n        for(let i = 0; i < elem.length; i++)o.push($b7e7672d417be9d7$var$Rinn.clone(elem[i]));\n    } else if (o === \"object\") {\n        if (\"clone\" in elem && typeof elem.clone === \"function\") return elem.clone();\n        o = {};\n        for(let i in elem)o[i] = $b7e7672d417be9d7$var$Rinn.clone(elem[i]);\n    } else o = elem;\n    return o;\n};\n/*\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/ $b7e7672d417be9d7$var$Rinn.merge = function(output, ...objs) {\n    if ($b7e7672d417be9d7$var$Rinn.typeOf(output) == \"array\") for(let i = 0; i < objs.length; i++){\n        let arr = objs[i];\n        if ($b7e7672d417be9d7$var$Rinn.typeOf(arr) != \"array\") output.push(arr);\n        else for(let j = 0; j < arr.length; j++)output.push($b7e7672d417be9d7$var$Rinn.clone(arr[j]));\n    }\n    else if ($b7e7672d417be9d7$var$Rinn.typeOf(output) == \"object\") for(let i = 0; i < objs.length; i++){\n        let obj = objs[i];\n        if ($b7e7672d417be9d7$var$Rinn.typeOf(obj) != \"object\") continue;\n        for(let field in obj)if ($b7e7672d417be9d7$var$Rinn.isArrayOrObject(obj[field])) {\n            if (field in output) $b7e7672d417be9d7$var$Rinn.merge(output[field], obj[field]);\n            else output[field] = $b7e7672d417be9d7$var$Rinn.clone(obj[field]);\n        } else output[field] = obj[field];\n    }\n    return output;\n};\n/*\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/ $b7e7672d417be9d7$var$Rinn.override = function(output, ...objs) {\n    for(let i = 0; i < objs.length; i++)for(let j in objs[i])output[j] = objs[i][j];\n    return output;\n};\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/ $b7e7672d417be9d7$var$Rinn.partialCompare = function(full, partial) {\n    if (full == null || partial == null) return false;\n    if (full === partial) return true;\n    for(var i in partial){\n        if (full[i] != partial[i]) return false;\n    }\n    return true;\n};\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/ $b7e7672d417be9d7$var$Rinn.arrayFind = function(arr, o, getObject) {\n    for(var i = 0; arr && i < arr.length; i++){\n        if (this.partialCompare(arr[i], o)) return getObject ? arr[i] : i;\n    }\n    return getObject ? null : false;\n};\n/*\r\n**\tVerifies if the specified object is of class `m`, returns boolean.\r\n**\r\n**\t>> bool isTypeOf (object obj, class _class);\r\n*/ $b7e7672d417be9d7$var$Rinn.isInstanceOf = function(obj, _class) {\n    if (!obj || !_class || typeof obj !== \"object\") return false;\n    if (obj instanceof _class) return true;\n    if (\"isInstanceOf\" in obj) return obj.isInstanceOf(_class);\n    return false;\n};\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/ $b7e7672d417be9d7$var$Rinn.indexOf = function(container, value, forceArray = false) {\n    if (forceArray) {\n        for(let i = 0; i < container.length; i++){\n            if (container[i] === value) return i;\n        }\n        return -1;\n    }\n    for(let i in container){\n        if (container[i] === value) return i;\n    }\n    return -1;\n};\n/*\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/ $b7e7672d417be9d7$var$Rinn.escape = function(str) {\n    return (str + \"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n};\n/*\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/ $b7e7672d417be9d7$var$Rinn.ensureTypeOf = function(m, o) {\n    if (!o || !m || o instanceof m) return o;\n    if (o.isInstanceOf && m.prototype.className) {\n        if (o.isInstanceOf(m.prototype.className)) return o;\n    }\n    return new m(o);\n};\n/*\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/ $b7e7672d417be9d7$var$Rinn.serialize = function(o) {\n    return JSON.stringify(o);\n};\n/*\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/ $b7e7672d417be9d7$var$Rinn.deserialize = function(s) {\n    return JSON.parse(s);\n};\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/ $b7e7672d417be9d7$var$Rinn.hookAppend = function(object, functionName, newFunction, conditional = true) {\n    const oldFunction = object[functionName];\n    if (conditional) object[functionName] = function(...args) {\n        if (oldFunction.apply(this, args) !== false) return newFunction.apply(this, args);\n    };\n    else object[functionName] = function(...args) {\n        oldFunction.apply(this, args);\n        return newFunction.apply(this, args);\n    };\n    return {\n        unhook: function() {\n            object[functionName] = oldFunction;\n        }\n    };\n};\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/ $b7e7672d417be9d7$var$Rinn.hookPrepend = function(object, functionName, newFunction, conditional = true) {\n    const oldFunction = object[functionName];\n    if (conditional) object[functionName] = function(...args) {\n        if (newFunction.apply(this, args) !== false) return oldFunction.apply(this, args);\n    };\n    else object[functionName] = function(...args) {\n        newFunction.apply(this, args);\n        return oldFunction.apply(this, args);\n    };\n    return {\n        unhook: function() {\n            object[functionName] = oldFunction;\n        }\n    };\n};\n\n});\n\nparcelRequire.register(\"cAEYe\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $92a8a0aff23e2e33$export$2e2bcd8739ae039);\n/**\n**\tCommon regular expressions for pattern validation.\n*/ var $92a8a0aff23e2e33$export$2e2bcd8739ae039 = {\n    email: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n    url: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n    urlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n    name: /^[-A-Za-z0-9_.]+$/,\n    uname: /^['\\pL\\pN ]+$/,\n    text: /^[^&<>{}]*$/,\n    utext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n\n});\n\n\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n/**\r\n * Base class used to create other classes with complex prototype based multiple inheritance while at the\r\n * same time avoiding the prototype chain for faster access. Supports calling parent class methods.\r\n */ //!class Class\nconst $2394d727dfd6a212$var$Class = function() {};\n/**\r\n * Reference to the class itself.\r\n */ $2394d727dfd6a212$var$Class._class = $2394d727dfd6a212$var$Class;\n/**\r\n * Contains the methods of each of the super classes.\r\n */ $2394d727dfd6a212$var$Class._super = {};\n/**\r\n * Name of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n * !readonly string className;\r\n */ $2394d727dfd6a212$var$Class.prototype.className = \"Class\";\n/**\r\n * Class constructor, should initialize the instance. Invoked when the `new` keyword is used with the class.\r\n * !constructor();\r\n */ $2394d727dfd6a212$var$Class.prototype.__ctor = function() {};\n/**\r\n * Class destructor, should clear the instance and release any used resources, invoked when the global `dispose` function is called with an instance as parameter.\r\n * !__dtor() : void;\r\n */ $2394d727dfd6a212$var$Class.prototype.__dtor = function() {};\n/**\r\n * Returns true if the object is an instance of the specified class, the parameter can be a class name (string), a constructor (function) or\r\n * a class instance (object), in any cases the appropriate checks will be done.\r\n * !isInstanceOf (className: string|function|object) : boolean;\r\n */ $2394d727dfd6a212$var$Class.prototype.isInstanceOf = function(className) {\n    if (className === null) return false;\n    if (typeof className === \"function\") className = className.prototype.className;\n    else if (typeof className !== \"string\") className = className.__proto__.className;\n    return this.className === className ? true : this._super.hasOwnProperty(className);\n};\n/**\r\n * Returns true if the given object is an instance of the specified class, the parameter can be a class name (string), a constructor (function)\r\n * or a class instance (object), in any cases the appropriate checks will be done.\r\n * !instanceOf (object: object, className: string|function|object) : boolean;\r\n */ $2394d727dfd6a212$var$Class.instanceOf = function(object, className) {\n    if (object === null || className === null) return false;\n    return object.isInstanceOf(className);\n};\n/**\r\n * Internal method to ensure the _super field of an instance has all functions properly bound to the instance.\r\n */ $2394d727dfd6a212$var$Class.prototype._initSuperRefs = function() {\n    let _super = this.constructor._super;\n    let _newSuper = {};\n    const self = this;\n    for(let i in _super){\n        let o = {};\n        let _prot = _super[i].prototype;\n        for(let j in _prot){\n            if ((0, $fMUO1.default).typeOf(_prot[j]) !== \"function\") continue;\n            o[j] = function(fn) {\n                return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\n                    return fn.call(self, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n                };\n            }(_prot[j]);\n        }\n        _newSuper[i] = o;\n    }\n    this._super = _newSuper;\n};\n/*\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/ $2394d727dfd6a212$var$Class.inherit = function(proto) {\n    let self = this._class;\n    let _super = self._super;\n    let _class = self._class;\n    if ((0, $fMUO1.default).typeOf(proto) === \"function\") {\n        // Move constants (uppercased properties) to the class-level instead of prototype-level.\n        for(let i in proto._class)if (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\n        // Combine methods and properties.\n        (0, $fMUO1.default).override(self.prototype, proto._class.prototype);\n        // Combine super references.\n        (0, $fMUO1.default).override(_super, proto._class._super);\n        // Add new super reference if className specified in inherited prototypes.\n        if (proto._class.prototype.className) _super[proto._class.prototype.className] = proto._class;\n    } else (0, $fMUO1.default).override(self.prototype, proto);\n    self._super = _super;\n    self._class = _class;\n    return self;\n};\n/**\r\n * Internal method used to extend a class with one or more prototypes.\r\n */ $2394d727dfd6a212$var$Class.prototype._extend = function(base, protos) {\n    if (protos.length === 0) return base;\n    //VIOLET OPTIMIZE\n    const _class = function(...args) {\n        this._initSuperRefs();\n        this.__ctor.apply(this, args);\n    };\n    _class._class = _class;\n    _class._super = {};\n    $2394d727dfd6a212$var$Class.inherit.call(_class, base);\n    delete _class.prototype.className;\n    for(let i = 0; i < protos.length; i++)_class.inherit(protos[i]);\n    delete _class._super.Class;\n    if (\"classInit\" in _class.prototype) _class.prototype.classInit();\n    _class.isInstance = function(value) {\n        return (0, $fMUO1.default).isInstanceOf(value, _class);\n    };\n    return _class;\n};\n/**\r\n * Creates a new class with the specified prototypes each of which can be a class constructor (function) or an object.\r\n */ $2394d727dfd6a212$var$Class.extend = function(...protos) {\n    return this._class.prototype._extend(this, protos);\n};\n/**\r\n * Creates a new instance of a class resulting from extending the self class with the specified prototype.\r\n */ $2394d727dfd6a212$var$Class.create = function(proto) {\n    return new (this.extend(proto))();\n};\n/**\r\n * Mutates the host object to be an instance of the specified class.\r\n * !static mutate (classConstructor: object, host: object, override?: object) : object;\r\n */ $2394d727dfd6a212$var$Class.mutate = function(classConstructor, host, override = null) {\n    let zombie = new classConstructor();\n    // Copy all members from the class prototype.\n    for(let i in classConstructor.prototype){\n        if (host.hasOwnProperty(i)) continue;\n        host[i] = classConstructor.prototype[i];\n    }\n    // Copy all members from the zombie class instance.\n    for(let i in zombie){\n        if (host.hasOwnProperty(i)) continue;\n        host[i] = zombie[i];\n    }\n    // Rebind the super references.\n    if (host._super) {\n        for(let i in host._super)for(let j in host._super[i])host._super[i][j] = classConstructor.prototype.constructor._super[i].prototype[j].bind(host);\n    }\n    // Copy override members.\n    if (override !== null) for(let i in override)host[i] = override[i];\n    return host;\n};\nvar $2394d727dfd6a212$export$2e2bcd8739ae039 = $2394d727dfd6a212$var$Class;\n\n\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n\nvar /**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/ $13eda5a5dec8010f$export$2e2bcd8739ae039 = (0, $2394d727dfd6a212$export$2e2bcd8739ae039).extend({\n    /**\r\n\t**\tName of the class.\r\n\t*/ className: \"Event\",\n    /**\r\n\t**\tSource of the event.\r\n\t*/ source: null,\n    /**\r\n\t**\tName of the event.\r\n\t*/ name: null,\n    /**\r\n\t**\tArguments of the event.\r\n\t*/ args: null,\n    /**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/ _async: false,\n    /**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/ list: null,\n    /**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/ next: null,\n    /**\r\n\t**\tReturn values from event handlers.\r\n\t*/ ret: null,\n    /**\r\n\t**\tOriginal root event.\r\n\t*/ original: null,\n    /**\r\n\t**\tIndex of the current event handler.\r\n\t*/ i: -1,\n    /**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/ __ctor: function(source, list, eventName, eventArgs, cbHandler, cbContext) {\n        this.source = source;\n        this.name = eventName;\n        this.args = eventArgs;\n        this.cbHandler = cbHandler;\n        this.cbContext = cbContext;\n        this.list = list;\n        this.reset();\n    },\n    /**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/ reset: function() {\n        this.next = null;\n        this.ret = [];\n        this._async = false;\n        this.i = -1;\n        return this;\n    },\n    /**\r\n\t**\tChanges the source of the event.\r\n\t**\r\n\t**\tEvent setSource (object value);\r\n\t*/ setSource: function(value) {\n        this.source = value;\n        return this;\n    },\n    /**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/ wait: function() {\n        this._async = true;\n        return this;\n    },\n    /**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/ resume: function() {\n        this._async = false;\n        while(!this._async){\n            if (++this.i >= this.list.length) break;\n            if (this.list[this.i].silent) continue;\n            if ((0, $fMUO1.default).typeOf(this.list[this.i].handler) == \"string\") {\n                if (this.list[this.i].context) {\n                    if (!this.list[this.i].context[this.list[this.i].handler]) continue;\n                    if (this.list[this.i].context[this.list[this.i].handler](this, this.args, this.list[this.i].data) === false) break;\n                } else {\n                    if ($parcel$global[this.list[this.i].handler].call(null, this, this.args, this.list[this.i].data) === false) break;\n                }\n            } else {\n                if (this.list[this.i].handler.call(this.list[this.i].context, this, this.args, this.list[this.i].data) === false) break;\n            }\n        }\n        if (this._async) return this;\n        if (this.i >= this.list.length && this.next) this.next.resume();\n        if (this.cbHandler) this.cbHandler.call(this.cbContext);\n        return this;\n    },\n    /**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/ from: function(event) {\n        this.original = event;\n        return this;\n    },\n    /**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/ enqueue: function(event) {\n        if (!event) return this;\n        var evt;\n        for(evt = this; evt.next != null; evt = evt.next);\n        evt.next = event;\n        event.from(this);\n        return this;\n    }\n});\n\n\n\n\nvar /**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/ $c43adaf9cb6d6dd3$export$2e2bcd8739ae039 = (0, $2394d727dfd6a212$export$2e2bcd8739ae039).extend({\n    /**\r\n\t**\tName of the class.\r\n\t*/ className: \"EventDispatcher\",\n    /**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/ listeners: null,\n    /**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/ namespace: null,\n    /**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/ __ctor: function() {\n        this.listeners = {};\n    },\n    /**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/ setNamespace: function(value) {\n        this.namespace = value;\n        return this;\n    },\n    /**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/ addEventListener: function(eventName, handler, context, data) {\n        eventName = eventName.split(\":\");\n        var name = eventName[eventName.length - 1];\n        var ns = eventName.length > 1 ? eventName[0] : null;\n        if (!this.listeners[name]) this.listeners[name] = [];\n        this.listeners[name].push({\n            ns: ns,\n            handler: handler,\n            context: context,\n            data: data,\n            silent: 0\n        });\n        return this;\n    },\n    /**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/ removeEventListener: function(eventName, handler, context) {\n        eventName = eventName.split(\":\");\n        var name = eventName[eventName.length - 1];\n        var ns = eventName.length > 1 ? eventName[0] : null;\n        if (name == \"*\") for(var j in this.listeners){\n            var list = this.listeners[j];\n            for(var i = 0; i < list.length; i++){\n                var k = true;\n                if (handler) k = k && list[i].handler === handler;\n                if (context) k = k && list[i].context === context;\n                if (ns) k = k && list[i].ns == ns;\n                if (k) list.splice(i--, 1);\n            }\n        }\n        else {\n            if (!this.listeners[name]) return this;\n            var list = this.listeners[name];\n            for(var i = 0; i < list.length; i++){\n                var k = true;\n                if (handler) k = k && list[i].handler === handler;\n                if (context) k = k && list[i].context === context;\n                if (ns) k = k && list[i].ns == ns;\n                if (k) list.splice(i--, 1);\n            }\n        }\n        return this;\n    },\n    /**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/ prepareEvent: function(eventName, eventArgs, cbHandler, cbContext) {\n        var list = [];\n        eventName = eventName.split(\":\");\n        var name = eventName[eventName.length - 1];\n        var ns = eventName.length > 1 ? eventName[0] : null;\n        if (this.listeners[name]) list = list.concat(this.listeners[name]);\n        if (this.listeners[\"*\"]) list = list.concat(this.listeners[\"*\"]);\n        for(var i = 0; i < list.length; i++)if (list[i].silent) list.splice(i--, 1);\n        if (ns) {\n            for(var i = 0; i < list.length; i++)if (list[i].ns != ns) list.splice(i--, 1);\n        }\n        return new (0, $13eda5a5dec8010f$export$2e2bcd8739ae039)(this, list, name, eventArgs, cbHandler, cbContext);\n    },\n    /**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/ silence: function(eventName, value) {\n        eventName = eventName.split(\":\");\n        var name = eventName[eventName.length - 1];\n        var ns = eventName.length > 1 ? eventName[0] : null;\n        value = value === false ? -1 : 1;\n        if (name == \"*\") for(var j in this.listeners){\n            var list = this.listeners[j];\n            for(var i = 0; i < list.length; i++){\n                if (ns && list[i].ns != ns) continue;\n                list[i].silent += value;\n            }\n        }\n        else {\n            if (!this.listeners[name]) return this;\n            var list = this.listeners[name];\n            for(var i = 0; i < list.length; i++){\n                if (ns && list[i].ns != ns) continue;\n                list[i].silent += value;\n            }\n        }\n        return this;\n    },\n    /**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/ dispatchEvent: function(eventName, eventArgs, cbHandler, cbContext) {\n        return this.prepareEvent(this.namespace ? this.namespace + \":\" + eventName : eventName, eventArgs, cbHandler, cbContext).resume();\n    }\n});\n\n\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n\n\nvar $4VREF = parcelRequire(\"4VREF\");\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/ let $4dfa0622e14576ea$var$_Model = (0, $c43adaf9cb6d6dd3$export$2e2bcd8739ae039).extend({\n    /**\n\t**\tName of the class.\n\t*/ className: \"Model\",\n    /**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/ defaults: null,\n    /**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/ constraints: null,\n    /**\n\t**\tProperties of the model.\n\t*/ data: null,\n    /**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/ changedList: null,\n    /**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/ _silent: 0,\n    /**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/ _level: 0,\n    /**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/ __ctor: function(data, defaults) {\n        this._super.EventDispatcher.__ctor();\n        this.data = {};\n        if (defaults != null) this.reset(defaults, false);\n        else {\n            let o = null;\n            if (!this.defaults && this.constraints) {\n                o = {};\n                for(let i in this.constraints){\n                    let j = this.constraints[i];\n                    if (j.def === null || j.def === undefined) {\n                        o[i] = null;\n                        continue;\n                    }\n                    if (typeof j.def === \"function\") o[i] = j.def();\n                    else o[i] = j.def;\n                }\n            }\n            this.reset(o);\n        }\n        this.init();\n        if (data != null) this.set(data, true);\n        if (this.constraints) this.update();\n        this.ready();\n    },\n    /**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/ reset: function(defaults, nsilent) {\n        if (!this.defaults) {\n            if (!defaults || (0, $fMUO1.default).typeOf(defaults) !== \"object\" && (0, $fMUO1.default).typeOf(defaults) !== \"function\") return this;\n            this.defaults = defaults;\n        }\n        if ((0, $fMUO1.default).typeOf(this.defaults) === \"function\") this.data = this.defaults();\n        else this.data = (0, $fMUO1.default).clone(this.defaults);\n        return nsilent === false || defaults === false ? this : this.update(null, true);\n    },\n    /**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/ init: function() {},\n    /**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/ ready: function() {},\n    /**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/ silent: function(value) {\n        this._silent += value ? 1 : -1;\n        return this;\n    },\n    /**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/ _validate: function(name, value) {\n        if (!this.constraints || !this.constraints[name]) return value;\n        var constraints = this.constraints[name];\n        var nvalue = value;\n        for(var ctname in constraints){\n            if (!$4dfa0622e14576ea$var$_Model.Constraints[ctname]) continue;\n            try {\n                nvalue = $4dfa0622e14576ea$var$_Model.Constraints[ctname](this, constraints[ctname], name, nvalue);\n            } catch (e) {\n                if (e.message == \"null\") break;\n                throw new Error(`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n            }\n        }\n        return nvalue;\n    },\n    /**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/ _set: function(name, value) {\n        if (!this.constraints || !this.constraints[name]) {\n            this.data[name] = value;\n            return value;\n        }\n        var constraints = this.constraints[name];\n        var cvalue = this.data[name];\n        var nvalue = value;\n        for(var ctname in constraints){\n            if (!$4dfa0622e14576ea$var$_Model.Constraints[ctname]) continue;\n            try {\n                nvalue = $4dfa0622e14576ea$var$_Model.Constraints[ctname](this, constraints[ctname], name, nvalue);\n            } catch (e) {\n                if (e.message == \"null\") break;\n                if (!this._silent) this.dispatchEvent(\"constraintError\", {\n                    constraint: ctname,\n                    message: e.message,\n                    name: name,\n                    value: value\n                });\n                break;\n            }\n        }\n        return this.data[name] = nvalue;\n    },\n    /**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/ _propertyEvent: function(name, prev, value, direct) {\n        var temp = {\n            name: name,\n            old: prev,\n            value: value,\n            level: this._level\n        };\n        var evt = this.dispatchEvent(\"propertyChanging\", temp);\n        if (!direct) temp.value = this._set(name, temp.value);\n        else this.data[name] = temp.value;\n        if (evt != null && evt.ret.length && evt.ret[0] === false) return;\n        this.dispatchEvent(\"propertyChanged.\" + name, temp);\n        this.dispatchEvent(\"propertyChanged\", temp);\n        this.changedList.push(name);\n    },\n    /**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/ set: function() {\n        var n = arguments.length;\n        var force = false, silent = false;\n        if ((n > 2 || n == 2 && (0, $fMUO1.default).typeOf(arguments[0]) == \"object\") && (0, $fMUO1.default).typeOf(arguments[n - 1]) == \"boolean\") {\n            force = arguments[--n];\n            if (force === false) silent = true;\n        }\n        if (this._level == 0) this.changedList = [];\n        this._level++;\n        if (n == 2) {\n            if (this.data[arguments[0]] !== arguments[1] || force) {\n                if (!this._silent && !silent) this._propertyEvent(arguments[0], this.data[arguments[0]], this._validate(arguments[0], arguments[1]));\n                else this._set(arguments[0], arguments[1]);\n            }\n        } else {\n            for(var i in arguments[0])if (this.data[i] !== arguments[0][i] || force) {\n                if (!this._silent && !silent) this._propertyEvent(i, this.data[i], this._validate(i, arguments[0][i]));\n                else this._set(i, arguments[0][i]);\n            }\n        }\n        if (!--this._level && this.changedList.length && !silent && !this._silent) this.dispatchEvent(\"modelChanged\", {\n            fields: this.changedList\n        });\n        return this;\n    },\n    /**\n\t**\tReturns true if the given key exists in the model.\n\t**\n\t**\t>> boolean has (string name);\n\t*/ has: function(name) {\n        return name in this.data;\n    },\n    /**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/ get: function(name, def) {\n        if (arguments.length == 0 || name === false) return this.data;\n        if (arguments.length == 1 && name === true) return this.flatten();\n        if (arguments.length == 2) return this.data[name] === undefined ? def : this.data[name];\n        return this.data[name];\n    },\n    /**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/ getInt: function(name, def) {\n        if (arguments.length == 2) return this.data[name] === undefined ? def : parseInt(this.data[name]);\n        return parseInt(this.data[name]);\n    },\n    /**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/ getFloat: function(name, def) {\n        if (arguments.length == 2) return this.data[name] === undefined ? def : parseFloat(this.data[name]);\n        return parseFloat(this.data[name]);\n    },\n    /**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/ getBool: function(name, def) {\n        if (arguments.length == 2) name = this.data[name] === undefined ? def : this.data[name];\n        else name = this.data[name];\n        if (name === \"true\" || name === true) return true;\n        if (name === \"false\" || name === false) return false;\n        return parseInt(name) ? true : false;\n    },\n    /**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/ getReference: function(name) {\n        var m = this;\n        return {\n            get: function() {\n                return m.get(name);\n            },\n            set: function(value) {\n                m.set(name, value);\n            }\n        };\n    },\n    /**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/ constraint: function(field, constraint, value) {\n        if (arguments.length == 3 || arguments.length == 2 || arguments.length == 1 && (0, $fMUO1.default).typeOf(field) == \"object\") {\n            if (this.constraints === this.constructor.prototype.constraints) this.constraints = (0, $fMUO1.default).clone(this.constraints);\n            switch(arguments.length){\n                case 1:\n                    (0, $fMUO1.default).override(this.constraints, field);\n                    break;\n                case 2:\n                    (0, $fMUO1.default).override(this.constraints[field], constraint);\n                    break;\n                case 3:\n                    this.constraints[field][constraint] = value;\n                    break;\n            }\n            return this;\n        }\n        return !field ? this : this.constraints[field];\n    },\n    /**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/ flatten: function(safe, rsafe) {\n        if (safe) {\n            var data = this.flatten(false, true);\n            if (data == null) return null;\n            data[\"class\"] = this.classPath;\n            return data;\n        }\n        if (!this.constraints && !this.defaults) return this.data;\n        if (!this.isCompliant()) return {};\n        var constraints = this.constraints;\n        var keys = this.defaults ? (0, $fMUO1.default).typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults : this.constraints;\n        var data = {};\n        for(var i in this.data){\n            if (!(i in keys)) continue;\n            if (constraints && constraints[i]) {\n                var ct = constraints[i];\n                if (ct.model) {\n                    data[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n                    continue;\n                }\n                if (ct.arrayof) {\n                    data[i] = [];\n                    for(var j = 0; j < this.data[i].length; j++)data[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n                    continue;\n                }\n                if (ct.cls) {\n                    data[i] = this.data[i] ? this.data[i].flatten() : null;\n                    continue;\n                }\n            }\n            data[i] = this.data[i];\n        }\n        return data;\n    },\n    /**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/ remove: function(name, nsilent) {\n        if ((0, $fMUO1.default).typeOf(name) == \"array\") {\n            for(var i = 0; i < name.length; i++)delete this.data[name[i]];\n            if (nsilent !== false && !this._silent) this.dispatchEvent(\"propertyRemoved\", {\n                fields: name\n            });\n        } else {\n            delete this.data[name];\n            if (nsilent !== false && !this._silent) this.dispatchEvent(\"propertyRemoved\", {\n                fields: [\n                    name\n                ]\n            });\n        }\n    },\n    /**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/ update: function(fields, direct) {\n        if (this._silent) return this;\n        if (this._level == 0) this.changedList = [];\n        this._level++;\n        if (fields && (0, $fMUO1.default).typeOf(fields) == \"string\") this._propertyEvent(fields, this.data[fields], this.data[fields], direct);\n        else if (fields && (0, $fMUO1.default).typeOf(fields) == \"array\") for (var i of fields)this._propertyEvent(i, this.data[i], this.data[i], direct);\n        else for(var i in this.data)this._propertyEvent(i, this.data[i], this.data[i], direct);\n        if (!--this._level && !this._silent && (this.changedList.length != 0 || fields === true)) this.dispatchEvent(\"modelChanged\", {\n            fields: this.changedList\n        });\n        return this;\n    },\n    /**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/ validate: function(fields) {\n        if (!this.constraints) return this;\n        if (fields && (0, $fMUO1.default).typeOf(fields) == \"string\") this._set(fields, this.data[fields]);\n        else for(var i in this.data){\n            if (fields && (0, $fMUO1.default).indexOf(fields, i) == -1) continue;\n            this._set(i, this.data[i]);\n        }\n        return this;\n    },\n    /**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/ isCompliant: function() {\n        if (!this.constraints) return true;\n        try {\n            for(var i in this.data)this._validate(i, this.data[i]);\n            return true;\n        } catch (e) {}\n        return false;\n    },\n    /**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/ observe: function(property, handler, context) {\n        this.addEventListener(\"propertyChanged.\" + property, handler, context);\n    },\n    /**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/ unobserve: function(property, handler, context) {\n        this.removeEventListener(\"propertyChanged.\" + property, handler, context);\n    },\n    /**\n\t**\tAdds a propertyChanged event handler for the given property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void watch (string property, function handler);\n\t*/ watch: function(property, handler) {\n        property = property.split(\":\");\n        if (property.length == 1) {\n            property[1] = property[0];\n            property[0] = \"watch\";\n        }\n        this.addEventListener(property[0] + \":propertyChanged.\" + property[1], function(evt, args) {\n            handler(args.value, args, evt);\n        });\n    },\n    /**\n\t**\tRemoves propertyChanged handlers related to the specified property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void unwatch (string property);\n\t*/ unwatch: function(property) {\n        property = property.split(\":\");\n        if (property.length == 1) {\n            property[1] = property[0];\n            property[0] = \"watch\";\n        }\n        this.removeEventListener(property[0] + \":propertyChanged.\" + property[1]);\n    },\n    /**\n\t * Triggers a field change event. Even if the value of the field is the same as the model's, the event will still be triggered.\n\t */ trigger: function(name, value = null) {\n        return this.set(name, value, true);\n    },\n    /**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/ toString: function() {\n        return (0, $fMUO1.default).serialize(this.get(true));\n    }\n});\n$4dfa0622e14576ea$var$_Model.Constraints = (0, $4VREF.default);\nvar $4dfa0622e14576ea$export$2e2bcd8739ae039 = $4dfa0622e14576ea$var$_Model;\n\n\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n\nvar /**\n**\tGeneric list for models.\n*/ $0890bed8a163f087$export$2e2bcd8739ae039 = (0, $4dfa0622e14576ea$export$2e2bcd8739ae039).extend({\n    /**\n\t**\tName of the class.\n\t*/ className: \"ModelList\",\n    /**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/ itemt: (0, $4dfa0622e14576ea$export$2e2bcd8739ae039),\n    /**\n\t**\tMirror of data.contents\n\t*/ contents: null,\n    /**\n\t**\tIDs of every item in the contents.\n\t*/ itemId: null,\n    /**\n\t**\tAutoincremental ID for the next item to be added.\n\t*/ nextId: null,\n    /**\n\t**\tDefault properties of the model.\n\t*/ defaults: {\n        contents: null\n    },\n    /**\n\t**\tConstraints of the model to ensure integrity.\n\t*/ constraints: {\n        contents: {\n            type: \"array\",\n            arrayof: \"@itemt\"\n        }\n    },\n    /**\n\t**\tConstructor.\n\t*/ __ctor: function(...args) {\n        this.itemId = [];\n        this.nextId = 0;\n        this._super.Model.__ctor(...args);\n    },\n    /**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t*/ ready: function() {\n        this._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n        this.contents = this.data.contents;\n    },\n    /**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int iid, Model item);\n\t*/ _bind: function(iid, item) {\n        if (item && item.addEventListener) item.addEventListener(this._eventGroup, this._onItemEvent, this, iid);\n        return item;\n    },\n    /**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/ _unbind: function(item) {\n        if (item && item.removeEventListener) item.removeEventListener(this._eventGroup);\n        return item;\n    },\n    /**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, int iid);\n\t*/ _onItemEvent: function(evt, args, iid) {\n        this.prepareEvent(\"itemChanged\", {\n            id: iid,\n            item: evt.source\n        }).from(evt).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n    },\n    /**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int length ();\n\t*/ length: function() {\n        return this.data.contents.length;\n    },\n    /**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/ clear: function() {\n        for(var i = 0; i < this.data.contents; i++)this._unbind(this.data.contents[i]);\n        this.itemId = [];\n        this.nextId = 0;\n        this.contents = this.data.contents = [];\n        this.prepareEvent(\"itemsCleared\").enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n        return this;\n    },\n    /**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> ModelList setData (array data);\n\t*/ setData: function(data) {\n        this.clear();\n        if (!data) return this;\n        for(var i = 0; i < data.length; i++){\n            var item = (0, $fMUO1.default).ensureTypeOf(this.itemt, data[i]);\n            this.itemId.push(this.nextId++);\n            this.data.contents.push(item);\n            this._bind(this.nextId - 1, item);\n        }\n        this.prepareEvent(\"itemsChanged\").enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n        return this;\n    },\n    /**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/ getData: function() {\n        return this.data.contents;\n    },\n    /**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/ getAt: function(index) {\n        if (index < 0 || index >= this.data.contents.length) return null;\n        return this.data.contents[index];\n    },\n    /**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/ removeAt: function(index) {\n        if (index < 0 || index >= this.data.contents.length) return null;\n        let item = this.data.contents.splice(index, 1)[0];\n        let id = this.itemId.splice(index, 1)[0];\n        this._unbind(item);\n        this.prepareEvent(\"itemRemoved\", {\n            id: id,\n            item: item\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n        return item;\n    },\n    /**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/ setAt: function(index, item) {\n        if (index < 0 || index >= this.data.contents.length) return false;\n        item = (0, $fMUO1.default).ensureTypeOf(this.itemt, item);\n        this._unbind(this.data.contents[index]);\n        this.data.contents[index] = item;\n        this._bind(this.itemId[index], item);\n        this.prepareEvent(\"itemChanged\", {\n            id: this.itemId[index],\n            item: item\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n        return true;\n    },\n    /**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/ updateAt: function(index) {\n        if (index < 0 || index >= this.data.contents.length) return false;\n        this.prepareEvent(\"itemChanged\", {\n            id: this.itemId[index],\n            item: this.data.contents[index]\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n        return true;\n    },\n    /**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/ push: function(item) {\n        if (item && (0, $fMUO1.default).typeOf(item) != \"object\") return null;\n        item = (0, $fMUO1.default).ensureTypeOf(this.itemt, item);\n        this.itemId.push(this.nextId++);\n        this.data.contents.push(item);\n        this._bind(this.nextId - 1, item);\n        this.prepareEvent(\"itemAdded\", {\n            id: this.itemId[this.itemId.length - 1],\n            item: item,\n            position: \"tail\"\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n        return item;\n    },\n    /**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/ pop: function() {\n        return this._unbind(this.data.contents.pop());\n    },\n    /**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/ unshift: function(item) {\n        if (item && (0, $fMUO1.default).typeOf(item) != \"object\") return null;\n        item = (0, $fMUO1.default).ensureTypeOf(this.itemt, item);\n        this.itemId.unshift(this.nextId++);\n        this.data.contents.unshift(item);\n        this._bind(this.nextId - 1, item);\n        this.prepareEvent(\"itemAdded\", {\n            id: this.itemId[0],\n            item: item,\n            position: \"head\"\n        }).enqueue(this.prepareEvent(\"modelChanged\", {\n            fields: [\n                \"contents\"\n            ]\n        })).resume();\n        return item;\n    },\n    /**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/ shift: function() {\n        return this._unbind(this.data.contents.shift());\n    },\n    /**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/ find: function(data, retObject = false) {\n        var contents = this.data.contents;\n        for(var i = 0; i < contents.length; i++){\n            if ((0, $fMUO1.default).partialCompare(contents[i].data, data)) return retObject ? contents[i] : i;\n        }\n        return retObject ? null : -1;\n    }\n});\n\n\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n/**\r\n * The utility functions in this module allow to create a very strict serialization/deserialization schema\r\n * to ensure that all values are of the specific type when stored in string format.\r\n */ let $2710795e2347ba2a$var$Schema = {\n    Type: function(proto) {\n        let tmp = {\n            flatten: function(value, context) {\n                return value;\n            },\n            unflatten: function(value, context) {\n                return value;\n            }\n        };\n        return proto ? (0, $fMUO1.default).override(tmp, proto) : tmp;\n    },\n    String: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(value, context) {\n                return value != null ? value.toString() : null;\n            },\n            unflatten: function(value, context) {\n                return value != null ? value.toString() : null;\n            }\n        });\n    },\n    Integer: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(value, context) {\n                return ~~value;\n            },\n            unflatten: function(value, context) {\n                return ~~value;\n            }\n        });\n    },\n    Number: function(precision) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            _precision: precision,\n            _round: false,\n            precision: function(value) {\n                this._precision = ~~value;\n                return this;\n            },\n            flatten: function(value, context) {\n                value = parseFloat(value);\n                if (this._precision > 0) value = ~~(value * Math.pow(10, this._precision)) / Math.pow(10, this._precision);\n                return value;\n            },\n            unflatten: function(value, context) {\n                return parseFloat(value);\n            }\n        });\n    },\n    Bool: function(compact) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            _compact: compact,\n            compact: function(value) {\n                this._compact = value;\n                return this;\n            },\n            flatten: function(value, context) {\n                value = ~~value;\n                return this._compact ? value > 0 ? 1 : 0 : value > 0 ? true : false;\n            },\n            unflatten: function(value, context) {\n                return ~~value ? true : false;\n            }\n        });\n    },\n    SharedString: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(value, context) {\n                if (value == null) return 0;\n                value = value.toString();\n                if (!(\"strings\" in context)) {\n                    context.index = {};\n                    context.strings = [];\n                }\n                if (!(value in context.index)) {\n                    context.strings.push(value);\n                    context.index[value] = context.strings.length;\n                }\n                return context.index[value];\n            },\n            unflatten: function(value, context) {\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\n            }\n        });\n    },\n    Array: function(type) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            itemType: type,\n            _debug: false,\n            _filter: null,\n            debug: function(v) {\n                this._debug = v;\n                return this;\n            },\n            of: function(type) {\n                this.itemType = type;\n                return this;\n            },\n            filter: function(callback) {\n                this._filter = callback;\n                return this;\n            },\n            flatten: function(value, context) {\n                if (value == null) return null;\n                let o = [];\n                for(let i = 0; i < value.length; i++){\n                    if (this._filter && !this._filter(value[i], i)) continue;\n                    o.push(this.itemType.flatten(value[i], context));\n                }\n                return o;\n            },\n            unflatten: async function(value, context) {\n                if (value == null) return null;\n                let o = [];\n                for(let i = 0; i < value.length; i++)o.push(await this.itemType.unflatten(value[i], context));\n                return o;\n            }\n        });\n    },\n    Object: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            properties: [],\n            property: function(name, type, defvalue = null) {\n                this.properties.push({\n                    name: name,\n                    source: name,\n                    type: type,\n                    defvalue: defvalue\n                });\n                return this;\n            },\n            propertyAlias: function(name, source, type, defvalue = null) {\n                this.properties.push({\n                    name: name,\n                    source: source,\n                    type: type,\n                    defvalue: defvalue\n                });\n                return this;\n            },\n            flatten: function(value, context) {\n                if (value == null) return null;\n                let o;\n                if (context.symbolic === true) {\n                    o = {};\n                    for(let i = 0; i < this.properties.length; i++)if (this.properties[i].source in value) o[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].source], context);\n                    else o[this.properties[i].name] = this.properties[i].type.flatten(this.properties[i].defvalue, context);\n                } else {\n                    o = [];\n                    for(let i = 0; i < this.properties.length; i++)if (this.properties[i].source in value) o.push(this.properties[i].type.flatten(value[this.properties[i].source], context));\n                    else o.push(this.properties[i].type.flatten(this.properties[i].defvalue, context));\n                }\n                return o;\n            },\n            unflatten: async function(value, context) {\n                if (value == null) return null;\n                let o = {};\n                if (context.symbolic === true) for(let i = 0; i < this.properties.length; i++)o[this.properties[i].name] = await this.properties[i].type.unflatten(this.properties[i].name in value ? value[this.properties[i].name] : this.properties[i].defvalue, context);\n                else for(let i = 0; i < this.properties.length; i++)o[this.properties[i].name] = await this.properties[i].type.unflatten(i in value ? value[i] : this.properties[i].defvalue, context);\n                return o;\n            }\n        });\n    },\n    Class: function(classConstructor) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            _constructor: classConstructor,\n            constructor: function(classConstructor) {\n                this._constructor = classConstructor;\n                return this;\n            },\n            flatten: function(value, context) {\n                return value == null ? null : value.flatten(context);\n            },\n            unflatten: async function(value, context) {\n                return value == null ? null : await new this._constructor().unflatten(value, context);\n            }\n        });\n    },\n    /*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/ Property: function(name, type) {\n        return $2710795e2347ba2a$var$Schema.Type({\n            property: name,\n            type: type,\n            name: function(name) {\n                this.property = name;\n                return this;\n            },\n            is: function(type) {\n                this.type = type;\n                return this;\n            },\n            flatten: function(value, context) {\n                if (value == null) return null;\n                let o;\n                if (context.symbolic === true) {\n                    o = {};\n                    o[this.property] = this.type.flatten(value[this.property], context);\n                } else o = this.type.flatten(value[this.property], context);\n                return o;\n            },\n            unflatten: async function(value, context) {\n                if (value == null) return null;\n                let o = {};\n                if (context.symbolic === true) o[this.property] = await this.type.unflatten(value[this.property], context);\n                else o[this.property] = await this.type.unflatten(value, context);\n                return o;\n            }\n        });\n    },\n    Map: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            flatten: function(value, context) {\n                if (value == null) return null;\n                if (context.symbolic === true) return value;\n                let o = [];\n                for(let i in value){\n                    o.push(i);\n                    o.push(value[i]);\n                }\n                return o;\n            },\n            unflatten: function(value, context) {\n                if (value == null) return null;\n                if (context.symbolic === true) return value;\n                let o = {};\n                for(let i = 0; i < value.length; i += 2)o[value[i]] = value[i + 1];\n                return o;\n            }\n        });\n    },\n    Selector: function() {\n        return $2710795e2347ba2a$var$Schema.Type({\n            conditions: [],\n            value: null,\n            when: function(value, type) {\n                this.conditions.push([\n                    (val)=>val === value,\n                    type\n                ]);\n                return this;\n            },\n            with: function(value) {\n                this.value = value;\n                return this;\n            },\n            flatten: function(value, context) {\n                if (value == null) return null;\n                for (let i of this.conditions){\n                    if (i[0](this.value) === true) return i[1].flatten(value, context);\n                }\n                return null;\n            },\n            unflatten: async function(value, context) {\n                if (value == null) return null;\n                for (let i of this.conditions){\n                    if (i[0](this.value) === true) return await i[1].unflatten(value, context);\n                }\n                return null;\n            }\n        });\n    }\n};\nvar $2710795e2347ba2a$export$2e2bcd8739ae039 = $2710795e2347ba2a$var$Schema;\n\n\n\nvar /**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/ $32651d5f38a8a64c$export$2e2bcd8739ae039 = (0, $2394d727dfd6a212$export$2e2bcd8739ae039).extend({\n    /**\r\n\t**\tName of the class.\r\n\t*/ className: \"Flattenable\",\n    /**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/ typeSchema: null,\n    /**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/ flatten: function(context) {\n        return this.typeSchema.flatten(this, context);\n    },\n    /**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/ unflatten: async function(value, context) {\n        Object.assign(this, await this.typeSchema.unflatten(value, context));\n        await this.onUnflattened();\n        return this;\n    },\n    /*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/ onUnflattened: async function() {}\n});\n\n\n\n\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\nvar /**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/ $2bcce06113365814$export$2e2bcd8739ae039 = (0, $32651d5f38a8a64c$export$2e2bcd8739ae039).extend({\n    /**\r\n\t**\tName of the class.\r\n\t*/ className: \"Collection\",\n    /**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/ itemTypeSchema: null,\n    /**\r\n\t**\tArray of items.\r\n\t*/ items: null,\n    /* Array */ /**\r\n\t**\tConstructs the collection.\r\n\t*/ __ctor: function(itemTypeSchema) {\n        if (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\n        if (itemTypeSchema) this.typeSchema = (0, $2710795e2347ba2a$export$2e2bcd8739ae039).Property(\"items\").is((0, $2710795e2347ba2a$export$2e2bcd8739ae039).Array().of(itemTypeSchema));\n        this.reset();\n    },\n    /*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/ onUnflattened: function() {\n        let items = this.items;\n        this.reset();\n        for (let i of items)this.add(i);\n    },\n    /**\r\n\t * \tExecuted when the value in `items` is changed.\r\n\t */ itemsReferenceChanged: function() {},\n    /*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/ reset: function() {\n        this.items = [];\n        this.itemsReferenceChanged();\n        return this;\n    },\n    /*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/ clear: function() {\n        var items = this.items;\n        this.reset();\n        for(var i = 0; i < items.length; i++)this.onItemRemoved(items[i], 0);\n        return this;\n    },\n    /*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/ sort: function(fn, desc) {\n        if (typeof fn != \"function\") this.items.sort(function(a, b) {\n            return (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\n        });\n        else this.items.sort(fn);\n        return this;\n    },\n    /*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/ findItem: function(inc, exc) {\n        if (!this.items) return null;\n        for(var i = 0; i < this.items.length; i++){\n            if (exc && (0, $fMUO1.default).partialCompare(this.items[i], exc)) continue;\n            if ((0, $fMUO1.default).partialCompare(this.items[i], inc)) return this.items[i];\n        }\n        return null;\n    },\n    /*\r\n\t**\tReturns the container array.\r\n\t*/ getItems: function() {\n        return this.items;\n    },\n    /*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/ length: function() {\n        return this.items.length;\n    },\n    /*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/ isEmpty: function() {\n        return !this.items.length;\n    },\n    /*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/ indexOf: function(item) {\n        return this.items.indexOf(item);\n    },\n    /*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/ getAt: function(index, relative = false) {\n        if (index < 0 && relative == true) index += this.items.length;\n        return index >= 0 && index < this.items.length ? this.items[index] : null;\n    },\n    /*\r\n\t**\tReturns the first item in the collection.\r\n\t*/ first: function() {\n        return this.getAt(0);\n    },\n    /*\r\n\t**\tReturns the last item in the collection.\r\n\t*/ last: function() {\n        return this.getAt(-1, true);\n    },\n    /*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/ addAt: function(index, item) {\n        if (!item || !this.onBeforeItemAdded(item)) return this;\n        if (index < 0) index = 0;\n        if (index > this.items.length) index = this.items.length;\n        if (index == 0) this.items.unshift(item);\n        else if (index == this.items.length) this.items.push(item);\n        else {\n            var tmp = this.items.splice(0, index);\n            tmp.push(item);\n            this.items = tmp.concat(this.items);\n            this.itemsReferenceChanged();\n        }\n        this.onItemAdded(item);\n        return this;\n    },\n    /*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/ unshift: function(item) {\n        return this.addAt(0, item);\n    },\n    /*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/ push: function(item) {\n        return this.addAt(this.items.length, item);\n    },\n    /*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/ add: function(item) {\n        return this.push(item);\n    },\n    /*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/ removeAt: function(index, relative = false) {\n        if (index < 0 && relative == true) index += this.items.length;\n        if (index < 0 || index >= this.items.length) return null;\n        var item = this.items[index];\n        this.items.splice(index, 1);\n        this.onItemRemoved(item, index);\n        return item;\n    },\n    /*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/ pop: function(item) {\n        return this.removeAt(-1, true);\n    },\n    /*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/ shift: function(item) {\n        return this.removeAt(0);\n    },\n    /*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/ remove: function(item) {\n        return this.removeAt(this.indexOf(item));\n    },\n    /*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/ forEach: function(callback) {\n        if (this.isEmpty()) return this;\n        for(var i = 0; i < this.items.length; i++)if (callback(this.items[i], i, this) === false) break;\n        return this;\n    },\n    /*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/ forEachCall: function(method, ...args) {\n        if (this.isEmpty()) return this;\n        for(var i = 0; i < this.items.length; i++)if (this.items[i][method](...args) === false) break;\n        return this;\n    },\n    /*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/ forEachRev: function(callback) {\n        if (this.isEmpty()) return this;\n        for(var i = this.items.length - 1; i >= 0; i--)if (callback(this.items[i], i, this) === false) break;\n        return this;\n    },\n    /*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/ forEachRevCall: function(method, ...args) {\n        if (this.isEmpty()) return this;\n        for(var i = this.items.length - 1; i >= 0; i--)if (this.items[i][method](...args) === false) break;\n        return this;\n    },\n    /*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/ onBeforeItemAdded: function(item) {\n        return true;\n    },\n    /*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/ onItemAdded: function(item) {},\n    /*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/ onItemRemoved: function(item) {}\n});\n\n\n\nvar $fMUO1 = parcelRequire(\"fMUO1\");\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRinn.Template.functions map, each of which have their own parameters.\n*/ let $d261ccdafdfe12a9$var$Template = {\n    /*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/ strict: false,\n    /**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/ parseTemplate: function(template, sym_open, sym_close, is_tpl = false, root = 1) {\n        let nflush = \"string\", flush = null, state = 0, count = 0;\n        let str = \"\", parts = [], mparts = parts, nparts = false;\n        if (is_tpl === true) {\n            template = template.trim();\n            nflush = \"identifier\";\n            state = 10;\n            mparts.push(parts = []);\n        }\n        template += \"\\x00\";\n        function unescape(value1) {\n            if (typeof value1 == \"object\") {\n                if (value1 instanceof Array) for(let i = 0; i < value1.length; i++)unescape(value1[i]);\n                else value1.data = unescape(value1.data);\n                return value1;\n            }\n            for(let i = 0; i < value1.length; i++)if (value1[i] == \"\\\\\") {\n                let r = value1[i + 1];\n                switch(r){\n                    case \"n\":\n                        r = \"\\n\";\n                        break;\n                    case \"r\":\n                        r = \"\\r\";\n                        break;\n                    case \"f\":\n                        r = \"\\f\";\n                        break;\n                    case \"v\":\n                        r = \"\\v\";\n                        break;\n                    case \"t\":\n                        r = \"\t\";\n                        break;\n                    case \"s\":\n                        r = \"s\";\n                        break;\n                    case '\"':\n                        r = '\"';\n                        break;\n                    case \"'\":\n                        r = \"'\";\n                        break;\n                }\n                value1 = value1.substr(0, i) + r + value1.substr(i + 2);\n            }\n            return value1;\n        }\n        function emit(type, data) {\n            if (type == \"template\") data = $d261ccdafdfe12a9$var$Template.parseTemplate(data, sym_open, sym_close, true, 0);\n            else if (type == \"parse\") {\n                data = $d261ccdafdfe12a9$var$Template.parseTemplate(data, sym_open, sym_close, false, 0);\n                type = \"base-string\";\n                if ((0, $fMUO1.default).typeOf(data) == \"array\") {\n                    type = data[0].type;\n                    data = data[0].data;\n                }\n            } else if (type == \"parse-trim-merge\") data = $d261ccdafdfe12a9$var$Template.parseTemplate(data.trim().split(\"\\n\").map((i)=>i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n            else if (type == \"parse-merge\") data = $d261ccdafdfe12a9$var$Template.parseTemplate(data, sym_open, sym_close, false, 0);\n            else if (type == \"parse-merge-alt\") data = $d261ccdafdfe12a9$var$Template.parseTemplate(data, \"{\", \"}\", false, 0);\n            if (type == \"parse-merge\" || type == \"parse-merge-alt\" || type == \"parse-trim-merge\") for(let i = 0; i < data.length; i++)parts.push(data[i]);\n            else parts.push({\n                type: type,\n                data: data\n            });\n            if (nparts) {\n                mparts.push(parts = []);\n                nparts = false;\n            }\n        }\n        for(let i = 0; i < template.length; i++){\n            if (template[i] == \"\\\\\") {\n                str += \"\\\\\";\n                str += template[++i];\n                continue;\n            }\n            switch(state){\n                case 0:\n                    if (template[i] == \"\\x00\") flush = \"string\";\n                    else if (template[i] == sym_open && template[i + 1] == \"<\") {\n                        state = 1;\n                        count = 1;\n                        flush = \"string\";\n                        nflush = \"parse-merge\";\n                    } else if (template[i] == sym_open && template[i + 1] == \"@\") {\n                        state = 1;\n                        count = 1;\n                        flush = \"string\";\n                        nflush = \"parse-trim-merge\";\n                        i++;\n                    } else if (template[i] == sym_open && template[i + 1] == \":\") {\n                        state = 12;\n                        count = 1;\n                        flush = \"string\";\n                        nflush = \"string\";\n                        i++;\n                    } else if (template[i] == sym_open) {\n                        state = 1;\n                        count = 1;\n                        flush = \"string\";\n                        nflush = \"template\";\n                    } else str += template[i];\n                    break;\n                case 1:\n                    if (template[i] == \"\\x00\") throw new Error(\"Parse error: Unexpected end of template\");\n                    if (template[i] == sym_close) {\n                        count--;\n                        if (count < 0) throw new Error(\"Parse error: Unmatched \" + sym_close);\n                        if (count == 0) {\n                            state = 0;\n                            flush = nflush;\n                            break;\n                        }\n                    } else if (template[i] == sym_open) count++;\n                    str += template[i];\n                    break;\n                case 10:\n                    if (template[i] == \"\\x00\") {\n                        flush = nflush;\n                        break;\n                    } else if (template[i] == \".\") {\n                        emit(nflush, str);\n                        emit(\"access\", \".\");\n                        nflush = \"identifier\";\n                        str = \"\";\n                        break;\n                    } else if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) {\n                        flush = nflush;\n                        nflush = \"identifier\";\n                        nparts = true;\n                        while(template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)i++;\n                        i--;\n                        break;\n                    } else if (template[i] == sym_open && template[i + 1] == \"<\") {\n                        if (str) flush = nflush;\n                        state = 11;\n                        count = 1;\n                        nflush = \"parse-merge\";\n                        break;\n                    } else if (template[i] == sym_open && template[i + 1] == \"@\") {\n                        if (str) flush = nflush;\n                        state = 11;\n                        count = 1;\n                        nflush = \"parse-trim-merge\";\n                        i++;\n                        break;\n                    } else if (template[i] == '\"') {\n                        if (str) flush = nflush;\n                        state = 14;\n                        count = 1;\n                        nflush = \"parse-merge\";\n                        break;\n                    } else if (template[i] == \"'\") {\n                        if (str) flush = nflush;\n                        state = 15;\n                        count = 1;\n                        nflush = \"parse-merge\";\n                        break;\n                    } else if (template[i] == \"`\") {\n                        if (str) flush = nflush;\n                        state = 16;\n                        count = 1;\n                        nflush = \"parse-merge-alt\";\n                        break;\n                    } else if (template[i] == sym_open && template[i + 1] == \":\") {\n                        if (str) flush = nflush;\n                        state = 13;\n                        count = 1;\n                        nflush = \"string\";\n                        i++;\n                        break;\n                    } else if (template[i] == sym_open) {\n                        if (str) emit(nflush, str);\n                        state = 11;\n                        count = 1;\n                        str = \"\";\n                        nflush = \"parse\";\n                        str += template[i];\n                        break;\n                    }\n                    if (nflush != \"identifier\") {\n                        emit(nflush, str);\n                        str = \"\";\n                        nflush = \"identifier\";\n                    }\n                    str += template[i];\n                    break;\n                case 11:\n                    if (template[i] == \"\\x00\") throw new Error(\"Parse error: Unexpected end of template\");\n                    if (template[i] == sym_close) {\n                        count--;\n                        if (count < 0) throw new Error(\"Parse error: Unmatched \" + sym_close);\n                        if (count == 0) {\n                            state = 10;\n                            if (nflush == \"parse-merge\" || nflush == \"parse-merge-alt\" || nflush == \"parse-trim-merge\") break;\n                        }\n                    } else if (template[i] == sym_open) count++;\n                    str += template[i];\n                    break;\n                case 12:\n                    if (template[i] == \"\\x00\") throw new Error(\"Parse error: Unexpected end of template\");\n                    if (template[i] == sym_close) {\n                        count--;\n                        if (count < 0) throw new Error(\"Parse error: Unmatched \" + sym_close);\n                        if (count == 0) {\n                            if (str.length != 0) {\n                                if (!(str[0] == \"<\" || str[0] == \"[\" || str[0] == \" \")) str = sym_open + str + sym_close;\n                            }\n                            state = 0;\n                            flush = nflush;\n                            break;\n                        }\n                    } else if (template[i] == sym_open) count++;\n                    str += template[i];\n                    break;\n                case 13:\n                    if (template[i] == \"\\x00\") throw new Error(\"Parse error: Unexpected end of template\");\n                    if (template[i] == sym_close) {\n                        count--;\n                        if (count < 0) throw new Error(\"Parse error: Unmatched \" + sym_close);\n                        if (count == 0) {\n                            if (!(str[0] == \"<\" || str[0] == \"[\" || str[0] == \" \")) str = sym_open + str + sym_close;\n                            state = 10;\n                            break;\n                        }\n                    } else if (template[i] == sym_open) count++;\n                    str += template[i];\n                    break;\n                case 14:\n                    if (template[i] == \"\\x00\") throw new Error(\"Parse error: Unexpected end of template\");\n                    if (template[i] == '\"') {\n                        count--;\n                        if (count < 0) throw new Error('Parse error: Unmatched \"');\n                        if (count == 0) {\n                            state = 10;\n                            if (nflush == \"parse-merge\" || nflush == \"parse-merge-alt\" || nflush == \"parse-trim-merge\") break;\n                        }\n                    }\n                    str += template[i];\n                    break;\n                case 15:\n                    if (template[i] == \"\\x00\") throw new Error(\"Parse error: Unexpected end of template\");\n                    if (template[i] == \"'\") {\n                        count--;\n                        if (count < 0) throw new Error(\"Parse error: Unmatched '\");\n                        if (count == 0) {\n                            state = 10;\n                            if (nflush == \"parse-merge\" || nflush == \"parse-merge-alt\" || nflush == \"parse-trim-merge\") break;\n                        }\n                    }\n                    str += template[i];\n                    break;\n                case 16:\n                    if (template[i] == \"\\x00\") throw new Error(\"Parse error: Unexpected end of template\");\n                    if (template[i] == \"`\") {\n                        count--;\n                        if (count < 0) throw new Error(\"Parse error: Unmatched `\");\n                        if (count == 0) {\n                            state = 10;\n                            if (nflush == \"parse-merge\" || nflush == \"parse-merge-alt\" || nflush == \"parse-trim-merge\") break;\n                        }\n                    }\n                    str += template[i];\n                    break;\n            }\n            if (flush) {\n                emit(flush, str);\n                flush = str = \"\";\n            }\n        }\n        if (!is_tpl) {\n            let i = 0;\n            while(i < mparts.length){\n                if (mparts[i].type == \"string\" && mparts[i].data == \"\") mparts.splice(i, 1);\n                else break;\n            }\n            i = mparts.length - 1;\n            while(i > 0){\n                if (mparts[i].type == \"string\" && mparts[i].data == \"\") mparts.splice(i--, 1);\n                else break;\n            }\n            if (mparts.length == 0) mparts.push({\n                type: \"string\",\n                data: \"\"\n            });\n        }\n        if (root) unescape(mparts);\n        return mparts;\n    },\n    /**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/ parse: function(template) {\n        return this.parseTemplate(template.trim(), \"[\", \"]\", false);\n    },\n    /**\n\t**\tRemoves all static parts from a parsed template.\n\t**\n\t**\t>> array clean (array parts);\n\t*/ clean: function(parts) {\n        for(let i = 0; i < parts.length; i++)if (parts[i].type != \"template\") {\n            parts.splice(i, 1);\n            i--;\n        }\n        return parts;\n    },\n    /**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/ expand: function(parts, data, ret = \"text\", mode = \"base-string\") {\n        let s = [];\n        // Expand variable parts.\n        if (mode == \"var\") {\n            let escape = true;\n            let quote = false;\n            let root = data;\n            let last = null;\n            let first = true;\n            let str = \"\";\n            for(let i = 0; i < parts.length && data != null; i++)switch(parts[i].type){\n                case \"identifier\":\n                case \"string\":\n                    str += parts[i].data;\n                    last = null;\n                    break;\n                case \"template\":\n                    last = this.expand(parts[i].data, root, \"arg\", \"template\");\n                    str += typeof last != \"object\" ? last : \"\";\n                    break;\n                case \"base-string\":\n                    str += this.expand(parts[i].data, root, \"arg\", \"base-string\");\n                    last = null;\n                    break;\n                case \"access\":\n                    if (!last || typeof last != \"object\") {\n                        if (str == \"\") str = \"this\";\n                        while(true){\n                            if (str[0] == \"!\") {\n                                str = str.substr(1);\n                                escape = false;\n                            } else if (str[0] == \"$\") {\n                                str = str.substr(1);\n                                quote = true;\n                            } else break;\n                        }\n                        if (str != \"this\" && data != null) {\n                            let tmp = data;\n                            data = str in data ? data[str] : null;\n                            if (data === null && first) {\n                                if (str in $d261ccdafdfe12a9$var$Template.functions) data = $d261ccdafdfe12a9$var$Template.functions[str](null, null, tmp);\n                            }\n                            first = false;\n                        }\n                    } else data = last;\n                    str = \"\";\n                    break;\n            }\n            while(str != \"\"){\n                if (str[0] == \"!\") {\n                    str = str.substr(1);\n                    escape = false;\n                } else if (str[0] == \"$\") {\n                    str = str.substr(1);\n                    quote = true;\n                } else break;\n            }\n            if (str != \"this\") {\n                let failed = false;\n                if (data != null) {\n                    if (!(str in data)) {\n                        failed = true;\n                        data = null;\n                    } else data = data[str];\n                } else failed = true;\n                if (failed && parts.length == 1) {\n                    if ($d261ccdafdfe12a9$var$Template.strict == true) throw new Error(\"Expression function `\" + str + \"` not found.\");\n                }\n            }\n            if (typeof data == \"string\") {\n                if (escape) data = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n                if (quote) data = '\"' + data + '\"';\n            }\n            s.push(data);\n        }\n        // Expand variable parts and returns a reference to it.\n        if (ret == \"varref\") {\n            let root = data;\n            let last = null;\n            let first = true;\n            let str = \"\";\n            for(let i = 0; i < parts.length && data != null; i++)switch(parts[i].type){\n                case \"identifier\":\n                case \"string\":\n                    str += parts[i].data;\n                    last = null;\n                    break;\n                case \"template\":\n                    last = this.expand(parts[i].data, root, \"arg\", \"template\");\n                    str += typeof last != \"object\" ? last : \"\";\n                    break;\n                case \"base-string\":\n                    str += this.expand(parts[i].data, root, \"arg\", \"base-string\");\n                    last = null;\n                    break;\n                case \"access\":\n                    if (!last || typeof last != \"object\") {\n                        if (str == \"\") str = \"this\";\n                        while(true){\n                            if (str[0] == \"!\") str = str.substr(1);\n                            else if (str[0] == \"$\") str = str.substr(1);\n                            else break;\n                        }\n                        if (str != \"this\" && data != null) {\n                            let tmp = data;\n                            data = str in data ? data[str] : null;\n                            if (data === null && first) {\n                                if (str in $d261ccdafdfe12a9$var$Template.functions) data = $d261ccdafdfe12a9$var$Template.functions[str](null, null, tmp);\n                            }\n                            first = false;\n                        }\n                    } else data = last;\n                    str = \"\";\n                    break;\n            }\n            while(str != \"\"){\n                if (str[0] == \"!\") str = str.substr(1);\n                else if (str[0] == \"$\") str = str.substr(1);\n                else break;\n            }\n            return str != \"this\" ? [\n                data,\n                str\n            ] : null;\n        }\n        // Expand function parts.\n        if (mode == \"fn\") {\n            var args = [];\n            args.push($d261ccdafdfe12a9$var$Template.expand(parts[0], data, \"text\", \"base-string\"));\n            if (\"_\" + args[0] in $d261ccdafdfe12a9$var$Template.functions) args[0] = \"_\" + args[0];\n            if (!(args[0] in $d261ccdafdfe12a9$var$Template.functions)) {\n                if ($d261ccdafdfe12a9$var$Template.strict == true) throw new Error(\"Expression function `\" + args[0] + \"` not found.\");\n                return `(Unknown: ${args[0]})`;\n            }\n            if (args[0][0] == \"_\") return $d261ccdafdfe12a9$var$Template.functions[args[0]](parts, data);\n            for(let i = 1; i < parts.length; i++)args.push($d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"arg\", \"base-string\"));\n            s.push($d261ccdafdfe12a9$var$Template.functions[args[0]](args, parts, data));\n        }\n        // Template mode.\n        if (mode == \"template\") {\n            if (parts.length == 1) {\n                if (parts[0].length == 1 && parts[0][0].type == \"string\") return parts[0][0].data;\n                if (parts[0].length == 1 && parts[0][0].type == \"identifier\") {\n                    let name = parts[0][0].data;\n                    if (name in $d261ccdafdfe12a9$var$Template.functions || \"_\" + name in $d261ccdafdfe12a9$var$Template.functions) return $d261ccdafdfe12a9$var$Template.expand(parts, data, ret, \"fn\");\n                }\n                return $d261ccdafdfe12a9$var$Template.expand(parts[0], data, ret, \"var\");\n            }\n            return $d261ccdafdfe12a9$var$Template.expand(parts, data, ret, \"fn\");\n        }\n        // Expand parts.\n        if (mode == \"base-string\") {\n            let index = -1;\n            for (let i of parts){\n                let tmp = null;\n                index++;\n                switch(i.type){\n                    case \"template\":\n                        tmp = $d261ccdafdfe12a9$var$Template.expand(i.data, data, ret, \"template\");\n                        break;\n                    case \"string\":\n                    case \"identifier\":\n                        tmp = i.data;\n                        break;\n                    case \"base-string\":\n                        tmp = $d261ccdafdfe12a9$var$Template.expand(i.data, data, ret, \"base-string\");\n                        break;\n                }\n                if (ret == \"void\") continue;\n                if (ret == \"last\" && index != parts.length - 1) continue;\n                s.push(tmp);\n            }\n        }\n        // Return types for direct objects.\n        if (ret == \"obj\") return s;\n        if (ret == \"last\") {\n            if (typeOf(s) == \"Rose\\\\Arry\") s = s[0];\n            return s;\n        }\n        // When the output is not really needed.\n        if (ret == \"void\") return null;\n        // Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n        if (ret == \"arg\") {\n            if ((0, $fMUO1.default).typeOf(s) == \"array\") {\n                if (s.length != 1) return s.join(\"\");\n                return s[0];\n            }\n            return s;\n        }\n        if (ret == \"text\" && (0, $fMUO1.default).typeOf(s) == \"array\") {\n            let f = (e)=>e != null && typeof e == \"object\" ? \"map\" in e ? e.map(f).join(\"\") : \"join\" in e ? e.join(\"\") : e.toString() : e;\n            s = s.map(f).join(\"\");\n        }\n        return s;\n    },\n    /**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/ compile: function(template) {\n        template = $d261ccdafdfe12a9$var$Template.parse(template);\n        return function(data = null, mode = \"text\") {\n            return $d261ccdafdfe12a9$var$Template.expand(template, data ? data : {}, mode);\n        };\n    },\n    /**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/ eval: function(template, data = null, mode = \"text\") {\n        template = $d261ccdafdfe12a9$var$Template.parse(template);\n        return $d261ccdafdfe12a9$var$Template.expand(template, data ? data : {}, mode);\n    },\n    /**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/ value: function(parts, data = null) {\n        return (0, $fMUO1.default).typeOf(parts) != \"array\" ? parts : $d261ccdafdfe12a9$var$Template.expand(parts, data ? data : {}, \"arg\");\n    },\n    /**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/ register: function(name, fn) {\n        $d261ccdafdfe12a9$var$Template.functions[name] = fn;\n    },\n    /**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/ \"call\": function(name, args, data = null) {\n        if (name in $d261ccdafdfe12a9$var$Template.functions) return $d261ccdafdfe12a9$var$Template.functions[name](args, null, data);\n        return null;\n    },\n    /**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/ getNamedValues: function(parts, data, i = 1, expanded = true) {\n        let s = {};\n        let mode = 0;\n        for(; i < parts.length; i += 2){\n            let key = $d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"arg\");\n            if (!mode) {\n                if (key.startsWith(\":\")) mode = 1;\n                else mode = key.endsWith(\":\") ? 2 : 3;\n            }\n            if (mode == 1) key = key.substr(1);\n            else if (mode == 2) key = key.substr(0, key.length - 1);\n            if (expanded) s[key] = $d261ccdafdfe12a9$var$Template.expand(parts[i + 1], data, \"arg\");\n            else s[key] = parts[i + 1];\n        }\n        return s;\n    }\n};\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/ $d261ccdafdfe12a9$var$Template.functions = {\n    /**\n\t**\tExpression functions.\n\t*/ \"global\": function(args) {\n        return globalThis;\n    },\n    \"null\": function(args) {\n        return null;\n    },\n    \"true\": function(args) {\n        return true;\n    },\n    \"false\": function(args) {\n        return false;\n    },\n    \"len\": function(args) {\n        return args[1].toString().length;\n    },\n    \"int\": function(args) {\n        return ~~args[1];\n    },\n    \"str\": function(args) {\n        return args[1].toString();\n    },\n    \"float\": function(args) {\n        return parseFloat(args[1]);\n    },\n    \"chr\": function(args) {\n        return String.fromCharCode(args[1]);\n    },\n    \"ord\": function(args) {\n        return args[1].toString().charCodeAt(0);\n    },\n    \"not\": function(args) {\n        return !args[1];\n    },\n    \"neg\": function(args) {\n        return -args[1];\n    },\n    \"abs\": function(args) {\n        return Math.abs(args[1]);\n    },\n    \"and\": function(args) {\n        for(let i = 1; i < args.length; i++)if (!args[i]) return false;\n        return true;\n    },\n    \"or\": function(args) {\n        for(let i = 1; i < args.length; i++)if (~~args[i]) return true;\n        return false;\n    },\n    \"eq\": function(args) {\n        return args[1] == args[2];\n    },\n    \"ne\": function(args) {\n        return args[1] != args[2];\n    },\n    \"lt\": function(args) {\n        return args[1] < args[2];\n    },\n    \"le\": function(args) {\n        return args[1] <= args[2];\n    },\n    \"gt\": function(args) {\n        return args[1] > args[2];\n    },\n    \"ge\": function(args) {\n        return args[1] >= args[2];\n    },\n    \"isnotnull\": function(args) {\n        return !!args[1];\n    },\n    \"isnull\": function(args) {\n        return !args[1];\n    },\n    \"iszero\": function(args) {\n        return parseInt(args[1]) == 0;\n    },\n    \"eq?\": function(args) {\n        return args[1] == args[2];\n    },\n    \"ne?\": function(args) {\n        return args[1] != args[2];\n    },\n    \"lt?\": function(args) {\n        return args[1] < args[2];\n    },\n    \"le?\": function(args) {\n        return args[1] <= args[2];\n    },\n    \"gt?\": function(args) {\n        return args[1] > args[2];\n    },\n    \"ge?\": function(args) {\n        return args[1] >= args[2];\n    },\n    \"notnull?\": function(args) {\n        return !!args[1];\n    },\n    \"null?\": function(args) {\n        return !args[1];\n    },\n    \"zero?\": function(args) {\n        return parseInt(args[1]) == 0;\n    },\n    \"typeof\": function(args) {\n        return (0, $fMUO1.default).typeOf(args[1]);\n    },\n    \"*\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x *= args[i];\n        return x;\n    },\n    \"/\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x /= args[i];\n        return x;\n    },\n    \"+\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x -= -args[i];\n        return x;\n    },\n    \"-\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x -= args[i];\n        return x;\n    },\n    \"mul\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x *= args[i];\n        return x;\n    },\n    \"div\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x /= args[i];\n        return x;\n    },\n    \"sum\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x -= -args[i];\n        return x;\n    },\n    \"sub\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x -= args[i];\n        return x;\n    },\n    \"mod\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x %= args[i];\n        return x;\n    },\n    \"pow\": function(args) {\n        let x = args[1];\n        for(let i = 2; i < args.length; i++)x = Math.pow(x, args[i]);\n        return x;\n    },\n    /**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tdump <expr>\n\t*/ \"dump\": function(args) {\n        return JSON.stringify(args[1]);\n    },\n    /**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/ \"_set\": function(parts, data) {\n        for(let i = 1; i + 1 < parts.length; i += 2){\n            let value1 = $d261ccdafdfe12a9$var$Template.value(parts[i + 1], data);\n            if (parts[i].length > 1) {\n                let ref = $d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"varref\");\n                if (ref != null) ref[0][ref[1]] = value1;\n            } else data[$d261ccdafdfe12a9$var$Template.value(parts[i], data)] = value1;\n        }\n        return \"\";\n    },\n    /**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/ \"_unset\": function(parts, data) {\n        for(let i = 1; i < parts.length; i++)if (parts[i].length > 1) {\n            let ref = $d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"varref\");\n            if (ref != null) delete ref[0][ref[1]];\n        } else delete data[$d261ccdafdfe12a9$var$Template.value(parts[i], data)];\n        return null;\n    },\n    /**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/ \"trim\": function(args) {\n        return args[1] ? typeof args[1] == \"object\" ? args[1].map((e)=>e.trim()) : args[1].trim() : \"\";\n    },\n    /**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/ \"upper\": function(args) {\n        return args[1] ? typeof args[1] == \"object\" ? args[1].map((e)=>e.toUpperCase()) : args[1].toUpperCase() : \"\";\n    },\n    /**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/ \"lower\": function(args) {\n        return args[1] ? typeof args[1] == \"object\" ? args[1].map((e)=>e.toLowerCase()) : args[1].toLowerCase() : \"\";\n    },\n    /**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/ \"substr\": function(args) {\n        let s = args[args.length - 1].toString();\n        let start = 0;\n        let count = null;\n        if (args.length == 4) {\n            start = ~~args[1];\n            count = ~~args[2];\n        } else {\n            start = ~~args[1];\n            count = null;\n        }\n        if (start < 0) start += s.length;\n        if (count < 0) count += s.length;\n        if (count === null) count = s.length - start;\n        return s.substr(start, count);\n    },\n    /**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/ \"replace\": function(args) {\n        return args[3].split(args[1]).join(args[2]);\n    },\n    /**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/ \"nl2br\": function(args) {\n        return args[1] ? typeof args[1] == \"object\" ? args[1].map((e)=>e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\") : \"\";\n    },\n    /**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/ \"%\": function(args) {\n        args.shift();\n        var name = args.shift();\n        let s = \"\";\n        for(let i = 0; i < args.length; i++)if ((0, $fMUO1.default).typeOf(args[i]) == \"array\") {\n            s += `<${name}>`;\n            for(let j = 0; j < args[i].length; j++)s += args[i][j];\n            s += `</${name}>`;\n        } else s += `<${name}>${args[i]}</${name}>`;\n        return s;\n    },\n    /**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/ \"%%\": function(args) {\n        args.shift();\n        var name = args.shift();\n        let attr = \"\";\n        let text = \"\";\n        for(let i = 0; i < args.length; i += 2)if (i + 1 < args.length) attr += ` ${args[i]}=\"${args[i + 1]}\"`;\n        else text = args[i];\n        return text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n    },\n    /**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/ \"join\": function(args) {\n        if (args[2] && (0, $fMUO1.default).typeOf(args[2]) == \"array\") return args[2].join(args[1]);\n        return \"\";\n    },\n    /**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/ \"split\": function(args) {\n        if (args[2] && typeof args[2] == \"string\") return args[2].split(args[1]);\n        return [];\n    },\n    /**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/ \"keys\": function(args) {\n        if (args[1] && typeof args[1] == \"object\") return Object.keys(args[1]);\n        return [];\n    },\n    /**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/ \"values\": function(args) {\n        if (args[1] && typeof args[1] == \"object\") return Object.values(args[1]);\n        return [];\n    },\n    /**\n\t**\tConstructs a string obtained by concatenating the expanded template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/ \"_each\": function(parts, data) {\n        let var_name = $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"arg\");\n        let list = $d261ccdafdfe12a9$var$Template.expand(parts[2], data, \"arg\");\n        let s = \"\";\n        let j = 0;\n        if (!list) return s;\n        for(let i in list){\n            data[var_name] = list[i];\n            data[var_name + \"##\"] = j++;\n            data[var_name + \"#\"] = i;\n            s += $d261ccdafdfe12a9$var$Template.expand(parts[3], data, \"text\");\n        }\n        delete data[var_name];\n        delete data[var_name + \"##\"];\n        delete data[var_name + \"#\"];\n        return s;\n    },\n    /**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/ \"_foreach\": function(parts, data) {\n        let var_name = $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"arg\");\n        let list = $d261ccdafdfe12a9$var$Template.expand(parts[2], data, \"arg\");\n        let j = 0;\n        if (!list) return null;\n        for(let i in list){\n            data[var_name] = list[i];\n            data[var_name + \"##\"] = j++;\n            data[var_name + \"#\"] = i;\n            $d261ccdafdfe12a9$var$Template.expand(parts[3], data, \"text\");\n        }\n        delete data[var_name];\n        delete data[var_name + \"##\"];\n        delete data[var_name + \"#\"];\n        return null;\n    },\n    /**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/ \"_?\": function(parts, data) {\n        if ($d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"arg\")) return $d261ccdafdfe12a9$var$Template.expand(parts[2], data, \"arg\");\n        if (parts.length > 3) return $d261ccdafdfe12a9$var$Template.expand(parts[3], data, \"arg\");\n        return \"\";\n    },\n    /**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/ \"_??\": function(parts, data) {\n        let value1 = $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"arg\");\n        if (value1) return value1;\n        return $d261ccdafdfe12a9$var$Template.expand(parts[2], data, \"arg\");\n    },\n    /**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/ \"_if\": function(parts, data) {\n        for(let i = 0; i < parts.length; i += 3){\n            if ($d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"arg\") == \"else\") return $d261ccdafdfe12a9$var$Template.expand(parts[i + 1], data, \"text\");\n            if ($d261ccdafdfe12a9$var$Template.expand(parts[i + 1], data, \"arg\")) return $d261ccdafdfe12a9$var$Template.expand(parts[i + 2], data, \"text\");\n        }\n        return \"\";\n    },\n    /**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/ \"_switch\": function(parts, data) {\n        let value1 = $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"arg\");\n        for(let i = 2; i < parts.length; i += 2){\n            let case_value = $d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"arg\");\n            if (case_value == value1 || case_value == \"default\") return $d261ccdafdfe12a9$var$Template.expand(parts[i + 1], data, \"text\");\n        }\n        return \"\";\n    },\n    /**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/ \"_break\": function(parts, data) {\n        throw new Error(\"EXC_BREAK\");\n    },\n    /**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/ \"_continue\": function(parts, data) {\n        throw new Error(\"EXC_CONTINUE\");\n    },\n    /**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/ \"_repeat\": function(parts, data) {\n        if (parts.length < 3 || (parts.length & 1) != 1) return \"(`repeat`: Wrong number of parameters)\";\n        let var_name = $d261ccdafdfe12a9$var$Template.value(parts[1], data);\n        let count = null;\n        let from = 0, to1 = null;\n        let step = null;\n        for(let i = 2; i < parts.length - 1; i += 2){\n            let value1 = $d261ccdafdfe12a9$var$Template.value(parts[i], data);\n            switch(value1.toLowerCase()){\n                case \"from\":\n                    from = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n                case \"to\":\n                    to1 = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n                case \"count\":\n                    count = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n                case \"step\":\n                    step = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n            }\n        }\n        let tpl = parts[parts.length - 1];\n        let arr = [];\n        if (to1 !== null) {\n            if (step === null) step = from > to1 ? -1 : 1;\n            if (step < 0) {\n                for(let i = from; i >= to1; i += step)try {\n                    data[var_name] = i;\n                    arr.push($d261ccdafdfe12a9$var$Template.value(tpl, data));\n                } catch (e) {\n                    let name = e.message;\n                    if (name == \"EXC_BREAK\") break;\n                    if (name == \"EXC_CONTINUE\") continue;\n                    throw e;\n                }\n            } else {\n                for(let i = from; i <= to1; i += step)try {\n                    data[var_name] = i;\n                    arr.push($d261ccdafdfe12a9$var$Template.value(tpl, data));\n                } catch (e) {\n                    let name = e.message;\n                    if (name == \"EXC_BREAK\") break;\n                    if (name == \"EXC_CONTINUE\") continue;\n                    throw e;\n                }\n            }\n        } else if (count !== null) {\n            if (step === null) step = 1;\n            for(let i = from; count > 0; count--, i += step)try {\n                data[var_name] = i;\n                arr.push($d261ccdafdfe12a9$var$Template.value(tpl, data));\n            } catch (e) {\n                let name = e.message;\n                if (name == \"EXC_BREAK\") break;\n                if (name == \"EXC_CONTINUE\") continue;\n                throw e;\n            }\n        } else {\n            if (step === null) step = 1;\n            for(let i = from;; i += step)try {\n                data[var_name] = i;\n                arr.push($d261ccdafdfe12a9$var$Template.value(tpl, data));\n            } catch (e) {\n                let name = e.message;\n                if (name == \"EXC_BREAK\") break;\n                if (name == \"EXC_CONTINUE\") continue;\n                throw e;\n            }\n        }\n        delete data[var_name];\n        return arr;\n    },\n    /**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/ \"_for\": function(parts, data) {\n        if (parts.length < 3 || (parts.length & 1) != 1) return \"(`for`: Wrong number of parameters)\";\n        let var_name = $d261ccdafdfe12a9$var$Template.value(parts[1], data);\n        let count = null;\n        let from = 0;\n        to = null;\n        let step = null;\n        for(let i = 2; i < parts.length - 1; i += 2){\n            value = $d261ccdafdfe12a9$var$Template.value(parts[i], data);\n            switch(value.toLowerCase()){\n                case \"from\":\n                    from = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n                case \"to\":\n                    to = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n                case \"count\":\n                    count = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n                case \"step\":\n                    step = parseFloat($d261ccdafdfe12a9$var$Template.value(parts[i + 1], data));\n                    break;\n            }\n        }\n        let tpl = parts[parts.length - 1];\n        if (to !== null) {\n            if (step === null) step = from > to ? -1 : 1;\n            if (step < 0) {\n                for(let i = from; i >= to; i += step)try {\n                    data[var_name] = i;\n                    $d261ccdafdfe12a9$var$Template.value(tpl, data);\n                } catch (e) {\n                    let name = e.message;\n                    if (name == \"EXC_BREAK\") break;\n                    if (name == \"EXC_CONTINUE\") continue;\n                    throw e;\n                }\n            } else {\n                for(let i = from; i <= to; i += step)try {\n                    data[var_name] = i;\n                    $d261ccdafdfe12a9$var$Template.value(tpl, data);\n                } catch (e) {\n                    let name = e.message;\n                    if (name == \"EXC_BREAK\") break;\n                    if (name == \"EXC_CONTINUE\") continue;\n                    throw e;\n                }\n            }\n        } else if (count !== null) {\n            if (step === null) step = 1;\n            for(let i = from; count > 0; count--, i += step)try {\n                data[var_name] = i;\n                $d261ccdafdfe12a9$var$Template.value(tpl, data);\n            } catch (e) {\n                let name = e.message;\n                if (name == \"EXC_BREAK\") break;\n                if (name == \"EXC_CONTINUE\") continue;\n                throw e;\n            }\n        } else {\n            if (step === null) step = 1;\n            for(let i = from;; i += step)try {\n                data[var_name] = i;\n                $d261ccdafdfe12a9$var$Template.value(tpl, data);\n            } catch (e) {\n                let name = e.message;\n                if (name == \"EXC_BREAK\") break;\n                if (name == \"EXC_CONTINUE\") continue;\n                throw e;\n            }\n        }\n        delete data[var_name];\n        return null;\n    },\n    /**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/ \"_loop\": function(parts, data) {\n        if (parts.length < 2) return \"(`loop`: Wrong number of parameters)\";\n        let tpl = parts[1];\n        while(true)try {\n            $d261ccdafdfe12a9$var$Template.value(tpl, data);\n        } catch (e) {\n            let name = e.message;\n            if (name == \"EXC_BREAK\") break;\n            if (name == \"EXC_CONTINUE\") continue;\n            throw e;\n        }\n        return null;\n    },\n    /**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/ \"_echo\": function(parts, data) {\n        let s = \"\";\n        for(let i = 1; i < parts.length; i++)s += $d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"arg\");\n        console.log(s);\n        return \"\";\n    },\n    /**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/ \"_#\": function(parts, data) {\n        let s = [];\n        for(let i = 1; i < parts.length; i++)s.push($d261ccdafdfe12a9$var$Template.expand(parts[i], data, \"arg\"));\n        return s;\n    },\n    /**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/ \"_##\": function(parts, data) {\n        let s = [];\n        for(let i = 1; i < parts.length; i++)s.push(parts[i]);\n        return s;\n    },\n    /**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/ \"_&\": function(parts, data) {\n        return $d261ccdafdfe12a9$var$Template.getNamedValues(parts, data, 1, true);\n    },\n    /**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/ \"_&&\": function(parts, data) {\n        return $d261ccdafdfe12a9$var$Template.getNamedValues(parts, data, 1, false);\n    },\n    /**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/ \"contains\": function(args, parts, data) {\n        let value1 = args[1];\n        if (typeof value1 != \"object\") {\n            data.err = \"Argument is not a Map\";\n            return false;\n        }\n        let s = \"\";\n        for(let i = 2; i < args.length; i++)if (!(args[i] in value1)) s += \", \" + args[i];\n        if (s != \"\") {\n            data.err = s.substr(1);\n            return false;\n        }\n        return true;\n    },\n    /**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/ \"has\": function(args, parts, data) {\n        let value1 = args[2];\n        if ((0, $fMUO1.default).typeOf(value1) != \"object\") return false;\n        return args[1] in value1;\n    },\n    /**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/ \"_map\": function(parts, data) {\n        let var_name = $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"arg\");\n        let list = $d261ccdafdfe12a9$var$Template.expand(parts[2], data, \"arg\");\n        if (!list) return list;\n        let arrayMode = (0, $fMUO1.default).typeOf(list) == \"array\" ? true : false;\n        let output = arrayMode ? [] : {};\n        let j = 0;\n        for(let i in list){\n            data[var_name] = list[i];\n            data[var_name + \"##\"] = j++;\n            data[var_name + \"#\"] = i;\n            if (arrayMode) output.push($d261ccdafdfe12a9$var$Template.expand(parts[3], data, \"arg\"));\n            else output[i] = $d261ccdafdfe12a9$var$Template.expand(parts[3], data, \"arg\");\n        }\n        delete data[var_name];\n        delete data[var_name + \"##\"];\n        delete data[var_name + \"#\"];\n        return output;\n    },\n    /**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/ \"_filter\": function(parts, data) {\n        let var_name = $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"arg\");\n        let list = $d261ccdafdfe12a9$var$Template.expand(parts[2], data, \"arg\");\n        if (!list) return list;\n        let arrayMode = (0, $fMUO1.default).typeOf(list) == \"array\" ? true : false;\n        let output = arrayMode ? [] : {};\n        let j = 0;\n        for(let i in list){\n            data[var_name] = list[i];\n            data[var_name + \"##\"] = j++;\n            data[var_name + \"#\"] = i;\n            if (~~$d261ccdafdfe12a9$var$Template.expand(parts[3], data, \"arg\")) {\n                if (arrayMode) output.push(list[i]);\n                else output[i] = list[i];\n            }\n        }\n        delete data[var_name];\n        delete data[var_name + \"##\"];\n        delete data[var_name + \"#\"];\n        return output;\n    },\n    /**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/ \"expand\": function(args, parts, data) {\n        return $d261ccdafdfe12a9$var$Template.expand($d261ccdafdfe12a9$var$Template.parseTemplate(args[1], \"{\", \"}\"), args.length == 3 ? args[2] : data);\n    },\n    /**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/ \"_call\": function(parts, data) {\n        let ref = $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"varref\");\n        if (!ref || typeof ref[0][ref[1]] != \"function\") throw new Error(\"Expression is not a function: \" + $d261ccdafdfe12a9$var$Template.expand(parts[1], data, \"obj\").map((i)=>i == null ? \".\" : i).join(\"\"));\n        let args = [];\n        for(let i = 2; i < parts.length; i++)args.push($d261ccdafdfe12a9$var$Template.value(parts[i], data));\n        return ref[0][ref[1]](...args);\n    }\n};\nvar $d261ccdafdfe12a9$export$2e2bcd8739ae039 = $d261ccdafdfe12a9$var$Template;\n\n\nconst $9ffb7151b8b2d038$export$eefcfe56efaaa57d = (0, $fMUO1.default);\nconst $9ffb7151b8b2d038$export$4c85e640eb41c31b = (0, $2394d727dfd6a212$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$d61e24a684f9e51 = (0, $13eda5a5dec8010f$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$ec8b666c5fe2c75a = (0, $c43adaf9cb6d6dd3$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$a1edc412be3e1841 = (0, $4dfa0622e14576ea$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$59eced47f477f85a = (0, $0890bed8a163f087$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$19342e026b58ebb7 = (0, $2710795e2347ba2a$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$3a9581c9ade29768 = (0, $32651d5f38a8a64c$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$fb8073518f34e6ec = (0, $2bcce06113365814$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$14416b8d99d47caa = (0, $d261ccdafdfe12a9$export$2e2bcd8739ae039);\n\n\nexport {$9ffb7151b8b2d038$export$eefcfe56efaaa57d as Rinn, $9ffb7151b8b2d038$export$4c85e640eb41c31b as Class, $9ffb7151b8b2d038$export$d61e24a684f9e51 as Event, $9ffb7151b8b2d038$export$ec8b666c5fe2c75a as EventDispatcher, $9ffb7151b8b2d038$export$a1edc412be3e1841 as Model, $9ffb7151b8b2d038$export$59eced47f477f85a as ModelList, $9ffb7151b8b2d038$export$19342e026b58ebb7 as Schema, $9ffb7151b8b2d038$export$3a9581c9ade29768 as Flattenable, $9ffb7151b8b2d038$export$fb8073518f34e6ec as Collection, $9ffb7151b8b2d038$export$14416b8d99d47caa as Template};\n//# sourceMappingURL=rinn.m.js.map\n","\nimport Rinn from './alpha.js';\nimport Regex from './model-regex.js';\n\n/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/\n\nexport default\n{\n\t/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/\n\t_getref: function (value, obj)\n\t{\n\t\tif (typeof(value) == \"string\")\n\t\t{\n\t\t\tif (value.substr(0, 1) == \"#\")\t\t\tvalue = obj.get(value.substr(1));\n\t\t\telse if (value.substr(0, 1) == \"@\")\t\tvalue = obj[value.substr(1)];\n\n\t\t\tif (typeof(value) == \"string\")\n\t\t\t\treturn eval(value);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/\n\ttype: function (model, ctval, name, value)\n\t{\n\t\tswitch (ctval)\n\t\t{\n\t\t\tcase \"int\":\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"float\":\n\t\t\t\tvalue = parseFloat(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = (value === null || value === undefined) ? \"\" : value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase \"bit\":\n\t\t\t\tif (value === true || value === false) {\n\t\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"array\":\n\t\t\t\tif (Rinn.typeOf(value) == \"array\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"bool\":\n\t\t\t\tif (value === \"true\" || value === true) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value === \"false\" || value === false) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/\n\tmodel: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!mclass) throw new Error (ctval);\n\n\t\tif (!value)\n\t\t\treturn new mclass();\n\n\t\treturn mclass.ensure (value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified class.\n\t*/\n\tcls: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) return new mclass();\n\n\t\treturn Rinn.ensureTypeOf(mclass, value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/\n\tarrayof: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) value = [];\n\n\t\tif (!mclass || Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t\tvalue[i] = Rinn.ensureTypeOf(mclass, value[i]);\n\t\t\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/\n\tarraynull: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rinn.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (ctval) return value;\n\n\t\tif (Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/\n\tarraycompliant: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rinn.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (!ctval) return value;\n\n\t\tif (Rinn.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!value[i].isCompliant())\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the presense of the field.\n\t*/\n\trequired: function (model, ctval, name, value)\n\t{\n\t\tif (value === null || value === undefined)\n\t\t\tthrow new Error (ctval ? \"\" : \"null\");\n\n\t\tswitch (Rinn.typeOf(value))\n\t\t{\n\t\t\tcase \"array\":\n\t\t\t\tif (value.length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (value.toString().length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum length of the field.\n\t*/\n\tminlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum length of the field.\n\t*/\n\tmaxlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum value of the field.\n\t*/\n\tminval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum value of the field.\n\t*/\n\tmaxval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/\n\tmincount: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(value) != \"array\" || value.length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/\n\tmaxcount: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(value) != \"array\" || value.length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/\n\tpattern: function (model, ctval, name, value)\n\t{\n\t\tif (!Regex[ctval].test (value.toString()))\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/\n\tinset: function (model, ctval, name, value)\n\t{\n\t\tif (Rinn.typeOf(ctval) != \"array\")\n\t\t{\n\t\t\tif (!new RegExp(\"^(\"+ctval.toString()+\")$\").test (value.toString()))\n\t\t\t\tthrow new Error (ctval);\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (ctval.indexOf(value.toString()) == -1)\n\t\t\tthrow new Error (ctval.join(\"|\"));\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tSets the field to upper case.\n\t*/\n\tupper: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toUpperCase() : value;\n\t},\n\n\n\t/**\n\t**\tSets the field to lower case.\n\t*/\n\tlower: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toLowerCase() : value;\n\t}\n};\n","\r\nconst Rinn = { };\r\nexport default Rinn;\r\n\r\n/*\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/\r\nRinn.invokeLater = function (fn)\r\n{\r\n\tif (fn) setTimeout (function() { fn(); }, 10);\r\n};\r\n\r\n\r\n/*\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/\r\nRinn.wait = function (millis)\r\n{\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tsetTimeout (resolve, millis);\r\n\t});\r\n};\r\n\r\n\r\n/*\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/\r\nRinn.typeOf = function (o)\r\n{\r\n\tif (o instanceof Array)\r\n\t\treturn \"array\";\r\n\r\n\tif (o === null)\r\n\t\treturn \"null\";\r\n\r\n\treturn (typeof(o)).toString().toLowerCase();\r\n};\r\n\r\n\r\n/*\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/\r\nRinn.isArrayOrObject = function (o)\r\n{\r\n\tswitch (Rinn.typeOf(o))\r\n\t{\r\n\t\tcase \"array\": case \"object\":\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/*\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/\r\nRinn.clone = function (elem)\r\n{\r\n\tlet o = Rinn.typeOf(elem);\r\n\r\n\tif (o === 'array')\r\n\t{\r\n\t\to = [ ];\r\n\r\n\t\tfor (let i = 0; i < elem.length; i++)\r\n\t\t\to.push (Rinn.clone(elem[i]));\r\n\t}\r\n\telse if (o === 'object')\r\n\t{\r\n\t\tif (('clone' in elem) && typeof(elem.clone) === 'function')\r\n\t\t\treturn elem.clone();\r\n\r\n\t\to = { };\r\n\r\n\t\tfor (let i in elem)\r\n\t\t\to[i] = Rinn.clone(elem[i]);\r\n\t}\r\n\telse\r\n\t{\r\n\t\to = elem;\r\n\t}\r\n\r\n\treturn o;\r\n};\r\n\r\n\r\n/*\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/\r\nRinn.merge = function (output, ...objs)\r\n{\r\n\tif (Rinn.typeOf(output) == \"array\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet arr = objs[i];\r\n\r\n\t\t\tif (Rinn.typeOf(arr) != \"array\")\r\n\t\t\t{\r\n\t\t\t\toutput.push(arr);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.push(Rinn.clone(arr[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (Rinn.typeOf(output) == \"object\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet obj = objs[i];\r\n\t\t\tif (Rinn.typeOf(obj) != \"object\") continue;\r\n\r\n\t\t\tfor (let field in obj)\r\n\t\t\t{\r\n\t\t\t\tif (Rinn.isArrayOrObject(obj[field]))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (field in output)\r\n\t\t\t\t\t\tRinn.merge(output[field], obj[field]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput[field] = Rinn.clone(obj[field]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toutput[field] = obj[field];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/\r\nRinn.override = function (output, ...objs)\r\n{\r\n\tfor (let i = 0; i < objs.length; i++)\r\n\t{\r\n\t\tfor (let j in objs[i])\r\n\t\t{\r\n\t\t\toutput[j] = objs[i][j];\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/\r\nRinn.partialCompare = function (full, partial)\r\n{\r\n\tif (full == null || partial == null) return false;\r\n\r\n\tif (full === partial)\r\n\t\treturn true;\r\n\r\n\tfor (var i in partial)\r\n\t{\r\n\t\tif (full[i] != partial[i])\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/\r\nRinn.arrayFind = function (arr, o, getObject)\r\n{\r\n\tfor (var i = 0; arr && i < arr.length; i++)\r\n\t{\r\n\t\tif (this.partialCompare (arr[i], o))\r\n\t\t\treturn getObject ? arr[i] : i;\r\n\t}\r\n\r\n\treturn getObject ? null : false;\r\n};\r\n\r\n\r\n/*\r\n**\tVerifies if the specified object is of class `m`, returns boolean.\r\n**\r\n**\t>> bool isTypeOf (object obj, class _class);\r\n*/\r\nRinn.isInstanceOf = function (obj, _class)\r\n{\r\n\tif (!obj || !_class || typeof(obj) !== 'object')\r\n\t\treturn false;\r\n\r\n\tif (obj instanceof _class)\r\n\t\treturn true;\r\n\r\n\tif ('isInstanceOf' in obj)\r\n\t\treturn obj.isInstanceOf(_class);\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/\r\nRinn.indexOf = function (container, value, forceArray=false)\r\n{\r\n\tif (forceArray)\r\n\t{\r\n\t\tfor (let i = 0; i < container.length; i++)\r\n\t\t{\r\n\t\t\tif (container[i] === value)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfor (let i in container)\r\n\t{\r\n\t\tif (container[i] === value)\r\n\t\t\treturn i;\r\n\t}\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n/*\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/\r\nRinn.escape = function (str)\r\n{\r\n\treturn (str+\"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n};\r\n\r\n\r\n/*\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/\r\nRinn.ensureTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn o;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn o;\r\n\t}\r\n\r\n\treturn new m (o);\r\n};\r\n\r\n\r\n/*\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/\r\nRinn.serialize = function (o)\r\n{\r\n\treturn JSON.stringify(o);\r\n};\r\n\r\n\r\n/*\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/\r\nRinn.deserialize = function (s)\r\n{\r\n\treturn JSON.parse(s);\r\n};\r\n\r\n\r\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRinn.hookAppend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName];\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tif (oldFunction.apply (this, args) !== false)\r\n\t\t\t\treturn newFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\toldFunction.apply (this, args);\r\n\t\t\treturn newFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n/*\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRinn.hookPrepend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName];\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tif (newFunction.apply (this, args) !== false)\r\n\t\t\t\treturn oldFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = function (...args) {\r\n\t\t\tnewFunction.apply (this, args);\r\n\t\t\treturn oldFunction.apply (this, args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n","\n/**\n**\tCommon regular expressions for pattern validation.\n*/\n\nexport default\n{\n\temail: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n\turl: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n\turlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n\tname: /^[-A-Za-z0-9_.]+$/,\n\tuname: /^['\\pL\\pN ]+$/,\n\ttext: /^[^&<>{}]*$/,\n\tutext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n","\r\nimport _Rinn from './alpha.js';\r\nimport _Class from './class.js';\r\nimport _Event from './event.js';\r\nimport _EventDispatcher from './event-dispatcher.js';\r\nimport _Model from './model.js';\r\nimport _ModelList from './model-list.js';\r\nimport _Schema from './schema.js';\r\nimport _Flattenable from './flattenable.js';\r\nimport _Collection from './collection.js';\r\nimport _Template from './template.js';\r\n\r\nexport const Rinn = _Rinn;\r\nexport const Class = _Class;\r\nexport const Event = _Event;\r\nexport const EventDispatcher = _EventDispatcher;\r\nexport const Model = _Model;\r\nexport const ModelList = _ModelList;\r\nexport const Schema = _Schema;\r\nexport const Flattenable = _Flattenable;\r\nexport const Collection = _Collection;\r\nexport const Template = _Template;\r\n","\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n * Base class used to create other classes with complex prototype based multiple inheritance while at the\r\n * same time avoiding the prototype chain for faster access. Supports calling parent class methods.\r\n */\r\n\r\n//!class Class\r\nconst Class = function ()\r\n{\r\n};\r\n\r\n/**\r\n * Reference to the class itself.\r\n */\r\nClass._class = Class;\r\n\r\n/**\r\n * Contains the methods of each of the super classes.\r\n */\r\nClass._super = { };\r\n\r\n/**\r\n * Name of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n * !readonly string className;\r\n */\r\nClass.prototype.className = 'Class';\r\n\r\n/**\r\n * Class constructor, should initialize the instance. Invoked when the `new` keyword is used with the class.\r\n * !constructor();\r\n */\r\nClass.prototype.__ctor = function ()\r\n{\r\n};\r\n\r\n/**\r\n * Class destructor, should clear the instance and release any used resources, invoked when the global `dispose` function is called with an instance as parameter.\r\n * !__dtor() : void;\r\n */\r\nClass.prototype.__dtor = function ()\r\n{\r\n};\r\n\r\n/**\r\n * Returns true if the object is an instance of the specified class, the parameter can be a class name (string), a constructor (function) or\r\n * a class instance (object), in any cases the appropriate checks will be done.\r\n * !isInstanceOf (className: string|function|object) : boolean;\r\n */\r\nClass.prototype.isInstanceOf = function (className)\r\n{\r\n\tif (className === null)\r\n\t\treturn false;\r\n\r\n\tif (typeof(className) === 'function')\r\n\t{\r\n\t\tclassName = className.prototype.className;\r\n\t}\r\n\telse if (typeof(className) !== 'string')\r\n\t{\r\n\t\tclassName = className.__proto__.className;\r\n\t}\r\n\r\n\treturn this.className === className ? true : this._super.hasOwnProperty(className);\r\n};\r\n\r\n/**\r\n * Returns true if the given object is an instance of the specified class, the parameter can be a class name (string), a constructor (function)\r\n * or a class instance (object), in any cases the appropriate checks will be done.\r\n * !instanceOf (object: object, className: string|function|object) : boolean;\r\n */\r\nClass.instanceOf = function (object, className)\r\n{\r\n\tif (object === null || className === null)\r\n\t\treturn false;\r\n\r\n\treturn object.isInstanceOf(className);\r\n};\r\n\r\n/**\r\n * Internal method to ensure the _super field of an instance has all functions properly bound to the instance.\r\n */\r\nClass.prototype._initSuperRefs = function ()\r\n{\r\n\tlet _super = this.constructor._super;\r\n\tlet _newSuper = { };\r\n\r\n\tconst self = this;\r\n\r\n\tfor (let i in _super)\r\n\t{\r\n\t\tlet o = { };\r\n\r\n\t\tlet _prot = _super[i].prototype;\r\n\t\tfor (let j in _prot)\r\n\t\t{\r\n\t\t\tif (Rinn.typeOf(_prot[j]) !== 'function')\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\to[j] = (function(fn)\r\n\t\t\t{\r\n\t\t\t\treturn function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {\r\n\t\t\t\t\treturn fn.call(self, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\n\t\t\t\t};\r\n\t\t\t})\r\n\t\t\t(_prot[j]);\r\n\t\t}\r\n\r\n\t\t_newSuper[i] = o;\r\n\t}\r\n\r\n\tthis._super = _newSuper;\r\n};\r\n\r\n\r\n/*\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/\r\nClass.inherit = function (proto)\r\n{\r\n\tlet self = this._class;\r\n\r\n\tlet _super = self._super;\r\n\tlet _class = self._class;\r\n\r\n\tif (Rinn.typeOf(proto) === 'function')\r\n\t{\r\n\t\t// Move constants (uppercased properties) to the class-level instead of prototype-level.\r\n\t\tfor (let i in proto._class)\r\n\t\t\tif (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\r\n\r\n\t\t// Combine methods and properties.\r\n\t\tRinn.override (self.prototype, proto._class.prototype);\r\n\r\n\t\t// Combine super references.\r\n\t\tRinn.override (_super, proto._class._super);\r\n\r\n\t\t// Add new super reference if className specified in inherited prototypes.\r\n\t\tif (proto._class.prototype.className)\r\n\t\t\t_super[proto._class.prototype.className] = proto._class;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tRinn.override (self.prototype, proto);\r\n\t}\r\n\r\n\tself._super = _super;\r\n\tself._class = _class;\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\n/**\r\n * Internal method used to extend a class with one or more prototypes.\r\n */\r\nClass.prototype._extend = function (base, protos)\r\n{\r\n\tif (protos.length === 0)\r\n\t\treturn base;\r\n\r\n\t//VIOLET OPTIMIZE\r\n\tconst _class = function (...args)\r\n\t{\r\n\t\tthis._initSuperRefs();\r\n\t\tthis.__ctor.apply(this, args);\r\n\t};\r\n\r\n\t_class._class = _class;\r\n\t_class._super = { };\r\n\r\n\tClass.inherit.call (_class, base);\r\n\tdelete _class.prototype.className;\r\n\r\n\tfor (let i = 0; i < protos.length; i++)\r\n\t\t_class.inherit (protos[i]);\r\n\r\n\tdelete _class._super.Class;\r\n\r\n\tif ('classInit' in _class.prototype)\r\n\t\t_class.prototype.classInit();\r\n\r\n\t_class.isInstance = function(value) {\r\n\t\treturn Rinn.isInstanceOf(value, _class);\r\n\t};\r\n\r\n\treturn _class;\r\n};\r\n\r\n\r\n/**\r\n * Creates a new class with the specified prototypes each of which can be a class constructor (function) or an object.\r\n */\r\nClass.extend = function (...protos)\r\n{\r\n\treturn this._class.prototype._extend (this, protos);\r\n};\r\n\r\n\r\n/**\r\n * Creates a new instance of a class resulting from extending the self class with the specified prototype.\r\n */\r\nClass.create = function (proto)\r\n{\r\n\treturn new (this.extend(proto)) ();\r\n};\r\n\r\n/**\r\n * Mutates the host object to be an instance of the specified class.\r\n * !static mutate (classConstructor: object, host: object, override?: object) : object;\r\n */\r\nClass.mutate = function (classConstructor, host, override=null)\r\n{\r\n\tlet zombie = new classConstructor ();\r\n\r\n\t// Copy all members from the class prototype.\r\n\tfor (let i in classConstructor.prototype)\r\n\t{\r\n\t\tif (host.hasOwnProperty(i))\r\n\t\t\tcontinue;\r\n\t\r\n\t\thost[i] = classConstructor.prototype[i];\r\n\t}\r\n\t\r\n\t// Copy all members from the zombie class instance.\r\n\tfor (let i in zombie)\r\n\t{\r\n\t\tif (host.hasOwnProperty(i))\r\n\t\t\tcontinue;\r\n\t\r\n\t\thost[i] = zombie[i];\r\n\t}\r\n\r\n\t// Rebind the super references.\r\n\tif (host._super)\r\n\t{\r\n\t\tfor (let i in host._super)\r\n\t\t{\r\n\t\t\tfor (let j in host._super[i]) {\r\n\t\t\t\thost._super[i][j] = classConstructor.prototype.constructor._super[i].prototype[j].bind(host);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Copy override members.\r\n\tif (override !== null) {\r\n\t\tfor (let i in override)\r\n\t\t\thost[i] = override[i];\r\n\t}\r\n\r\n\treturn host;\r\n};\r\n\r\nexport default Class;\r\n","\r\nimport Rinn from './alpha.js';\r\nimport Class from './class.js';\r\n\r\n/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Event\",\r\n\r\n\t/**\r\n\t**\tSource of the event.\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t**\tName of the event.\r\n\t*/\r\n\tname: null,\r\n\r\n\t/**\r\n\t**\tArguments of the event.\r\n\t*/\r\n\targs: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/\r\n\t_async: false,\r\n\r\n\t/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/\r\n\tlist: null,\r\n\r\n\t/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/\r\n\tnext: null,\r\n\r\n\t/**\r\n\t**\tReturn values from event handlers.\r\n\t*/\r\n\tret: null,\r\n\r\n\t/**\r\n\t**\tOriginal root event.\r\n\t*/\r\n\toriginal: null,\r\n\r\n\t/**\r\n\t**\tIndex of the current event handler.\r\n\t*/\r\n\ti: -1,\r\n\r\n\t/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/\r\n\t__ctor: function (source, list, eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.name = eventName;\r\n\t\tthis.args = eventArgs;\r\n\r\n\t\tthis.cbHandler = cbHandler;\r\n\t\tthis.cbContext = cbContext;\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.next = null;\r\n\t\tthis.ret = [];\r\n\r\n\t\tthis._async = false;\r\n\t\tthis.i = -1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tChanges the source of the event.\r\n\t**\r\n\t**\tEvent setSource (object value);\r\n\t*/\r\n\tsetSource: function (value)\r\n\t{\r\n\t\tthis.source = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/\r\n\twait: function ()\r\n\t{\r\n\t\tthis._async = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/\r\n\tresume: function ()\r\n\t{\r\n\t\tthis._async = false;\r\n\r\n\t\twhile (!this._async)\r\n\t\t{\r\n\t\t\tif (++this.i >= this.list.length)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this.list[this.i].silent)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rinn.typeOf(this.list[this.i].handler) == \"string\")\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].context)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.list[this.i].context[this.list[this.i].handler])\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tif (this.list[this.i].context[this.list[this.i].handler] (this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (global[this.list[this.i].handler].call (null, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].handler.call (this.list[this.i].context, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._async)\r\n\t\t\treturn this;\r\n\r\n\t\tif (this.i >= this.list.length && this.next) this.next.resume();\r\n\r\n\t\tif (this.cbHandler)\r\n\t\t\tthis.cbHandler.call (this.cbContext);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/\r\n\tfrom: function (event)\r\n\t{\r\n\t\tthis.original = event;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/\r\n\tenqueue: function (event)\r\n\t{\r\n\t\tif (!event) return this;\r\n\r\n\t\tvar evt;\r\n\t\tfor (evt = this; evt.next != null; evt = evt.next);\r\n\r\n\t\tevt.next = event;\r\n\t\tevent.from (this);\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n","\r\nimport Class from './class.js';\r\nimport Event from './event.js';\r\n\r\n/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"EventDispatcher\",\r\n\r\n\t/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/\r\n\tlisteners: null,\r\n\r\n\t/**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/\r\n\tnamespace: null,\r\n\r\n\t/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/\r\n\t__ctor: function ()\r\n\t{\r\n\t\tthis.listeners = { };\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/\r\n\tsetNamespace: function (value)\r\n\t{\r\n\t\tthis.namespace = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/\r\n\taddEventListener: function (eventName, handler, context, data)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (!this.listeners[name])\r\n\t\t\tthis.listeners[name] = [];\r\n\r\n\t\tthis.listeners[name].push ({ ns: ns, handler: handler, context: context, data: data, silent: 0 });\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/\r\n\tremoveEventListener: function (eventName, handler, context)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar k = true;\r\n\r\n\t\t\t\t\tif (handler)\r\n\t\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\t\tif (context)\r\n\t\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\t\tif (ns)\r\n\t\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar k = true;\r\n\r\n\t\t\t\tif (handler)\r\n\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\tif (context)\r\n\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\tif (ns)\r\n\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tprepareEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tvar list = [];\r\n\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (this.listeners[name])\r\n\t\t\tlist = list.concat (this.listeners[name]);\r\n\r\n\t\tif (this.listeners[\"*\"])\r\n\t\t\tlist = list.concat (this.listeners[\"*\"]);\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tif (list[i].silent) list.splice (i--, 1);\r\n\r\n\t\tif (ns)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\tif (list[i].ns != ns) list.splice (i--, 1);\r\n\t\t}\r\n\r\n\t\treturn new Event (this, list, name, eventArgs, cbHandler, cbContext);\r\n\t},\r\n\r\n\t/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/\r\n\tsilence: function (eventName, value)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tvalue = value === false ? -1 : 1;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlist[i].silent += value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tlist[i].silent += value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tdispatchEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\treturn this.prepareEvent(this.namespace ? this.namespace+':'+eventName : eventName, eventArgs, cbHandler, cbContext).resume();\r\n\t}\r\n});\r\n","\nimport Rinn from './alpha.js';\nimport EventDispatcher from './event-dispatcher.js';\n\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/\n\nlet _Model = EventDispatcher.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"Model\",\n\n\t/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/\n\tdefaults: null,\n\n\t/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/\n\tconstraints: null,\n\n\t/**\n\t**\tProperties of the model.\n\t*/\n\tdata: null,\n\n\t/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/\n\tchangedList: null,\n\n\t/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/\n\t_silent: 0,\n\n\t/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/\n\t_level: 0,\n\n\t/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/\n\t__ctor: function (data, defaults)\n\t{\n\t\tthis._super.EventDispatcher.__ctor();\n\n\t\tthis.data = { };\n\n\t\tif (defaults != null)\n\t\t{\n\t\t\tthis.reset (defaults, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet o = null;\n\n\t\t\tif (!this.defaults && this.constraints)\n\t\t\t{\n\t\t\t\to = { };\n\n\t\t\t\tfor (let i in this.constraints)\n\t\t\t\t{\n\t\t\t\t\tlet j = this.constraints[i];\n\t\t\t\t\tif (j.def === null || j.def === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\to[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof(j.def) === 'function')\n\t\t\t\t\t\to[i] = j.def();\n\t\t\t\t\telse\n\t\t\t\t\t\to[i] = j.def;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset(o);\n\t\t}\n\n\t\tthis.init();\n\n\t\tif (data != null)\n\t\t\tthis.set (data, true);\n\n\t\tif (this.constraints) this.update();\n\n\t\tthis.ready();\n\t},\n\n\t/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/\n\treset: function (defaults, nsilent)\n\t{\n\t\tif (!this.defaults)\n\t\t{\n\t\t\tif (!defaults || (Rinn.typeOf(defaults) !== 'object' && Rinn.typeOf(defaults) !== 'function'))\n\t\t\t\treturn this;\n\n\t\t\tthis.defaults = defaults;\n\t\t}\n\n\t\tif (Rinn.typeOf(this.defaults) === 'function')\n\t\t\tthis.data = this.defaults();\n\t\telse\n\t\t\tthis.data = Rinn.clone(this.defaults);\n\n\t\treturn (nsilent === false || defaults === false) ? this : this.update(null, true);\n\t},\n\n\t/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/\n\tinit: function ()\n\t{\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t},\n\n\t/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/\n\tsilent: function (value)\n\t{\n\t\tthis._silent += value ? 1 : -1;\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/\n\t_validate: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t\treturn value;\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tthrow new Error (`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn nvalue;\n\t},\n\n\t/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/\n\t_set: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t{\n\t\t\tthis.data[name] = value;\n\t\t\treturn value;\n\t\t}\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar cvalue = this.data[name];\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!this._silent)\n\t\t\t\t\tthis.dispatchEvent (\"constraintError\", { constraint: ctname, message: e.message, name: name, value: value });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn (this.data[name] = nvalue);\n\t},\n\n\t/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/\n\t_propertyEvent: function (name, prev, value, direct)\n\t{\n\t\tvar temp = { name: name, old: prev, value: value, level: this._level };\n\n\t\tvar evt = this.dispatchEvent (\"propertyChanging\", temp);\n\n\t\tif (!direct)\n\t\t\ttemp.value = this._set (name, temp.value);\n\t\telse\n\t\t\tthis.data[name] = temp.value;\n\n\t\tif (evt != null && evt.ret.length && evt.ret[0] === false)\n\t\t\treturn;\n\n\t\tthis.dispatchEvent (\"propertyChanged.\" + name, temp);\n\t\tthis.dispatchEvent (\"propertyChanged\", temp);\n\n\t\tthis.changedList.push (name);\n\t},\n\n\t/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/\n\tset: function ()\n\t{\n\t\tvar n = arguments.length;\n\t\tvar force = false, silent = false;\n\n\t\tif ((n > 2 || (n == 2 && Rinn.typeOf(arguments[0]) == \"object\")) && Rinn.typeOf(arguments[n-1]) == \"boolean\")\n\t\t{\n\t\t\tforce = arguments[--n];\n\t\t\tif (force === false) silent = true;\n\t\t}\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (n == 2)\n\t\t{\n\t\t\tif (this.data[arguments[0]] !== arguments[1] || force)\n\t\t\t{\n\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\tthis._propertyEvent (arguments[0], this.data[arguments[0]], this._validate (arguments[0], arguments[1]));\n\t\t\t\telse\n\t\t\t\t\tthis._set (arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in arguments[0])\n\t\t\t{\n\t\t\t\tif (this.data[i] !== arguments[0][i] || force)\n\t\t\t\t{\n\t\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\t\tthis._propertyEvent (i, this.data[i], this._validate (i, arguments[0][i]));\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._set (i, arguments[0][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !silent && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns true if the given key exists in the model.\n\t**\n\t**\t>> boolean has (string name);\n\t*/\n\thas: function (name)\n\t{\n\t\treturn name in this.data;\n\t},\n\n\t/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/\n\tget: function (name, def)\n\t{\n\t\tif (arguments.length == 0 || name === false)\n\t\t\treturn this.data;\n\n\t\tif (arguments.length == 1 && name === true)\n\t\t\treturn this.flatten ();\n\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : this.data[name];\n\n\t\treturn this.data[name];\n\t},\n\n\t/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/\n\tgetInt: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseInt (this.data[name]);\n\n\t\treturn parseInt (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/\n\tgetFloat: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseFloat (this.data[name]);\n\n\t\treturn parseFloat (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/\n\tgetBool: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\tname = this.data[name] === undefined ? def : this.data[name];\n\t\telse\n\t\t\tname = this.data[name];\n\n\t\tif (name === \"true\" || name === true)\n\t\t\treturn true;\n\n\t\tif (name === \"false\" || name === false)\n\t\t\treturn false;\n\n\t\treturn parseInt (name) ? true : false;\n\t},\n\n\t/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/\n\tgetReference: function (name)\n\t{\t\n\t\tvar m = this;\n\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\treturn m.get(name);\n\t\t\t},\n\n\t\t\tset: function(value) {\n\t\t\t\tm.set(name, value);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/\n\tconstraint: function (field, constraint, value)\n\t{\n\t\tif (arguments.length == 3 || arguments.length == 2 || (arguments.length == 1 && Rinn.typeOf(field) == \"object\"))\n\t\t{\n\t\t\tif (this.constraints === this.constructor.prototype.constraints)\n\t\t\t\tthis.constraints = Rinn.clone (this.constraints);\n\n\t\t\tswitch (arguments.length)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tRinn.override (this.constraints, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tRinn.override (this.constraints[field], constraint);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.constraints[field][constraint] = value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn !field ? this : this.constraints[field];\n\t},\n\n\t/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/\n\tflatten: function (safe, rsafe)\n\t{\n\t\tif (safe)\n\t\t{\n\t\t\tvar data = this.flatten(false, true);\n\t\t\tif (data == null) return null;\n\n\t\t\tdata[\"class\"] = this.classPath;\n\t\t\treturn data;\n\t\t}\n\n\t\tif (!this.constraints && !this.defaults)\n\t\t\treturn this.data;\n\n\t\tif (!this.isCompliant())\n\t\t\treturn { };\n\n\t\tvar constraints = this.constraints;\n\t\tvar keys = this.defaults ? (Rinn.typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults) : this.constraints;\n\n\t\tvar data = { };\n\n\t\tfor (var i in this.data)\n\t\t{\n\t\t\tif (!(i in keys)) continue;\n\n\t\t\tif (constraints && constraints[i])\n\t\t\t{\n\t\t\t\tvar ct = constraints[i];\n\n\t\t\t\tif (ct.model)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.arrayof)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = [];\n\n\t\t\t\t\tfor (var j = 0; j < this.data[i].length; j++)\n\t\t\t\t\t\tdata[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.cls)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten() : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata[i] = this.data[i];\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/\n\tremove: function (name, nsilent)\n\t{\n\t\tif (Rinn.typeOf(name) == \"array\")\n\t\t{\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tdelete this.data[name[i]];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: name });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete this.data[name];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: [name] });\n\t\t}\n\t},\n\n\t/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/\n\tupdate: function (fields, direct)\n\t{\n\t\tif (this._silent) return this;\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (fields && Rinn.typeOf(fields) == 'string')\n\t\t{\n\t\t\tthis._propertyEvent (fields, this.data[fields], this.data[fields], direct);\n\t\t}\n\t\telse if (fields && Rinn.typeOf(fields) == 'array')\n\t\t{\n\t\t\tfor (var i of fields)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\n\t\tif (!--this._level && !this._silent && (this.changedList.length != 0 || fields === true))\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/\n\tvalidate: function (fields)\n\t{\n\t\tif (!this.constraints) return this;\n\n\t\tif (fields && Rinn.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._set (fields, this.data[fields])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t{\n\t\t\t\tif (fields && Rinn.indexOf(fields, i) == -1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._set (i, this.data[i])\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/\n\tisCompliant: function ()\n\t{\n\t\tif (!this.constraints) return true;\n\n\t\ttry\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._validate (i, this.data[i]);\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/\n\tobserve: function (property, handler, context)\n\t{\n\t\tthis.addEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/\n\tunobserve: function (property, handler, context)\n\t{\n\t\tthis.removeEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tAdds a propertyChanged event handler for the given property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void watch (string property, function handler);\n\t*/\n\twatch: function (property, handler)\n\t{\n\t\tproperty = property.split(':');\n\n\t\tif (property.length == 1)\n\t\t{\n\t\t\tproperty[1] = property[0];\n\t\t\tproperty[0] = 'watch';\n\t\t}\n\n\t\tthis.addEventListener (property[0]+\":propertyChanged.\"+property[1], function (evt, args) {\n\t\t\thandler (args.value, args, evt);\n\t\t});\n\t},\n\n\t/**\n\t**\tRemoves propertyChanged handlers related to the specified property. The property name can have an event namespace prepended and separated by colon.\n\t**\n\t**\t>> void unwatch (string property);\n\t*/\n\tunwatch: function (property)\n\t{\n\t\tproperty = property.split(':');\n\t\tif (property.length == 1)\n\t\t{\n\t\t\tproperty[1] = property[0];\n\t\t\tproperty[0] = 'watch';\n\t\t}\n\n\t\tthis.removeEventListener (property[0]+\":propertyChanged.\"+property[1]);\n\t},\n\n\t/**\n\t * Triggers a field change event. Even if the value of the field is the same as the model's, the event will still be triggered.\n\t */\n\ttrigger: function (name, value=null)\n\t{\n\t\treturn this.set(name, value, true);\n\t},\n\n\t/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/\n\ttoString: function ()\n\t{\n\t\treturn Rinn.serialize(this.get (true));\n\t}\n});\n\n\n/**\n**\tImport model constraints.\n*/\n\nimport Constraints from './model-constraints.js';\n_Model.Constraints = Constraints;\n\nexport default _Model;\n","\nimport Rinn from './alpha.js';\nimport Model from './model.js';\n\n/**\n**\tGeneric list for models.\n*/\n\nexport default Model.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"ModelList\",\n\n\t/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/\n\titemt: Model,\n\n\t/**\n\t**\tMirror of data.contents\n\t*/\n\tcontents: null,\n\n\t/**\n\t**\tIDs of every item in the contents.\n\t*/\n\titemId: null,\n\n\t/**\n\t**\tAutoincremental ID for the next item to be added.\n\t*/\n\tnextId: null,\n\n\t/**\n\t**\tDefault properties of the model.\n\t*/\n\tdefaults:\n\t{\n\t\tcontents: null\n\t},\n\n\t/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/\n\tconstraints:\n\t{\n\t\tcontents: {\n\t\t\ttype: \"array\",\n\t\t\tarrayof: \"@itemt\"\n\t\t}\n\t},\n\n\t/**\n\t**\tConstructor.\n\t*/\n\t__ctor: function (...args)\n\t{\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis._super.Model.__ctor(...args);\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t*/\n\tready: function ()\n\t{\n\t\tthis._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n\n\t\tthis.contents = this.data.contents;\n\t},\n\n\t/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int iid, Model item);\n\t*/\n\t_bind: function (iid, item)\n\t{\n\t\tif (item && item.addEventListener) item.addEventListener (this._eventGroup, this._onItemEvent, this, iid);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/\n\t_unbind: function (item)\n\t{\n\t\tif (item && item.removeEventListener) item.removeEventListener (this._eventGroup);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, int iid);\n\t*/\n\t_onItemEvent: function (evt, args, iid)\n\t{\n\t\tthis.prepareEvent (\"itemChanged\", { id: iid, item: evt.source }).from (evt)\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int length ();\n\t*/\n\tlength: function ()\n\t{\n\t\treturn this.data.contents.length;\n\t},\n\n\t/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/\n\tclear: function ()\n\t{\n\t\tfor (var i = 0; i < this.data.contents; i++)\n\t\t\tthis._unbind (this.data.contents[i]);\n\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis.contents = this.data.contents = [];\n\n\t\tthis.prepareEvent (\"itemsCleared\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> ModelList setData (array data);\n\t*/\n\tsetData: function (data)\n\t{\n\t\tthis.clear();\n\t\tif (!data) return this;\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tvar item = Rinn.ensureTypeOf(this.itemt, data[i]);\n\n\t\t\tthis.itemId.push(this.nextId++);\n\t\t\tthis.data.contents.push(item);\n\n\t\t\tthis._bind(this.nextId-1, item);\n\t\t}\n\n\t\tthis.prepareEvent (\"itemsChanged\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/\n\tgetData: function ()\n\t{\n\t\treturn this.data.contents;\n\t},\n\n\t/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/\n\tgetAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\treturn this.data.contents[index];\n\t},\n\n\t/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/\n\tremoveAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\tlet item = this.data.contents.splice(index, 1)[0];\n\t\tlet id = this.itemId.splice(index, 1)[0];\n\n\t\tthis._unbind (item);\n\n\t\tthis.prepareEvent (\"itemRemoved\", { id: id, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/\n\tsetAt: function (index, item)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis._unbind(this.data.contents[index]);\n\t\tthis.data.contents[index] = item;\n\t\tthis._bind(this.itemId[index], item);\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/\n\tupdateAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: this.data.contents[index] })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/\n\tpush: function (item)\n\t{\n\t\tif (item && Rinn.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.push(this.nextId++);\n\t\tthis.data.contents.push (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[this.itemId.length-1], item: item, position: 'tail' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/\n\tpop: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.pop());\n\t},\n\n\t/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/\n\tunshift: function (item)\n\t{\n\t\tif (item && Rinn.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rinn.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.unshift(this.nextId++);\n\t\tthis.data.contents.unshift (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[0], item: item, position: 'head' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/\n\tshift: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.shift());\n\t},\n\n\t/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/\n\tfind: function (data, retObject=false)\n\t{\n\t\tvar contents = this.data.contents;\n\n\t\tfor (var i = 0; i < contents.length; i++)\n\t\t{\n\t\t\tif (Rinn.partialCompare (contents[i].data, data))\n\t\t\t\treturn retObject ? contents[i] : i;\n\t\t}\n\n\t\treturn retObject ? null : -1;\n\t}\n});\n","\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n * The utility functions in this module allow to create a very strict serialization/deserialization schema\r\n * to ensure that all values are of the specific type when stored in string format.\r\n */\r\n\r\nlet Schema =\r\n{\r\n\tType: function (proto)\r\n    {\r\n\t\tlet tmp =\r\n\t\t{\r\n            flatten: function (value, context) {\r\n                return value;\r\n            },\r\n\r\n            unflatten: function (value, context) {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        return proto ? Rinn.override(tmp, proto) : tmp;\r\n    },\r\n\r\n\tString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tInteger: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tNumber: function (precision)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_precision: precision,\r\n\t\t\t_round: false,\r\n\r\n\t\t\tprecision: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis._precision = ~~value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tvalue = parseFloat(value);\r\n\r\n\t\t\t\tif (this._precision > 0)\r\n\t\t\t\t\tvalue = (~~(value*Math.pow(10, this._precision))) / Math.pow(10, this._precision);\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn parseFloat(value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tBool: function (compact)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_compact: compact,\r\n\r\n\t\t\tcompact: function(value)\r\n\t\t\t{\r\n\t\t\t\tthis._compact = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\tvalue = ~~value;\r\n\t\t\t\treturn this._compact ? (value > 0 ? 1 : 0) : (value > 0 ? true : false);\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn (~~value) ? true : false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tSharedString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return 0;\r\n\r\n\t\t\t\tvalue = value.toString();\r\n\r\n                if (!(\"strings\" in context))\r\n                {\r\n                    context.index = { };\r\n                    context.strings = [ ];\r\n                }\r\n\r\n                if (!(value in context.index))\r\n                {\r\n                    context.strings.push(value);\r\n                    context.index[value] = context.strings.length;\r\n                }\r\n\r\n                return context.index[value];\r\n            },\r\n\r\n\t\t\tunflatten: function (value, context)\r\n\t\t\t{\r\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\r\n            }\r\n        });\r\n    },\r\n\r\n\tArray: function (type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\titemType: type,\r\n\t\t\t_debug: false,\r\n\t\t\t_filter: null,\r\n\r\n\t\t\tdebug: function(v) {\r\n\t\t\t\tthis._debug = v;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            of: function (type) {\r\n                this.itemType = type;\r\n                return this;\r\n            },\r\n\r\n\t\t\tfilter: function (callback) {\r\n\t\t\t\tthis._filter = callback;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n                for (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (this._filter && !this._filter(value[i], i))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n                    o.push(this.itemType.flatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n\t\t\tunflatten: async function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(await this.itemType.unflatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n    },\r\n\r\n    Object: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            properties: [ ],\r\n\r\n            property: function (name, type, defvalue=null)\r\n            {\r\n                this.properties.push({ name: name, source: name, type: type, defvalue: defvalue });\r\n                return this;\r\n            },\r\n\r\n            propertyAlias: function (name, source, type, defvalue=null)\r\n            {\r\n                this.properties.push({ name: name, source: source, type: type, defvalue: defvalue });\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.properties[i].source in value)\r\n\t\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].source], context);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = [ ];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.properties[i].source in value)\r\n\t\t\t\t\t\t\to.push(this.properties[i].type.flatten(value[this.properties[i].source], context));\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\to.push(this.properties[i].type.flatten(this.properties[i].defvalue, context));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(this.properties[i].name in value ? value[this.properties[i].name] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(i in value ? value[i] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Class: function (classConstructor)\r\n    {\r\n\t\treturn Schema.Type\r\n\t\t({\r\n            _constructor: classConstructor,\r\n\r\n            constructor: function (classConstructor)\r\n            {\r\n                this._constructor = classConstructor;\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n                return value == null ? null : value.flatten(context);\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\treturn value == null ? null : await (new this._constructor()).unflatten(value, context);\r\n            }\r\n        });\r\n\t},\r\n\r\n\t/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/\r\n    Property: function(name, type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tproperty: name,\r\n\t\t\ttype: type,\r\n\r\n\t\t\tname: function (name)\r\n\t\t\t{\r\n\t\t\t\tthis.property = name;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tis: function (type)\r\n\t\t\t{\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\t\t\t\t\to[this.property] = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value[this.property], context);\r\n\t\t\t\telse\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value, context);\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Map: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = [ ];\r\n\r\n\t\t\t\tfor (let i in value)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(i);\r\n\t\t\t\t\to.push(value[i]);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i += 2)\r\n\t\t\t\t\to[value[i]] = value[i+1];\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Selector: function ()\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tconditions: [],\r\n\t\t\tvalue: null,\r\n\r\n\t\t\twhen: function (value, type)\r\n\t\t\t{\r\n\t\t\t\tthis.conditions.push([ (val) => val === value, type ]);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\twith: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis.value = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tfor (let i of this.conditions)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i[0](this.value) === true)\r\n\t\t\t\t\t\treturn i[1].flatten(value, context);\r\n\t\t\t\t}\r\n\r\n                return null;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tfor (let i of this.conditions)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i[0](this.value) === true)\r\n\t\t\t\t\t\treturn await i[1].unflatten(value, context);\r\n\t\t\t\t}\r\n\r\n                return null;\r\n            }\r\n\r\n        });\r\n\t}\r\n};\r\n\r\nexport default Schema;\r\n","\r\nimport Class from './class.js';\r\n\r\n/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/\r\n\r\nexport default Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Flattenable\",\r\n\r\n\t/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/\r\n\ttypeSchema: null,\r\n\r\n\t/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/\r\n\tflatten: function (context)\r\n\t{\r\n\t\treturn this.typeSchema.flatten(this, context);\r\n\t},\r\n\r\n\t/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/\r\n\tunflatten: async function (value, context)\r\n\t{\r\n\t\tObject.assign(this, await this.typeSchema.unflatten(value, context));\r\n\t\tawait this.onUnflattened();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/\r\n\tonUnflattened: async function ()\r\n\t{\r\n\t}\r\n});\r\n","\r\nimport Flattenable from './flattenable.js';\r\nimport Schema from './schema.js';\r\nimport Rinn from './alpha.js';\r\n\r\n/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/\r\n\r\nexport default Flattenable.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Collection\",\r\n\r\n\t/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/\r\n\titemTypeSchema: null,\r\n\r\n\t/**\r\n\t**\tArray of items.\r\n\t*/\r\n\titems: null, /* Array */\r\n\r\n\t/**\r\n\t**\tConstructs the collection.\r\n\t*/\r\n\t__ctor: function (itemTypeSchema)\r\n\t{\r\n\t\tif (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\r\n\r\n\t\tif (itemTypeSchema)\r\n\t\t\tthis.typeSchema = Schema.Property('items').is(Schema.Array().of(itemTypeSchema));\r\n\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/\r\n\tonUnflattened: function()\r\n\t{\r\n\t\tlet items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (let i of items)\r\n\t\t\tthis.add(i);\r\n\t},\r\n\r\n\t/**\r\n\t * \tExecuted when the value in `items` is changed.\r\n\t */\r\n\titemsReferenceChanged: function()\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.items = [];\r\n\t\tthis.itemsReferenceChanged();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/\r\n\tclear: function ()\r\n\t{\r\n\t\tvar items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tthis.onItemRemoved (items[i], 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/\r\n\tsort: function (fn, desc)\r\n\t{\r\n\t\tif (typeof(fn) != \"function\")\r\n\t\t{\r\n\t\t\tthis.items.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\treturn (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.items.sort(fn);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/\t\r\n\tfindItem: function (inc, exc)\r\n\t{\r\n\t\tif (!this.items) return null;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t{\r\n\t\t\tif (exc && Rinn.partialCompare(this.items[i], exc))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rinn.partialCompare(this.items[i], inc))\r\n\t\t\t\treturn this.items[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the container array.\r\n\t*/\r\n\tgetItems: function ()\r\n\t{\r\n\t\treturn this.items;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/\r\n\tlength: function ()\r\n\t{\r\n\t\treturn this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/\r\n\tisEmpty: function ()\r\n\t{\r\n\t\treturn !this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/\r\n\tindexOf: function (item)\r\n\t{\r\n\t\treturn this.items.indexOf(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tgetAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\treturn index >= 0 && index < this.items.length ? this.items[index] : null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the first item in the collection.\r\n\t*/\r\n\tfirst: function ()\r\n\t{\r\n\t\treturn this.getAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the last item in the collection.\r\n\t*/\r\n\tlast: function ()\r\n\t{\r\n\t\treturn this.getAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/\r\n\taddAt: function (index, item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded (item))\r\n\t\t\treturn this;\r\n\r\n\t\tif (index < 0) index = 0;\r\n\t\tif (index > this.items.length) index = this.items.length;\r\n\r\n\t\tif (index == 0)\r\n\t\t{\r\n\t\t\tthis.items.unshift(item);\r\n\t\t}\r\n\t\telse if (index == this.items.length)\r\n\t\t{\r\n\t\t\tthis.items.push(item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar tmp = this.items.splice(0, index);\r\n\t\t\ttmp.push(item);\r\n\r\n\t\t\tthis.items = tmp.concat(this.items);\r\n\t\t\tthis.itemsReferenceChanged();\r\n\t\t}\r\n\r\n\t\tthis.onItemAdded (item);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tunshift: function (item)\r\n\t{\r\n\t\treturn this.addAt(0, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tpush: function (item)\r\n\t{\r\n\t\treturn this.addAt(this.items.length, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tadd: function (item)\r\n\t{\r\n\t\treturn this.push(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tremoveAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\tif (index < 0 || index >= this.items.length)\r\n\t\t\treturn null;\r\n\r\n\t\tvar item = this.items[index];\r\n\t\tthis.items.splice (index, 1);\r\n\t\tthis.onItemRemoved (item, index);\r\n\r\n\t\treturn item;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/\r\n\tpop: function (item)\r\n\t{\r\n\t\treturn this.removeAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/\r\n\tshift: function (item)\r\n\t{\r\n\t\treturn this.removeAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/\r\n\tremove: function (item)\r\n\t{\r\n\t\treturn this.removeAt (this.indexOf(item));\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/\r\n\tforEach: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/\r\n\tforEachCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/\r\n\tforEachRev: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/\r\n\tforEachRevCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/\r\n\tonBeforeItemAdded: function (item)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/\r\n\tonItemAdded: function (item)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/\r\n\tonItemRemoved: function (item)\r\n\t{\r\n\t}\r\n});\r\n","\nimport Rinn from './alpha.js';\n\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRinn.Template.functions map, each of which have their own parameters.\n*/\n\nlet Template =\n{\n\t/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/\n\tstrict: false,\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/\n\tparseTemplate: function (template, sym_open, sym_close, is_tpl=false, root=1)\n\t{\n\t\tlet nflush = 'string', flush = null, state = 0, count = 0;\n\t\tlet str = '', parts = [], mparts = parts, nparts = false;\n\n\t\tif (is_tpl === true)\n\t\t{\n\t\t\ttemplate = template.trim();\n\t\t\tnflush = 'identifier';\n\t\t\tstate = 10;\n\n\t\t\tmparts.push(parts = []);\n\t\t}\n\n\t\ttemplate += \"\\0\";\n\n\t\tfunction unescape (value)\n\t\t{\n\t\t\tif (typeof(value) == 'object')\n\t\t\t{\n\t\t\t\tif (value instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\t\t\tunescape(value[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.data = unescape(value.data);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t{\n\t\t\t\tif (value[i] == '\\\\')\n\t\t\t\t{\n\t\t\t\t\tlet r = value[i+1];\n\n\t\t\t\t\tswitch (r)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'n': r = \"\\n\"; break;\n\t\t\t\t\t\tcase 'r': r = \"\\r\"; break;\n\t\t\t\t\t\tcase 'f': r = \"\\f\"; break;\n\t\t\t\t\t\tcase 'v': r = \"\\v\"; break;\n\t\t\t\t\t\tcase 't': r = \"\\t\"; break;\n\t\t\t\t\t\tcase 's': r = \"\\s\"; break;\n\t\t\t\t\t\tcase '\"': r = \"\\\"\"; break;\n\t\t\t\t\t\tcase \"'\": r = \"\\'\"; break;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.substr(0, i) + r + value.substr(i+2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction emit (type, data)\n\t\t{\n\t\t\tif (type == 'template')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, true, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t\ttype = 'base-string';\n\n\t\t\t\tif (Rinn.typeOf(data) == 'array')\n\t\t\t\t{\n\t\t\t\t\ttype = data[0].type;\n\t\t\t\t\tdata = data[0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data.trim().split('\\n').map(i => i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge-alt')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, '{', '}', false, 0);\n\t\t\t}\n\n\t\t\tif (type == 'parse-merge' || type == 'parse-merge-alt' || type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts.push(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tparts.push({ type: type, data: data });\n\n\t\t\tif (nparts)\n\t\t\t{\n\t\t\t\tmparts.push(parts = []);\n\t\t\t\tnparts = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < template.length; i++)\n\t\t{\n\t\t\tif (template[i] == '\\\\')\n\t\t\t{\n\t\t\t\tstr += '\\\\';\n\t\t\t\tstr += template[++i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (state)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-merge';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 12; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'template';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 1:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '.')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\temit ('access', '.');\n\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tnparts = true;\n\n\t\t\t\t\t\twhile (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) i++;\n\t\t\t\t\t\ti--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 14; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 15; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 16; count = 1; nflush = 'parse-merge-alt';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 13; count = 1; nflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) emit (nflush, str);\n\t\t\t\t\t\tstate = 11; count = 1; str = ''; nflush = 'parse';\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nflush != 'identifier')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 11:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str.length != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\n\t\t\t\t\t\t\tstate = 10;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\"');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 15:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\\'');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 16:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '`');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (flush)\n\t\t\t{\n\t\t\t\temit (flush, str);\n\t\t\t\tflush = str = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!is_tpl)\n\t\t{\n\t\t\tlet i = 0;\n\t\t\twhile (i < mparts.length)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti = mparts.length-1;\n\t\t\twhile (i > 0)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i--, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (mparts.length == 0)\n\t\t\t\tmparts.push({ type: 'string', data: '' });\n\t\t}\n\n\t\tif (root)\n\t\t\tunescape(mparts);\n\n\t\treturn mparts;\n\t},\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/\n\tparse: function (template)\n\t{\n\t\treturn this.parseTemplate(template.trim(), '[', ']', false);\n\t},\n\n\t/**\n\t**\tRemoves all static parts from a parsed template.\n\t**\n\t**\t>> array clean (array parts);\n\t*/\n\tclean: function (parts)\n\t{\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].type != 'template')\n\t\t\t{\n\t\t\t\tparts.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\treturn parts;\n\t},\n\n\t/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/\n\texpand: function (parts, data, ret='text', mode='base-string')\n\t{\n\t\tlet s = [];\n\n\t\t// Expand variable parts.\n\t\tif (mode == 'var')\n\t\t{\n\t\t\tlet escape = true;\n\t\t\tlet quote = false;\n\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str == '') str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tescape = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tquote = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tescape = false;\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tquote = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (str != 'this')\n\t\t\t{\n\t\t\t\tlet failed = false;\n\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\tif (!(str in data))\n\t\t\t\t\t{\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tdata = data[str];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfailed = true;\n\n\t\t\t\tif (failed && parts.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (Template.strict == true)\n\t\t\t\t\t\tthrow new Error ('Expression function `'+str+'` not found.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(data) == 'string')\n\t\t\t{\n\t\t\t\tif (escape)\n\t\t\t\t\tdata = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n\t\t\t\tif (quote)\n\t\t\t\t\tdata = '\"' + data + '\"';\n\t\t\t}\n\n\t\t\ts.push(data);\n\t\t}\n\n\t\t// Expand variable parts and returns a reference to it.\n\t\tif (ret == 'varref')\n\t\t{\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str == '') str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn str != 'this' ? [data, str] : null;\n\t\t}\n\n\t\t// Expand function parts.\n\t\tif (mode == 'fn')\n\t\t{\n\t\t\tvar args = [];\n\n\t\t\targs.push(Template.expand(parts[0], data, 'text', 'base-string'));\n\n\t\t\tif ('_'+args[0] in Template.functions)\n\t\t\t\targs[0] = '_'+args[0];\n\n\t\t\tif (!(args[0] in Template.functions))\n\t\t\t{\n\t\t\t\tif (Template.strict == true)\n\t\t\t\t\tthrow new Error ('Expression function `'+args[0]+'` not found.');\n\n\t\t\t\treturn `(Unknown: ${args[0]})`;\n\t\t\t}\n\n\t\t\tif (args[0][0] == '_')\n\t\t\t\treturn Template.functions[args[0]] (parts, data);\n\n\t\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\t\targs.push(Template.expand(parts[i], data, 'arg', 'base-string'));\n\n\t\t\ts.push(Template.functions[args[0]] (args, parts, data));\n\t\t}\n\n\t\t// Template mode.\n\t\tif (mode == 'template')\n\t\t{\n\t\t\tif (parts.length == 1)\n\t\t\t{\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'string')\n\t\t\t\t\treturn parts[0][0].data;\n\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'identifier')\n\t\t\t\t{\n\t\t\t\t\tlet name = parts[0][0].data;\n\n\t\t\t\t\tif (name in Template.functions || '_'+name in Template.functions)\n\t\t\t\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t\t\t}\n\t\n\t\t\t\treturn Template.expand(parts[0], data, ret, 'var');\n\t\t\t}\n\n\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t}\n\n\t\t// Expand parts.\n\t\tif (mode == 'base-string')\n\t\t{\n\t\t\tlet index = -1;\n\n\t\t\tfor (let i of parts)\n\t\t\t{\n\t\t\t\tlet tmp = null;\n\t\t\t\tindex++;\n\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'template');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'string': case 'identifier':\n\t\t\t\t\t\ttmp = i.data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'base-string');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ret == 'void')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (ret == 'last' && index != parts.length-1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\ts.push(tmp);\n\t\t\t}\n\t\t}\n\n\t\t// Return types for direct objects.\n\t\tif (ret == 'obj') return s;\n\n\t\tif (ret == 'last')\n\t\t{\n\t\t\tif (typeOf(s) == 'Rose\\\\Arry')\n\t\t\t\ts = s[0];\n\n\t\t\treturn s;\n\t\t}\n\n\t\t// When the output is not really needed.\n\t\tif (ret == 'void') return null;\n\n\t\t// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n\t\tif (ret == 'arg')\n\t\t{\n\t\t\tif (Rinn.typeOf(s) == 'array')\n\t\t\t{\n\t\t\t\tif (s.length != 1)\n\t\t\t\t\treturn s.join('');\n\n\t\t\t\treturn s[0];\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tif (ret == 'text' && Rinn.typeOf(s) == 'array')\n\t\t{\n\t\t\tlet f = (e => e != null && typeof(e) == 'object' ? ('map' in e ? e.map(f).join('') : ('join' in e ? e.join('') : e.toString())) : e);\n\t\t\ts = s.map(f).join('');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/\n\tcompile: function (template)\n\t{\n\t\ttemplate = Template.parse(template);\n\n\t\treturn function (data=null, mode='text') {\n\t\t\treturn Template.expand(template, data ? data : { }, mode);\n\t\t};\n\t},\n\n\t/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/\n\teval: function (template, data=null, mode='text')\n\t{\n\t\ttemplate = Template.parse(template);\n\t\treturn Template.expand(template, data ? data : { }, mode);\n\t},\n\n\t/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/\n\tvalue: function (parts, data=null)\n\t{\n\t\treturn Rinn.typeOf(parts) != 'array' ? parts : Template.expand(parts, data ? data : { }, 'arg');\n\t},\n\n\t/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/\n\tregister: function (name, fn)\n\t{\n\t\tTemplate.functions[name] = fn;\n\t},\n\n\t/**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/\n\t'call': function (name, args, data=null)\n\t{\n\t\tif (name in Template.functions)\n\t\t\treturn Template.functions[name] (args, null, data);\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/\n\tgetNamedValues: function (parts, data, i=1, expanded=true)\n\t{\n\t\tlet s = { };\n\t\tlet mode = 0;\n\t\n\t\tfor (; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\n\t\t\tif (!mode) {\n\t\t\t\tif (key.startsWith(':')) mode = 1; else mode = key.endsWith(':') ? 2 : 3;\n\t\t\t}\n\n\t\t\tif (mode == 1)\n\t\t\t\tkey = key.substr(1);\n\t\t\telse if (mode == 2)\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\tif (expanded)\n\t\t\t\ts[key] = Template.expand(parts[i+1], data, 'arg');\n\t\t\telse\n\t\t\t\ts[key] = parts[i+1];\n\t\t}\n\n\t\treturn s;\n\t}\n};\n\n\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/\n\nTemplate.functions =\n{\n\t/**\n\t**\tExpression functions.\n\t*/\n\t'global': function(args) { return globalThis; },\n\t'null': function(args) { return null; },\n\t'true': function(args) { return true; },\n\t'false': function(args) { return false; },\n\n\t'len': function(args) { return args[1].toString().length; },\n\t'int': function(args) { return ~~args[1]; },\n\t'str': function(args) { return args[1].toString(); },\n\t'float': function(args) { return parseFloat(args[1]); },\n\t'chr': function(args) { return String.fromCharCode(args[1]); },\n\t'ord': function(args) { return args[1].toString().charCodeAt(0); },\n\n\t'not': function(args) { return !args[1]; },\n\t'neg': function(args) { return -args[1]; },\n\t'abs': function(args) { return Math.abs(args[1]); },\n\n\t'and': function(args) { for (let i = 1; i < args.length; i++) if (!args[i]) return false; return true; },\n\t'or': function(args) { for (let i = 1; i < args.length; i++) if (~~args[i]) return true; return false; },\n\n\t'eq': function(args) { return args[1] == args[2]; },\n\t'ne': function(args) { return args[1] != args[2]; },\n\t'lt': function(args) { return args[1] < args[2]; },\n\t'le': function(args) { return args[1] <= args[2]; },\n\t'gt': function(args) { return args[1] > args[2]; },\n\t'ge': function(args) { return args[1] >= args[2]; },\n\t'isnotnull': function(args) { return !!args[1]; },\n\t'isnull': function(args) { return !args[1]; },\n\t'iszero': function(args) { return parseInt(args[1]) == 0; },\n\n\t'eq?': function(args) { return args[1] == args[2]; },\n\t'ne?': function(args) { return args[1] != args[2]; },\n\t'lt?': function(args) { return args[1] < args[2]; },\n\t'le?': function(args) { return args[1] <= args[2]; },\n\t'gt?': function(args) { return args[1] > args[2]; },\n\t'ge?': function(args) { return args[1] >= args[2]; },\n\t'notnull?': function(args) { return !!args[1]; },\n\t'null?': function(args) { return !args[1]; },\n\t'zero?': function(args) { return parseInt(args[1]) == 0; },\n\n\t'typeof': function(args) { return Rinn.typeOf(args[1]); },\n\n\t'*': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'/': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'+': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'-': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mul': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'div': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'sum': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'sub': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mod': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x %= args[i]; return x; },\n\t'pow': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\n\t/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tdump <expr>\n\t*/\n\t'dump': function (args)\n\t{\n\t\treturn JSON.stringify(args[1]);\n\t},\n\n\t/**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/\n\t'_set': function (parts, data)\n\t{\n\t\tfor (let i = 1; i+1 < parts.length; i += 2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i+1], data);\n\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) ref[0][ref[1]] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t\tdata[Template.value(parts[i], data)] = value;\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/\n\t'_unset': function (parts, data)\n\t{\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) delete ref[0][ref[1]];\n\t\t\t}\n\t\t\telse\n\t\t\t\tdelete data[Template.value(parts[i], data)];\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/\n\t'trim': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.trim()) : args[1].trim()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/\n\t'upper': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toUpperCase()) : args[1].toUpperCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/\n\t'lower': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toLowerCase()) : args[1].toLowerCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/\n\t'substr': function (args)\n\t{\n\t\tlet s = args[args.length-1].toString();\n\n\t\tlet start = 0;\n\t\tlet count = null;\n\n\t\tif (args.length == 4)\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = ~~(args[2]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = null;\n\t\t}\n\n\t\tif (start < 0) start += s.length;\n\t\tif (count < 0) count += s.length;\n\n\t\tif (count === null)\n\t\t\tcount = s.length - start;\n\n\t\treturn s.substr(start, count);\n\t},\n\n\t/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/\n\t'replace': function (args)\n\t{\n\t\treturn args[3].split(args[1]).join(args[2]);\n\t},\n\n\t/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/\n\t'nl2br': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\")) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\n\t'%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet s = '';\n\n\t\tfor (let i = 0; i < args.length; i++)\n\t\t{\n\t\t\tif (Rinn.typeOf(args[i]) == 'array')\n\t\t\t{\n\t\t\t\ts += `<${name}>`;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < args[i].length; j++)\n\t\t\t\t\ts += args[i][j];\n\n\t\t\t\ts += `</${name}>`;\n\t\t\t}\n\t\t\telse\n\t\t\t\ts += `<${name}>${args[i]}</${name}>`;\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\n\t'%%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet attr = '';\n\t\tlet text = '';\n\n\t\tfor (let i = 0; i < args.length; i += 2)\n\t\t{\n\t\t\tif (i+1 < args.length)\n\t\t\t\tattr += ` ${args[i]}=\"${args[i+1]}\"`;\n\t\t\telse\n\t\t\t\ttext = args[i];\n\t\t}\n\n\t\treturn text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n\t},\n\n\t/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/\n\t'join': function (args)\n\t{\n\t\tif (args[2] && Rinn.typeOf(args[2]) == 'array')\n\t\t\treturn args[2].join(args[1]);\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/\n\t'split': function (args)\n\t{\n\t\tif (args[2] && typeof(args[2]) == \"string\")\n\t\t\treturn args[2].split(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/\n\t'keys': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.keys(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/\n\t'values': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.values(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tConstructs a string obtained by concatenating the expanded template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/\n\t'_each': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet s = '';\n\t\tlet j = 0;\n\n\t\tif (!list) return s;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\ts += Template.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/\n\t'_foreach': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet j = 0;\n\n\t\tif (!list) return null;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tTemplate.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\n\t'_?': function (parts, data)\n\t{\n\t\tif (Template.expand(parts[1], data, 'arg'))\n\t\t\treturn Template.expand(parts[2], data, 'arg');\n\n\t\tif (parts.length > 3)\n\t\t\treturn Template.expand(parts[3], data, 'arg');\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\n\t'_??': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\t\tif (value) return value;\n\t\n\t\treturn Template.expand(parts[2], data, 'arg');\n\t},\n\n\t/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/\n\t'_if': function (parts, data)\n\t{\n\t\tfor (let i = 0; i < parts.length; i += 3)\n\t\t{\n\t\t\tif (Template.expand(parts[i], data, 'arg') == 'else')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\n\t\t\tif (Template.expand(parts[i+1], data, 'arg'))\n\t\t\t\treturn Template.expand(parts[i+2], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/\n\t'_switch': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\n\t\tfor (let i = 2; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet case_value = Template.expand(parts[i], data, 'arg');\n\t\t\tif (case_value == value || case_value == 'default')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/\n\t'_break': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_BREAK');\n\t},\n\n\t/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/\n\t'_continue': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_CONTINUE');\n\t},\n\n\t/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_repeat': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`repeat`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0, to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\t\tlet arr = [];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn arr;\n\t},\n\n\t/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_for': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`for`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0; to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tvalue = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/\n\t'_loop': function (parts, data)\n\t{\n\t\tif (parts.length < 2)\n\t\t\treturn '(`loop`: Wrong number of parameters)';\n\n\t\tlet tpl = parts[1];\n\n\t\twhile (true)\n\t\t{\n\t\t\ttry {\n\t\t\t\tTemplate.value(tpl, data);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tlet name = e.message;\n\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/\n\t'_echo': function (parts, data)\n\t{\n\t\tlet s = '';\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts += Template.expand(parts[i], data, 'arg');\n\n\t\tconsole.log(s);\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\n\t'_#': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(Template.expand(parts[i], data, 'arg'));\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\n\t'_##': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(parts[i]);\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, true);\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, false);\n\t},\n\n\t/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/\n\t'contains': function (args, parts, data)\n\t{\n\t\tlet value = args[1];\n\n\t\tif (typeof(value) != 'object')\n\t\t{\n\t\t\tdata.err = 'Argument is not a Map';\n\t\t\treturn false;\n\t\t}\n\n\t\tlet s = '';\n\n\t\tfor (let i = 2; i < args.length; i++)\n\t\t{\n\t\t\tif (!(args[i] in value))\n\t\t\t\ts += ', '+args[i];\n\t\t}\n\n\t\tif (s != '')\n\t\t{\n\t\t\tdata.err = s.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/\n\t'has': function (args, parts, data)\n\t{\n\t\tlet value = args[2];\n\n\t\tif (Rinn.typeOf(value) != 'object')\n\t\t\treturn false;\n\n\t\treturn args[1] in value;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/\n\t'_map': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rinn.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (arrayMode)\n\t\t\t\toutput.push(Template.expand(parts[3], data, 'arg'));\n\t\t\telse\n\t\t\t\toutput[i] = Template.expand(parts[3], data, 'arg');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/\n\t'_filter': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rinn.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (~~Template.expand(parts[3], data, 'arg'))\n\t\t\t{\n\t\t\t\tif (arrayMode)\n\t\t\t\t\toutput.push(list[i]);\n\t\t\t\telse\n\t\t\t\t\toutput[i] = list[i];\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/\n\t'expand': function (args, parts, data)\n\t{\n\t\treturn Template.expand (Template.parseTemplate (args[1], '{', '}'), args.length == 3 ? args[2] : data);\n\t},\n\n\t/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/\n\t'_call': function (parts, data)\n\t{\n\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\n\t\tif (!ref || typeof(ref[0][ref[1]]) != 'function')\n\t\t\tthrow new Error ('Expression is not a function: ' + Template.expand(parts[1], data, 'obj').map(i => i == null ? '.' : i).join(''));\n\n\t\tlet args = [];\n\n\t\tfor (let i = 2; i < parts.length; i++)\n\t\t\targs.push(Template.value(parts[i], data));\n\n\t\treturn ref[0][ref[1]] (...args);\n\t},\n};\n\nexport default Template;\n","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","\nimport _Router from './router.js'; export const Router = _Router;\nimport _Element from './element.js'; export const Element = _Element; export const CElement = _Element;\nimport _Api from './api.js'; export const Api = _Api;\nimport _DataSource from './data-source.js'; export const DataSource = _DataSource;\nimport _DataList from './data-list.js'; export const DataList = _DataList;\nimport _Easing from './easing.js'; export const Easing = _Easing;\nimport _Anim from './anim.js'; export const Anim = _Anim;\nimport _Elements from './elements.js'; export const Elements = _Elements;\nimport _Utils from './utils.js'; export const Utils = _Utils;\nimport _db from './db.js'; export const db = _db;\n\nimport * as _Rinn from 'rinn';\nexport const Rinn = _Rinn.Rinn;\nexport const Class = _Rinn.Class;\nexport const Event = _Rinn.Event;\nexport const EventDispatcher = _Rinn.EventDispatcher;\nexport const Model = _Rinn.Model;\nexport const ModelList = _Rinn.ModelList;\nexport const Schema = _Rinn.Schema;\nexport const Flattenable = _Rinn.Flattenable;\nexport const Collection = _Rinn.Collection;\nexport const Template = _Rinn.Template;\n\nglobal.riza =\n{\n\tRouter: Router,\n\tElement: Element,\n\tCElement: CElement,\n\tApi: Api,\n\tDataSource: DataSource,\n\tDataList: DataList,\n\tEasing: Easing,\n\tAnim: Anim,\n\tElements: Elements,\n\tUtils: Utils,\n\tdb: db,\n\n\tRinn: Rinn,\n\tClass: Class,\n\tEvent: Event,\n\tEventDispatcher: EventDispatcher,\n\tModel: Model,\n\tModelList: ModelList,\n\tSchema: Schema,\n\tFlattenable: Flattenable,\n\tCollection: Collection,\n\tTemplate: Template,\n};\n","\r\nimport { EventDispatcher } from 'rinn';\r\n\r\n/*\r\n**\tThe Router is a special module that detects local URL changes (when a hash-change occurs) and\r\n**\tforwards events to the appropriate handlers.\r\n*/\r\n\r\nconst _Router =\r\n{\r\n\tRoute: EventDispatcher.extend\r\n\t({\r\n\t\t/*\r\n\t\t**\tRegular expression for the route. This is generated from a simpler expression provided\r\n\t\t**\tin the constructor.\r\n\t\t*/\r\n\t\trouteRegex: null,\r\n\r\n\t\t/*\r\n\t\t**\tOriginal route string value.\r\n\t\t*/\r\n\t\tvalue: null,\r\n\r\n\t\t/*\r\n\t\t**\tMap with the indices and the names of each paremeter obtained from the route expression.\r\n\t\t*/\r\n\t\tparams: null,\r\n\r\n\t\t/*\r\n\t\t**\tArguments obtained from the current route (uses `params` to determine name of arguments).\r\n\t\t*/\r\n\t\targs: null,\r\n\r\n\t\t/*\r\n\t\t**\tArguments string obtained from the last route dispatch. Used to check if the arguments changed.\r\n\t\t*/\r\n\t\ts_args: null,\r\n\r\n\t\t/*\r\n\t\t**\tIndicates if the route is active because of a past positive dispatch.\r\n\t\t*/\r\n\t\tactive: false,\r\n\r\n\t\t/*\r\n\t\t**\tIndicates if the params have changed since last event. Transition from inactive to active route will always set this value to true.\r\n\t\t*/\r\n\t\tchanged: false,\r\n\r\n\t\t/*\r\n\t\t**\tConstructor of the route, the specified argument is a route expression.\r\n\t\t**\r\n\t\t**\t>> void __ctor (string route);\r\n\t\t*/\r\n\t\t__ctor: function (route)\r\n\t\t{\r\n\t\t\tthis._super.EventDispatcher.__ctor();\r\n\t\t\tthis._compileRoute (this.value = route);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tTransforms the specified route expression into a regular expression and a set of parameter\r\n\t\t**\tnames and stores them in the 'param' array.\r\n\t\t**\r\n\t\t**\t>> void _compileRoute (string route);\r\n\t\t*/\r\n\t\t_compileRoute: function (route)\r\n\t\t{\r\n\t\t\tthis.params = [];\r\n\r\n\t\t\troute = route.replace(/\\/\\*\\//g, '/.+/');\r\n\r\n\t\t\twhile (true)\r\n\t\t\t{\r\n\t\t\t\tvar m = /:([!@A-Za-z0-9_-]+)/.exec(route);\r\n\t\t\t\tif (!m) break;\r\n\t\r\n\t\t\t\troute = route.replace(m[0], '([^/]+)');\r\n\t\t\t\tthis.params.push (m[1]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.routeRegex = '^' + route.replace(/##/g, '');\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tAdds a handler to the route dispatcher. The handler can be removed later using removeHandler and\r\n\t\t**\tspecifying the same parameters. If unrouted boolean is specified the event to listen to will be\r\n\t\t**\tthe unrouted event (when the route changes and the route is not activated).\r\n\t\t**\r\n\t\t**\tvoid addHandler (handler: function, unrouted: bool, context:object=null);\r\n\t\t*/\r\n\t\taddHandler: function (handler, unrouted=false, context=null)\r\n\t\t{\r\n\t\t\tthis.addEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, context);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tRemoves a handler from the route dispatcher.\r\n\t\t**\r\n\t\t**\tvoid removeHandler (handler: function, unrouted: bool, context: object=null);\r\n\t\t*/\r\n\t\tremoveHandler: function (handler, unrouted=false, context=null)\r\n\t\t{\r\n\t\t\tthis.removeEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, context);\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\t**\tVerifies if the specified route matches the internal route and if so dispatches a (depends on doUnroute parameter) \"routed\" or \"unrouted\" event with the\r\n\t\t**\tparameters obtained from the location to all attached handlers.\r\n\t\t**\r\n\t\t**\tvoid dispatch (route:string, doUnroute:bool);\r\n\t\t*/\r\n\t\tdispatch: function (route)\r\n\t\t{\r\n\t\t\tvar matches = route.match(this.routeRegex);\r\n\t\t\tif (!matches)\r\n\t\t\t{\r\n\t\t\t\tthis.s_args = null;\r\n\r\n\t\t\t\tif (this.active)\r\n\t\t\t\t\tthis.dispatchEvent ('unrouted', { route: this });\r\n\r\n\t\t\t\tthis.active = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = { route: this };\r\n\t\t\tvar str = '';\r\n\r\n\t\t\tfor (var i = 0; i < this.params.length; i++)\r\n\t\t\t{\r\n\t\t\t\targs[this.params[i]] = matches[i+1];\r\n\t\t\t\tstr += '_' + matches[i+1];\r\n\t\t\t}\r\n\r\n\t\t\tthis.changed = str != this.s_args;\r\n\t\t\tthis.s_args = str;\r\n\r\n\t\t\tthis.dispatchEvent ('routed', this.args = args);\r\n\t\t\tthis.active = true;\r\n\t\t}\r\n\t}),\r\n\r\n\t/*\r\n\t**\tMap with route objects. The key of the map is the route and the value a handler.\r\n\t*/\r\n\troutes: { },\r\n\r\n\t/*\r\n\t**\tSorted list of routes. Smaller routes are processed first than larger ones. This array stores\r\n\t**\tonly the keys to the Router.routes map.\r\n\t*/\r\n\tsortedRoutes: [ ],\r\n\r\n\t/*\r\n\t**\tIndicates the number of times the onLocationChanged handler should ignore the hash change event.\r\n\t*/\r\n\tignoreHashChangeEvent: 0,\r\n\r\n\t/*\r\n\t**\tCurrent relative location (everything after the location hash symbol).\r\n\t*/\r\n\tlocation: '',\r\n\r\n\t/*\r\n\t**\tCurrent relative location as an array of elements (obtained by splitting the location by slash).\r\n\t*/\r\n\targs: [],\r\n\r\n\t/*\r\n\t**\tInitializes the router module. Ensure to call `refresh` once to force a hashchange when the page loads.\r\n\t*/\r\n\tinit: function ()\r\n\t{\r\n\t\tif (this.alreadyAttached)\r\n\t\t\treturn;\r\n\r\n\t\tthis.alreadyAttached = true;\r\n\r\n\t\tif ('onhashchange' in globalThis)\r\n\t\t\tglobalThis.onhashchange = this.onLocationChanged.bind(this);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRefreshes the current route by forcing a hashchange event.\r\n\t*/\r\n\trefresh: function ()\r\n\t{\r\n\t\tthis.onLocationChanged();\r\n\t},\r\n\r\n\t/*\r\n\t**\tChanges the current location and optionally prevents a trigger of the hashchange event.\r\n\t*/\r\n\tsetRoute: function (route, silent)\r\n\t{\r\n\t\tvar location = this.realLocation (route);\r\n\t\tif (location == this.location) return;\r\n\r\n\t\tif (silent) this.ignoreHashChangeEvent++;\r\n\t\tglobalThis.location.hash = location;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds the specified route to the routing map. When the specified route is detected, the `onRoute` handler will be called, and then\r\n\t**\twhen the route exits `onUnroute` will be called.\r\n\t*/\r\n\taddRoute: function (route, onRoute, onUnroute=null)\r\n\t{\r\n\t\tif (!this.routes[route])\r\n\t\t{\r\n\t\t\tthis.routes[route] = new this.Route (route);\r\n\t\t\tthis.sortedRoutes.push (route);\r\n\r\n\t\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (onUnroute !== null)\r\n\t\t{\r\n\t\t\tthis.routes[route].addHandler (onRoute, false);\r\n\t\t\tthis.routes[route].addHandler (onUnroute, true);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.routes[route].addHandler (onRoute, false);\r\n\r\n\t\treturn this.routes[route];\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the Route object for the specified route.\r\n\t*/\r\n\tgetRoute: function (route)\r\n\t{\r\n\t\tif (!this.routes[route])\r\n\t\t{\r\n\t\t\tthis.routes[route] = new this.Route (route);\r\n\t\t\tthis.sortedRoutes.push (route);\r\n\r\n\t\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.routes[route];\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds the specified routes to the routing map. The routes map should contain the route expression\r\n\t**\tin the key of the map and a handler function in the value.\r\n\t*/\r\n\taddRoutes: function (routes)\r\n\t{\r\n\t\tfor (var i in routes)\r\n\t\t{\r\n\t\t\tif (!this.routes[i])\r\n\t\t\t{\r\n\t\t\t\tthis.routes[i] = new this.Route (i);\r\n\t\t\t\tthis.sortedRoutes.push (i);\r\n\t\t\t}\r\n\r\n\t\t\tthis.routes[i].addHandler (routes[i], false);\r\n\t\t}\r\n\r\n\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t});\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified route from the routing map.\r\n\t*/\r\n\tremoveRoute: function (route, onRoute, onUnroute)\r\n\t{\r\n\t\tif (!this.routes[route]) return;\r\n\r\n\t\tif (onUnroute !== undefined)\r\n\t\t{\r\n\t\t\tthis.routes[route].removeHandler (onRoute, false);\r\n\t\t\tthis.routes[route].removeHandler (onUnroute, true);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.routes[route].removeHandler (onRoute);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified routes from the routing map. The routes map should contain the route\r\n\t**\texpression in the key of the map and a handler function in the value.\r\n\t*/\r\n\tremoveRoutes: function (routes)\r\n\t{\r\n\t\tfor (var i in routes)\r\n\t\t{\r\n\t\t\tif (!this.routes[i]) continue;\r\n\r\n\t\t\tthis.routes[i].removeHandler (routes[i]);\r\n\t\t}\r\n\t},\r\n\r\n\t/*\r\n\t**\tGiven a formatted location and a previous one it will return the correct real location.\r\n\t*/\r\n\trealLocation: function (cLocation, pLocation)\r\n\t{\r\n\t\tif (!pLocation) pLocation = this.location;\r\n\t\tif (!pLocation) pLocation = ' ';\r\n\r\n\t\tvar state = 0, i = 0, j = 0, k;\r\n\t\tvar rLocation = '';\r\n\r\n\t\twhile (state != -1 && i < cLocation.length && j < pLocation.length)\r\n\t\t{\r\n\t\t\tswitch (state)\r\n\t\t\t{\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tif (cLocation.substr(i++, 1) == '*')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (cLocation.substr(i-1, 1) != pLocation.substr(j++, 1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += cLocation.substr(i-1);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j-1, 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif (cLocation.substr(i, 1) == '*')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate = 3;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tk = pLocation.indexOf(cLocation.substr(i, 1), j);\r\n\t\t\t\t\tif (k == -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += pLocation.substr(j) + cLocation.substr(i);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j, k-j);\r\n\r\n\t\t\t\t\tstate = 0;\r\n\t\t\t\t\tj = k;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tk = pLocation.lastIndexOf(cLocation.substr(i, 1));\r\n\t\t\t\t\tif (k == -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += cLocation.substr(i);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j, k-j);\r\n\r\n\t\t\t\t\tstate = 0;\r\n\t\t\t\t\tj = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state != -1)\r\n\t\t\trLocation += cLocation.substr(i);\r\n\r\n\t\treturn rLocation.trim();\r\n\t},\r\n\r\n\t/*\r\n\t**\tEvent handler called when the location hash changes.\r\n\t*/\r\n\tonLocationChanged: function ()\r\n\t{\r\n\t\tvar cLocation = location.hash.substr(1);\r\n\t\tvar rLocation = this.realLocation (cLocation);\r\n\r\n\t\tif (cLocation != rLocation)\r\n\t\t{\r\n\t\t\tglobalThis.location.replace('#' + rLocation);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.location = cLocation;\r\n\t\tthis.args = this.location.split ('/');\r\n\r\n\t\tif (this.ignoreHashChangeEvent > 0)\r\n\t\t{\r\n\t\t\tthis.ignoreHashChangeEvent--;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.sortedRoutes.length; i++)\r\n\t\t\tthis.routes[this.sortedRoutes[i]].dispatch (this.location);\r\n\t},\r\n\r\n\t/*\r\n\t**\tNavigates to the given hash-based URL.\r\n\t*/\r\n\tnavigate: function (location, replace=false)\r\n\t{\r\n\t\tlocation = this.realLocation(location);\r\n\r\n\t\tif (globalThis.location.hash == '#'+location) {\r\n\t\t\tthis.refresh();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (replace)\r\n\t\t\tglobalThis.location.replace('#'+location);\r\n\t\telse\r\n\t\t\tglobalThis.location.hash = location;\r\n\t}\r\n};\r\n\r\n_Router.init();\r\n\r\nexport default _Router;\r\n","\nimport { Rinn, Model, Template } from 'rinn';\nimport Router from './router.js';\n\n/**\n * Map containing the original prototypes for all registered elements.\n */\nconst elementPrototypes = { };\n\n/**\n * Map containing the final classes for all registered elements.\n */\nconst elementClasses = { };\n\n/**\n * Base class for custom elements. Provides support for model-triggered events, easy definition of handlers for events originated in\n * self or child-elements, and several utility methods.\n */\n\nconst Element = \n{\n\t/**\n\t * Internal element ID. Added as namespace to model events. Ensures that certain model events are run locally only, not affecting other event handlers.\n\t */\n\teid: null,\n\n\t/**\n\t * Indicates if the element is a root element, that is, the target element to attach child elements having `data-ref` attribute.\n\t */\n\tisRoot: true,\n\n\t/**\n\t * Root element to which this element is attached (when applicable).\n\t */\n\troot: null,\n\n\t/**\n\t * Indicates ready-state of the element. Possible values are: 0: \"Not ready\", 1: \"Children Initialized\", and 2: \"Parent Ready\".\n\t */\n\tisReady: 0,\n\treadyReenter: 0,\n\treadyLocked: 0,\n\n\t/**\n\t * Model type (class) for the element's model.\n\t */\n\tmodelt: Model,\n\n\t/**\n\t * Data model related to the element.\n\t */\n\tmodel: null,\n\n\t/**\n\t * Contents of the element. When set, the innerHTML will be set to this value.\n\t */\n\tcontents: null,\n\n\t/**\n\t * \tEvents map.\n\t */\n\tevents:\n\t{\n\t\t'mousedown [data-long-press]': function (evt)\n\t\t{\n\t\t\tevt.continuePropagation = true;\n\t\t\tif (evt.source._long_press) return;\n\n\t\t\tlet elem = evt.source;\n\n\t\t\telem._long_press = setTimeout(() =>\n\t\t\t{\n\t\t\t\tlet dx = elem._pos_fx - elem._pos_sx;\n\t\t\t\tlet dy = elem._pos_fy - elem._pos_sy;\n\n\t\t\t\telem._long_press = null;\n\n\t\t\t\tlet d = Math.sqrt(dx*dx + dy*dy);\n\t\t\t\tif (d < 5) {\n\t\t\t\t\telem._long_press = false;\n\t\t\t\t\tthis.dispatchOn (elem, 'long-press');\n\t\t\t\t}\n\t\t\t},\n\t\t\t500);\n\n\t\t\telem._pos_sx = evt.clientX;\n\t\t\telem._pos_sy = evt.clientY;\n\n\t\t\telem._pos_fx = evt.clientX;\n\t\t\telem._pos_fy = evt.clientY;\n\t\t},\n\n\t\t'mousemove [data-long-press]': function (evt)\n\t\t{\n\t\t\tevt.continuePropagation = true;\n\t\t\tif (!evt.source._long_press) return;\n\n\t\t\tevt.source._pos_fx = evt.clientX;\n\t\t\tevt.source._pos_fy = evt.clientY;\n\t\t},\n\n\t\t'touchstart [data-long-press]': function (evt)\n\t\t{\n\t\t\tevt.continuePropagation = true;\n\t\t\tif (evt.source._long_press) return;\n\n\t\t\tlet elem = evt.source;\n\n\t\t\telem._long_press = setTimeout(() => {\n\t\t\t\tlet dx = elem._pos_fx - elem._pos_sx;\n\t\t\t\tlet dy = elem._pos_fy - elem._pos_sy;\n\n\t\t\t\telem._long_press = null;\n\n\t\t\t\tlet d = Math.sqrt(dx*dx + dy*dy);\n\t\t\t\tif (d < 5) {\n\t\t\t\t\telem._long_press = false;\n\t\t\t\t\tthis.dispatchOn (elem, 'long-press');\n\t\t\t\t}\n\t\t\t}, 500);\n\n\t\t\telem._pos_sx = evt.touches[0].clientX;\n\t\t\telem._pos_sy = evt.touches[0].clientY;\n\n\t\t\telem._pos_fx = evt.touches[0].clientX;\n\t\t\telem._pos_fy = evt.touches[0].clientY;\n\t\t},\n\n\t\t'touchmove [data-long-press]': function (evt)\n\t\t{\n\t\t\tevt.continuePropagation = true;\n\t\t\tif (!evt.source._long_press) return;\n\n\t\t\tevt.source._pos_fx = evt.touches[0].clientX;\n\t\t\tevt.source._pos_fy = evt.touches[0].clientY;\n\t\t},\n\n\t\t'mouseup [data-long-press]': function (evt)\n\t\t{\n\t\t\tif (evt.source._long_press === false)\n\t\t\t\treturn;\n\n\t\t\tif (evt.source._long_press) {\n\t\t\t\tclearTimeout(evt.source._long_press);\n\t\t\t\tevt.source._long_press = null;\n\t\t\t}\n\t\n\t\t\tevt.continuePropagation = true;\n\t\t},\n\t\n\t\t'touchend [data-long-press]': function (evt)\n\t\t{\n\t\t\tif (evt.source._long_press === false)\n\t\t\t\treturn;\n\t\n\t\t\tif (evt.source._long_press) {\n\t\t\t\tclearTimeout(evt.source._long_press);\n\t\t\t\tevt.source._long_press = null;\n\t\t\t}\n\t\n\t\t\tevt.continuePropagation = true;\n\t\t},\n\n\t\t'click [data-action]': function(evt)\n\t\t{\n\t\t\tif (evt.source._long_press === false)\n\t\t\t\treturn;\n\n\t\t\tlet opts = evt.source.dataset.action.split(' ');\n\n\t\t\tif (opts[0] in this)\n\t\t\t\tthis[opts[0]] ({ ...evt.params, ...evt.source.dataset, ...opts, length: opts.length }, evt);\n\t\t\telse\n\t\t\t\tevt.continuePropagation = true;\n\t\t},\n\n\t\t'long-press [data-long-press]': function(evt)\n\t\t{\n\t\t\tlet opts = evt.source.dataset.longPress.split(' ');\n\n\t\t\tif (opts[0] in this)\n\t\t\t\tthis[opts[0]] ({ ...evt.params, ...evt.source.dataset, ...opts, length: opts.length }, evt);\n\t\t\telse\n\t\t\t\tevt.continuePropagation = true;\n\t\t},\n\n\t\t'keyup(13) input[data-enter]': function(evt)\n\t\t{\n\t\t\tlet opts = evt.source.dataset.enter.split(' ');\n\n\t\t\tif (opts[0] in this)\n\t\t\t\tthis[opts[0]] ({ ...evt.params, ...evt.source.dataset, ...opts, length: opts.length }, evt);\n\t\t\telse\n\t\t\t\tevt.continuePropagation = true;\n\t\t}\n\t},\n\n\t/**\n\t * Internal routes map, set by `bindRoutes`.\n\t */\n\troutes: null,\n\n\t/**\n\t * \tElement constructor.\n\t */\n\t__ctor: function()\n\t{\n\t\tthis._list_watch = [];\n\t\tthis._list_visible = [];\n\t\tthis._list_attr = [];\n\t\tthis._list_property = [];\n\n\t\tif ('root' in this.dataset)\n\t\t{\n\t\t\tif (this.dataset.root == 'false')\n\t\t\t\tthis.isRoot = false;\n\t\t}\n\n\t\tthis.style.display = 'block';\n\n\t\tthis.eid = Math.random().toString().substr(2);\n\n\t\tif (this.model != null)\n\t\t{\n\t\t\tlet tmp = this.model;\n\t\t\tthis.model = null;\n\t\t\tthis.setModel (tmp, false);\n\t\t}\n\n\t\tObject.keys(this._super).reverse().forEach(i =>\n\t\t{\n\t\t\tif ('init' in this._super[i])\n\t\t\t\tthis._super[i].init();\n\t\t});\n\n\t\tif (Element.debug)\n\t\t\tconsole.log('>> ' + this.tagName + ' INIT ON ' + this.parentElement.tagName);\n\n\t\tthis.init();\n\n\t\tif (this.events)\n\t\t\tthis.bindEvents (this.events);\n\n\t\tif (this.contents)\n\t\t\tthis.setInnerHTML(this.contents);\n\n\t\tsetTimeout(() => {\n\t\t\tif (this.tagName.toLowerCase() !== 'r-dom-probe')\n\t\t\t\tthis.appendChild(document.createElement('r-dom-probe'));\n\t\t\telse\n\t\t\t\tthis.markReady();\n\t\t}, 0);\n\t},\n\n\t/**\n\t * \tInitializes the element. Called after construction of the instance.\n\t */\n\tinit: function()\n\t{\n\t},\n\n\t/**\n\t * \tExecuted when the children of the element are ready.\n\t */\n\tready: function()\n\t{\n\t},\n\n\t/**\n\t * \tExecuted after ready and after the root is also ready.\n\t */\n\trready: function()\n\t{\n\t},\n\n\t/**\n\t * \tMarks the element as ready.\n\t */\n\tmarkReady: function (list=null)\n\t{\n\t\tthis.readyLocked++;\n\n\t\tif (!this.isReady)\n\t\t{\n\t\t\tthis.isReady = 1;\n\n\t\t\t// Set model is `model` property was set in the element.\n\t\t\tif ('model' in this.dataset)\n\t\t\t{\n\t\t\t\tlet ref = this.getFieldByPath(this.dataset.model);\n\t\t\t\tif (ref) this.setModel(ref);\n\t\t\t}\n\n\t\t\t// Run ready methods in class hierarchy.\n\t\t\tObject.keys(this._super).reverse().forEach(i =>\n\t\t\t{\n\t\t\t\tif ('ready' in this._super[i])\n\t\t\t\t\tthis._super[i].ready();\n\t\t\t});\n\n\t\t\tif (Element.debug)\n\t\t\t\tconsole.log('>> ' + this.tagName + ' READY');\n\n\t\t\tthis.ready();\n\t\t\tif (this.onready) this.onready(this);\n\n\t\t\tthis.collectWatchers();\n\t\t}\n\t\telse\n\t\t\tthis.collectWatchers();\n\n\t\tlet root = this.findCustomParent(this);\n\n\t\tif (Element.debug)\n\t\t\tconsole.log(this.tagName + ' ROOT IS ' + (root ? root.tagName : 'NULL'));\n\n\t\tif (root && root.isReady === 0 && this.isReady != 0)\n\t\t\troot.checkReady();\n\n\t\tlet rootReady = false;\n\n\t\tif (root && root.isReady === 2 && this.isReady !== 2)\n\t\t{\n\t\t\tthis.getRoot();\n\n\t\t\tif (this.root && this.dataset.ref)\n\t\t\t{\n\t\t\t\tif (Element.debug)\n\t\t\t\t\tconsole.log(this.tagName + ' REF AS `' + this.dataset.ref + '` ON ' + this.root.tagName);\n\n\t\t\t\tthis.root[this.dataset.ref] = this;\n\t\t\t\tthis.root.onRefAdded (this.dataset.ref, this);\n\t\t\t}\n\n\t\t\trootReady = true;\n\t\t}\n\n\t\tif (!root && this.isReady !== 2)\n\t\t{\n\t\t\trootReady = true;\n\t\t}\n\n\t\tif (rootReady)\n\t\t{\n\t\t\tthis.isReady = 2;\n\n\t\t\tif (list !== null) {\n\t\t\t\tfor (let elem of list)\n\t\t\t\t\telem.checkReady();\n\t\t\t}\n\n\t\t\tif (Element.debug)\n\t\t\t\tconsole.log('>> ' + this.tagName + ' RREADY');\n\n\t\t\tObject.keys(this._super).reverse().forEach(i =>\n\t\t\t{\n\t\t\t\tif ('rready' in this._super[i])\n\t\t\t\t\tthis._super[i].rready();\n\t\t\t});\n\n\t\t\tthis.rready();\n\t\t\tif (this.onrootready) this.onrootready(this);\n\t\t}\n\n\t\tthis.readyLocked--;\n\n\t\tif (this.readyReenter && !this.readyLocked)\n\t\t{\n\t\t\tthis.readyReenter = false;\n\t\t\tthis.checkReady();\n\t\t}\n\n\t\tif (this.tagName.toLowerCase() === 'r-dom-probe')\n\t\t\tthis.remove();\n\t},\n\n\t/**\n\t *\tChecks if all children are ready and fires the appropriate function (`ready` and/or `rready`).\n\t */\n\tcheckReady: function()\n\t{\n\t\tif (this.childNodes.length == 0)\n\t\t\treturn;\n\n\t\tif (this.readyLocked)\n\t\t{\n\t\t\tthis.readyReenter = true;\n\t\t\treturn;\n\t\t}\n\n\t\tlet isReady = true;\n\t\tlet list = [];\n\n\t\tlet result = document.evaluate(\".//*[contains(name(),'-')]\", this, null, XPathResult.ANY_TYPE, null);\n\n\t\tif (Element.debug)\n\t\t\tconsole.log('# CHECKING ' + this.tagName);\n\n\t\twhile (true)\n\t\t{\n\t\t\tlet elem = result.iterateNext();\n\t\t\tif (!elem) break;\n\n\t\t\tif (elem === this)\n\t\t\t\tcontinue;\n\n\t\t\tlet root = this.findCustomParent(elem);\n\t\t\tif (root !== this) continue;\n\n\t\t\tif (Element.debug)\n\t\t\t\tconsole.log('   ' + elem.tagName + ' = ' + elem.isReady);\n\n\t\t\tif (!elem.isReady)\n\t\t\t\tisReady = false;\n\n\t\t\tlist.push(elem);\n\t\t}\n\n\t\tif (!isReady) return;\n\n\t\tthis.markReady(list);\n\t},\n\n\t/**\n\t * \tReturns the value of a field given its path. Starts from `global`, unless the first item in the path is `this`, in which case it will start from the element.\n\t */\n\tgetFieldByPath: function(path)\n\t{\n\t\tif (!path) return null;\n\n\t\tif (typeof(path) !== 'string')\n\t\t\treturn path;\n\n\t\tlet tmp = path.split('.');\n\t\tlet ref = global;\n\n\t\tif (tmp.length && tmp[0] == 'this')\n\t\t{\n\t\t\tref = this;\n\t\t\ttmp.shift();\n\t\t}\n\n\t\tif (tmp.length && tmp[0] == 'root')\n\t\t{\n\t\t\tref = this.getRoot();\n\t\t\ttmp.shift();\n\t\t}\n\n\t\twhile (ref != null && tmp.length != 0)\n\t\t\tref = ref[tmp.shift()];\n\n\t\treturn ref;\n\t},\n\n\t/**\n\t * \tReturns the root of the element (that is, the `root` property). If not set it will attempt to find the root first.\n\t */\n\tgetRoot: function()\n\t{\n\t\treturn this.root ? this.root : (this.root = this.findRoot());\n\t},\n\n\t/**\n\t * \tSets the model of the element and executes the `modelChanged` event handler (unless `update` is set to false).\n\t */\n\tsetModel: function (model, update=true)\n\t{\n\t\tif (!model) return this;\n\n\t\tmodel = Rinn.ensureTypeOf(this.modelt, model);\n\n\t\tif (this.model !== model)\n\t\t{\n\t\t\tif (this.model != null)\n\t\t\t{\n\t\t\t\tthis.model.removeEventListener (this.eid+':modelChanged', this.onModelPreChanged, this);\n\t\t\t\tthis.model.removeEventListener (this.eid+':propertyChanging', this.onModelPropertyChanging, this);\n\t\t\t\tthis.model.removeEventListener (this.eid+':propertyChanged', this.onModelPropertyPreChanged, this);\n\t\t\t\tthis.model.removeEventListener (this.eid+':propertyRemoved', this.onModelPropertyRemoved, this);\n\t\t\t}\n\n\t\t\tthis.model = model;\n\n\t\t\tthis.model.addEventListener (this.eid+':modelChanged', this.onModelPreChanged, this);\n\t\t\tthis.model.addEventListener (this.eid+':propertyChanging', this.onModelPropertyChanging, this);\n\t\t\tthis.model.addEventListener (this.eid+':propertyChanged', this.onModelPropertyPreChanged, this);\n\t\t\tthis.model.addEventListener (this.eid+':propertyRemoved', this.onModelPropertyRemoved, this);\n\t\t}\n\n\t\tif (update !== false)\n\t\t\tthis.model.setNamespace(this.eid).update(true).setNamespace(null);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * \tReturns the model of the element. Added for symmetry only, exactly the same as accesing public property `model` of this class.\n\t */\n\tgetModel: function ()\n\t{\n\t\treturn this.model;\n\t},\n\n\t/**\n\t * \tAdds one or more CSS classes (separated by space) to the element.\n\t */\n\taddClass: function (classString)\n\t{\n\t\tif (!classString) return this;\n\n\t\tclassString.split(' ').forEach(i =>\n\t\t{\n\t\t\ti = i.trim();\n\t\t\tif (!i) return;\n\n\t\t\tif (i[0] == '-' || i[0] == '+')\n\t\t\t\tthis.classList[i[0] == '-' ? 'remove' : 'add'](i.substr(1));\n\t\t\telse\n\t\t\t\tthis.classList.add(i);\n\t\t});\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * \tRemoves one or more CSS classes (separated by space) from the element.\n\t */\n\tremoveClass: function (classString)\n\t{\n\t\tif (!classString) return this;\n\n\t\tclassString.split(' ').forEach(i =>\n\t\t{\n\t\t\ti = i.trim();\n\t\t\tif (!i) return;\n\n\t\t\tif (i[0] == '-' || i[0] == '+')\n\t\t\t\tthis.classList[i[0] == '-' ? 'remove' : 'add'](i.substr(1));\n\t\t\telse\n\t\t\t\tthis.classList.remove(i);\n\t\t});\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * \tSets one or more style properties to the element (separated by semi-colon).\n\t */\n\tsetStyle: function (styleString)\n\t{\n\t\tif (!styleString) return this;\n\n\t\tstyleString.split(';').forEach(i => {\n\t\t\tlet j = (i = i.trim()).indexOf(':');\n\t\t\tif (j == -1) return;\n\n\t\t\tlet name = i.substr(0, j).trim();\n\t\t\tfor (let k = name.indexOf('-'); k != -1; k = name.indexOf('-')) {\n\t\t\t\tname = name.substr(0, k) + name.substr(k+1, 1).toUpperCase() + name.substr(k+2);\n\t\t\t}\n\n\t\t\tthis.style[name] = i.substr(j+1).trim();\n\t\t});\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * \tReturns the width of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n\t */\n\tgetWidth: function (elem=null)\n\t{\n\t\treturn (elem || this).getBoundingClientRect().width;\n\t},\n\n\t/**\n\t * \tReturns the height of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n\t */\n\tgetHeight: function (elem=null)\n\t{\n\t\treturn (elem || this).getBoundingClientRect().height;\n\t},\n\n\t/**\n\t**\tBinds all events in the specified map to the element, the events map can have one of the following forms:\n\t**\n\t**\t\t\"click .button\": \"doSomething\",\t\t(Delegated Event)\n\t**\t\t\"click .button\": function() { },\t(Delegated Event)\n\t**\t\t\"myevt &this\": \"...\",\t\t\t\t(Self Event)\n\t**\t\t\"myevt\": \"...\",\t\t\t\t\t\t(Element Event)\n\t**\t\t\"myevt @objName\": \"...\",\t\t\t(EventDispatcher Event)\n\t**\t\t\"#propname\": \"...\",\t\t\t\t\t(Property Changed Event)\n\t**\t\t\"keyup(10) .input\": \"...\"\t\t\t(Delegated Event with Parameters)\n\t**\n\t**\t>> Element bindEvents (object events);\n\t*/\n\tbindEvents: function (events)\n\t{\n\t\tfor (let evtstr in events)\n\t\t{\n\t\t\tlet hdl = events[evtstr];\n\n\t\t\tif (Rinn.typeOf(hdl) == 'string')\n\t\t\t\thdl = this[hdl];\n\n\t\t\thdl = hdl.bind(this);\n\n\t\t\tvar i = evtstr.indexOf(' ');\n\n\t\t\tvar name = i == -1 ? evtstr : evtstr.substr(0, i);\n\t\t\tvar selector = i == -1 ? '' : evtstr.substr(i + 1);\n\n\t\t\tlet args = null;\n\n\t\t\tvar j = name.indexOf('(');\n\t\t\tif (j != -1)\n\t\t\t{\n\t\t\t\targs = name.substr(j+1, name.length-j-2).split(',');\n\t\t\t\tname = name.substr(0, j);\n\t\t\t}\n\n\t\t\tif (selector[0] == '@')\n\t\t\t{\n\t\t\t\tif (selector != '@this')\n\t\t\t\t{\n\t\t\t\t\tthis[selector.substr(1)].addEventListener(name, hdl);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselector = this;\n\t\t\t}\n\t\t\telse if (selector[0] == '&')\n\t\t\t{\n\t\t\t\tif (selector != '&this')\n\t\t\t\t\tselector = \"[data-ref='\"+selector.substr(1)+\"']\";\n\t\t\t\telse\n\t\t\t\t\tselector = this;\n\t\t\t}\n\n\t\t\tif (name.substr(0, 1) == '#')\n\t\t\t{\n\t\t\t\tthis.listen('propertyChanged.'+name.substr(1), this, hdl);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (args != null)\n\t\t\t{\n\t\t\t\tswitch (name)\n\t\t\t\t{\n\t\t\t\t\tcase 'keyup': case 'keydown':\n\t\t\t\t\t\tthis.listen (name, selector, function (evt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (Rinn.indexOf(args, evt.keyCode.toString()) != -1)\n\t\t\t\t\t\t\t\treturn hdl (evt, args);\n\n\t\t\t\t\t\t\tevt.continuePropagation = true;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.listen (name, selector, hdl);\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tBinds all routes in the specified map to the Router object.\n\t**\n\t**\t\t\"route-path\": \"doSomething\"\t\t\t\t\t\tOn-Route\n\t**\t\t\"route-path\": function (evt, args) { }\t\t\tOn-Route\n\t**\t\t\"!route-path\": \"doSomething\"\t\t\t\t\tOn-UnRoute\n\t**\t\t\"!route-path\": function (evt, args) { }\t\t\tOn-UnRoute\n\t**\n\t**\t>> Element bindRoutes ();\n\t*/\n\tbindRoutes: function ()\n\t{\n\t\tif (!this.routes)\n\t\t\treturn;\n\n\t\tfor (let routeStr in this.routes)\n\t\t{\n\t\t\tlet route = routeStr[0] === '!' ? Router.getRoute(routeStr.substr(1)) : Router.getRoute(routeStr);\n\t\t\tlet handler = this.routes[routeStr];\n\n\t\t\tif (Rinn.typeOf(handler) === 'string')\n\t\t\t\thandler = this[handler];\n\n\t\t\tif (routeStr[0] === '!')\n\t\t\t\troute.addHandler(handler, true, this);\n\t\t\telse\n\t\t\t\troute.addHandler(handler, false, this);\n\t\t}\n\t},\n\n\t/**\n\t * Unbinds all routes added by bindRoutes.\n\t */\n\tunbindRoutes: function ()\n\t{\n\t\tif (!this.routes)\n\t\t\treturn;\n\n\t\tfor (let routeStr in this.routes)\n\t\t{\n\t\t\tlet route = routeStr[0] === '!' ? Router.getRoute(routeStr.substr(1)) : Router.getRoute(routeStr);\n\t\t\tlet handler = this.routes[routeStr];\n\n\t\t\tif (Rinn.typeOf(handler) === 'string')\n\t\t\t\thandler = this[handler];\n\n\t\t\tif (routeStr[0] === '!')\n\t\t\t\troute.removeHandler(handler, true, this);\n\t\t\telse\n\t\t\t\troute.removeHandler(handler, false, this);\n\t\t}\n\t},\n\n\t/**\n\t**\tExecutes the underlying event handler given an event and a selector. Called internally by listen().\n\t**\n\t**\t>> void _eventHandler (event evt, string selector, function handler);\n\t*/\n\t_eventHandler: function (evt, selector, handler)\n\t{\n\t\tif (evt.continuePropagation === false)\n\t\t\treturn;\n\n\t\tevt.continuePropagation = true;\n\t\tevt.source = evt.target;\n\n\t\tif (selector && selector instanceof HTMLElement)\n\t\t{\n\t\t\tif (evt.source === selector)\n\t\t\t{\n\t\t\t\tevt.continuePropagation = false;\n\n\t\t\t\tif (handler.call (this, evt, evt.detail) === true)\n\t\t\t\t\tevt.continuePropagation = true;\n\t\t\t}\n\t\t}\n\t\telse if (selector && selector != '*')\n\t\t{\n\t\t\tlet elems = this.querySelectorAll(selector);\n\n\t\t\twhile (evt.source !== this)\n\t\t\t{\n\t\t\t\tlet i = Rinn.indexOf (elems, evt.source, true);\n\t\t\t\tif (i !== -1)\n\t\t\t\t{\n\t\t\t\t\tevt.continuePropagation = false;\n\n\t\t\t\t\tif (handler.call (this, evt, evt.detail) === true)\n\t\t\t\t\t\tevt.continuePropagation = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tevt.source = evt.source.parentElement;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tevt.continuePropagation = false;\n\n\t\t\tif (handler.call (this, evt, evt.detail) === true)\n\t\t\t\tevt.continuePropagation = true;\n\t\t}\n\n\t\tif (evt.continuePropagation === false)\n\t\t{\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t}\n\t},\n\n\t/**\n\t**\tListens for an event on elements matching the specified selector, returns an object with a single method `remove` used\n\t**\tto remove the listener when it is no longer needed.\n\t**\n\t**\t>> object listen (string eventName, string selector, function handler);\n\t**\t>> object listen (string eventName, function handler);\n\t*/\n\tlisten: function (eventName, selector, handler)\n\t{\n\t\tlet eventCatcher = false;\n\t\tlet eventImmediate = false;\n\n\t\tif (Rinn.typeOf(selector) == 'function')\n\t\t{\n\t\t\thandler = selector;\n\t\t\tselector = null;\n\t\t}\n\n\t\tif (eventName[eventName.length-1] == '!')\n\t\t{\n\t\t\teventName = eventName.substr(0, eventName.length-1);\n\t\t\teventCatcher = true;\n\t\t}\n\n\t\tif (eventName[0] == '!')\n\t\t{\n\t\t\teventName = eventName.substr(1);\n\t\t\teventImmediate = true;\n\t\t}\n\n\t\tlet callback0 = null;\n\t\tlet callback1 = null;\n\t\tlet self = this;\n\n\t\tthis.addEventListener (eventName, callback0 = (evt) =>\n\t\t{\n\t\t\tif (evt.continuePropagation === false)\n\t\t\t\treturn;\n\n\t\t\tif (!evt.firstCapture)\n\t\t\t{\n\t\t\t\tevt.firstCapture = this;\n\t\t\t\tevt.firstCaptureCount = 0;\n\t\t\t\tevt.queue = [];\n\t\t\t}\n\n\t\t\tif (evt.firstCapture === this)\n\t\t\t\tevt.firstCaptureCount++;\n\n\t\t\tif (eventCatcher == true)\n\t\t\t\tevt.queue.push([this, selector, handler]);\n\n\t\t\tif (eventImmediate == true)\n\t\t\t\tthis._eventHandler(evt, selector, handler);\n\t\t},\n\t\ttrue);\n\n\t\tthis.addEventListener (eventName, callback1 = (evt) =>\n\t\t{\n\t\t\tif (evt.continuePropagation === false)\n\t\t\t\treturn;\n\n\t\t\tif (eventCatcher != true && eventImmediate != true)\n\t\t\t\tthis._eventHandler(evt, selector, handler);\n\n\t\t\tif (evt.firstCapture === this && evt.continuePropagation !== false)\n\t\t\t{\n\t\t\t\tif (--evt.firstCaptureCount == 0)\n\t\t\t\t{\n\t\t\t\t\twhile (evt.queue.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet q = evt.queue.pop();\n\t\t\t\t\t\tq[0]._eventHandler(evt, q[1], q[2]);\n\t\t\t\t\t}\n\n\t\t\t\t\tevt.continuePropagation = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfalse);\n\n\t\treturn {\n\t\t\tremoved: false,\n\t\t\tremove: function() {\n\t\t\t\tif (this.removed) return;\n\t\t\t\tthis.removed = true;\n\t\t\t\tself.removeEventListener(eventName, callback0, true);\n\t\t\t\tself.removeEventListener(eventName, callback1, false);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tCreates an event object for later dispatch.\n\t*/\n\tcreateEventObject: function(eventName, args, bubbles)\n\t{\n\t\tlet evt;\n\n\t\tif (eventName == 'click')\n\t\t\tevt = new MouseEvent(eventName, { bubbles: bubbles, detail: args });\n\t\telse\n\t\t\tevt = new CustomEvent (eventName, { bubbles: bubbles, detail: args });\n\n\t\treturn evt;\n\t},\n\n\t/**\n\t**\tDispatches a new event with the specified name and the given arguments.\n\t*/\n\tdispatch: function (eventName, args=null, bubbles=true)\n\t{\n\t\tlet propName = 'on' + eventName.toLowerCase();\n\t\tif (propName in this) {\n\t\t\tthis[propName] (args, this);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dispatchEvent (this.createEventObject(eventName, args, bubbles));\n\t},\n\n\t/**\n\t**\tDispatches a new event on the specified element with the given name and arguments (uses `CustomEvent`).\n\t*/\n\tdispatchOn: function (elem, eventName, args=null, bubbles=true)\n\t{\n\t\telem.dispatchEvent (this.createEventObject(eventName, args, bubbles));\n\t},\n\n\t/**\n\t**\tSets the innerHTML property of the element and runs some post set-content tasks.\n\t**\n\t**\t>> void setInnerHTML (value);\n\t*/\n\tsetInnerHTML: function (value)\n\t{\n\t\tthis.readyLocked++;\n\t\tthis.innerHTML = value;\n\t\tthis.readyLocked--;\n\t},\n\n\t/**\n\t**\tCollects all watchers (data-watch, data-visible, data-attr, data-property), that depend on the model, should be invoked when the\n    **  structure of the element changed (added/removed children). This is automatically called when the setInnerHTML method is called.\n\t**\n\t**\tNote that for 3rd party libs that add children to this element (which could probably have a watcher) will possibly result in\n\t**\tduplication of the added elements when compiling the innerHTML template. To prevent this add the 'pseudo' CSS class to any\n\t**\telement that should not be added to the HTML template.\n\t**\n\t**\t>> void collectWatchers ();\n\t*/\n\tcollectWatchers: function ()\n\t{\n\t\tlet self = this;\n\t\tlet modified = false;\n\t\tlet list;\n\n\t\tif (!this.isRoot) return;\n\n\t\tlet _list_watch_length = this._list_watch.length;\n\t\tlet _list_visible_length = this._list_visible.length;\n\t\tlet _list_attr_length = this._list_attr.length;\n\t\tlet _list_property_length = this._list_property.length;\n\n\t\t/* *** */\n\t\tlist = this.querySelectorAll('[data-watch]');\n\t\tfor (let i = 0; i < list.length; i++)\n\t\t{\n\t\t\tfor (let j of list[i].querySelectorAll('.pseudo'))\n\t\t\t\tj.remove();\n\n\t\t\tlist[i]._template = Template.compile(list[i].innerHTML);\n\t\t\tlist[i]._watch = new RegExp('^(' + list[i].dataset.watch + ')$');\n\t\t\tlist[i].innerHTML = '';\n\n\t\t\tlist[i].removeAttribute('data-watch');\n\t\t\tthis._list_watch.push(list[i]);\n\t\t}\n\n\t\tif ('selfWatch' in this.dataset)\n\t\t{\n\t\t\tfor (let j of this.querySelectorAll('.pseudo'))\n\t\t\t\tj.remove();\n\n\t\t\tthis._template = Template.compile(this.innerHTML);\n\t\t\tthis._watch = new RegExp('^(' + this.dataset.selfWatch + ')$');\n\t\t\tthis.innerHTML = '';\n\n\t\t\tthis.removeAttribute('data-self-watch');\n\t\t\tthis._list_watch.push(this);\n\t\t}\n\n\t\t/* *** */\n\t\tlist = this.querySelectorAll('[data-visible]');\n\t\tfor (let i = 0; i < list.length; i++)\n\t\t{\n\t\t\tlist[i]._visible = Template.compile(list[i].dataset.visible);\n\n\t\t\tlist[i].removeAttribute('data-visible');\n\t\t\tthis._list_visible.push(list[i]);\n\t\t}\n\n\t\tif ('selfVisible' in this.dataset)\n\t\t{\n\t\t\tthis._visible = Template.compile(this.dataset.selfVisible);\n\n\t\t\tthis.removeAttribute('data-self-visible');\n\t\t\tthis._list_visible.push(this);\n\t\t}\n\n\t\t/* *** */\n\t\tlist = this.querySelectorAll('[data-attr]');\n\t\tfor (let i = 0; i < list.length; i++)\n\t\t{\n            list[i]._attr = [];\n\n            for (let j of list[i].dataset.attr.split(';'))\n            {\n                j = j.split(':');\n                if (j.length != 2) continue;\n\n                list[i]._attr.push({\n                    name: j[0].trim(),\n                    value: Template.compile(j[1].trim())\n                });\n            }\n\n\t\t\tlist[i].removeAttribute('data-attr');\n\t\t\tthis._list_attr.push(list[i]);\n\t\t}\n\n\t\tif ('selfAttr' in this.dataset)\n\t\t{\n            this._attr = [];\n\n            for (let j of this.dataset.selfAttr.split(';'))\n            {\n                j = j.split(':');\n                if (j.length != 2) continue;\n\n                this._attr.push({\n                    name: j[0].trim(),\n                    value: Template.compile(j[1].trim())\n                });\n            }\n\n\t\t\tthis.removeAttribute('data-self-attr');\n\t\t\tthis._list_attr.push(this);\n\t\t}\n\n\t\t/* *** */\n\t\tlist = this.querySelectorAll('[data-property]');\n\t\tfor (let i = 0; i < list.length; i++)\n\t\t{\n\t\t\tlist[i].onchange = list[i].onblur = function()\n\t\t\t{\n\t\t\t\tswitch (this.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'radio':\n\t\t\t\t\t\tif (this.checked) self.getModel().set(this.name, this.value);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\tself.getModel().set(this.name, this.checked ? '1' : '0');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'field':\n\t\t\t\t\t\tself.getModel().set(this.name, this.getValue());\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tself.getModel().set(this.name, this.value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (list[i].tagName == 'SELECT')\n\t\t\t{\n\t\t\t\tlist[i].onmouseup = function()\n\t\t\t\t{\n\t\t\t\t\tself.getModel().set(this.name, this.value);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tlist[i].name = list[i].dataset.property;\n\n\t\t\tlist[i].removeAttribute('data-property');\n\t\t\tthis._list_property.push(list[i]);\n\t\t}\n\n\t\tif ('selfProperty' in this.dataset)\n\t\t{\n\t\t\tthis.onchange = this.onblur = function()\n\t\t\t{\n\t\t\t\tswitch (this.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'radio':\n\t\t\t\t\t\tif (this.checked) self.getModel().set(this.name, this.value);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\tself.getModel().set(this.name, this.checked ? '1' : '0');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'field':\n\t\t\t\t\t\tself.getModel().set(this.name, this.getValue());\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tself.getModel().set(this.name, this.value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (this.tagName == 'SELECT')\n\t\t\t{\n\t\t\t\tthis.onmouseup = function()\n\t\t\t\t{\n\t\t\t\t\tself.getModel().set(this.name, this.value);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.name = this.dataset.selfProperty;\n\n\t\t\tthis.removeAttribute('data-self-property');\n\t\t\tthis._list_property.push(this);\n\t\t}\n\n\t\t/* *** */\n\t\tthis._list_watch = this._list_watch.filter(i => i.parentElement != null);\n\t\tif (_list_watch_length != this._list_watch.length) modified = true;\n\n\t\tthis._list_visible = this._list_visible.filter(i => i.parentElement != null);\n\t\tif (_list_visible_length != this._list_visible.length) modified = true;\n\n        this._list_attr = this._list_attr.filter(i => i.parentElement != null);\n\t\tif (_list_attr_length != this._list_attr.length) modified = true;\n\n\t\tthis._list_property = this._list_property.filter(i => i.parentElement != null);\n\t\tif (_list_property_length != this._list_property.length) modified = true;\n\n\t\tif (this.model != null && modified)\n\t\t\tthis.model.setNamespace(this.eid).update(true).setNamespace(null);\n\t},\n\n\t/**\n\t**\tExecuted when the element is created and yet not attached to the DOM tree.\n\t*/\n\tonCreated: function()\n\t{\n\t},\n\n\t/**\n\t * Executed when the element is attached to the DOM tree.\n\t */\n\telementConnected: function()\n\t{\n\t\tthis.bindRoutes();\n\t\tthis.onConnected();\n\t},\n\n\t/**\n\t * Executed when the element is no longer a part of the DOM tree.\n\t */\n\telementDisconnected: function()\n\t{\n\t\tthis.unbindRoutes();\n\t},\n\n\t/**\n\t**\tExecuted when the element is attached to the DOM tree.\n\t*/\n\tonConnected: function()\n\t{\n        if (this.onconnected) this.onconnected(this);\n\t},\n\n\t/**\n\t**\tExecuted when the element is no longer a part of the DOM tree.\n\t*/\n\tonDisconnected: function()\n\t{\n        if (this.ondisconnected) this.ondisconnected(this);\n\t},\n\n\t/**\n\t**\tExecuted on the root element when a child element has `data-ref` attribute and it was added to it.\n\t*/\n\tonRefAdded: function (name, element)\n\t{\n\t},\n\n\t/**\n\t**\tExecuted on the root element when a child element has `data-ref` attribute and it was removed from it.\n\t*/\n\tonRefRemoved: function (name, element)\n\t{\n\t},\n\n\t/**\n\t**\tEvent handler invoked when the model has changed, executed before onModelChanged() to update internal dependencies,\n\t**\tshould not be overriden or elements watching the model will not be updated.\n\t**\n\t**\t>> void onModelPreChanged (evt, args);\n\t*/\n\tonModelPreChanged: function (evt, args)\n\t{\n\t\tlet data = this.getModel().get();\n\n\t\tfor (let i = 0; i < this._list_watch.length; i++)\n\t\t{\n\t\t\tfor (let j of args.fields)\n\t\t\t{\n\t\t\t\tif (!this._list_watch[i]._watch.test(j))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._list_watch[i].innerHTML = this._list_watch[i]._template(data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < this._list_visible.length; i++)\n\t\t{\n\t\t\tif (!!this._list_visible[i]._visible(data, 'arg'))\n\t\t\t\tthis._list_visible[i].style.removeProperty('display');\n\t\t\telse\n\t\t\t\tthis._list_visible[i].style.setProperty('display', 'none', 'important');\n\t\t}\n\n\t\tfor (let i = 0; i < this._list_attr.length; i++)\n\t\t{\n            for (let j of this._list_attr[i]._attr)\n                this._list_attr[i][j.name] = j.value(data, 'arg');\n\t\t}\n\n\t\tthis.onModelChanged(evt, args);\n\t},\n\n\t/**\n\t**\tEvent handler invoked when the model has changed.\n\t*/\n\tonModelChanged: function (evt, args) // @override\n\t{\n\t},\n\n\t/**\n\t**\tEvent handler invoked when a property of the model is changing. Fields `name` and `value` can be found in the `args` object.\n\t*/\n\tonModelPropertyChanging: function (evt, args) // @override\n\t{\n\t},\n\n\t/**\n\t**\tEvent handler invoked when a property of the model has changed, executed before onModelPropertyChanged() to update internal\n\t**\tdependencies. Automatically triggers internal events named `propertyChanged.<propertyName>` and `propertyChanged`.\n\t**\tShould not be overriden or elements depending on the property will not be updated.\n\t*/\n\tonModelPropertyPreChanged: function (evt, args)\n\t{\n\t\tfor (let i = 0; i < this._list_property.length; i++)\n\t\t{\n\t\t\tif (this._list_property[i].name == args.name)\n\t\t\t{\n\t\t\t\tlet trigger = true;\n\n\t\t\t\tswitch (this._list_property[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'radio':\n\t\t\t\t\t\tif (this._list_property[i].value != args.value)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._list_property[i].parentElement.classList.remove('active');\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._list_property[i].checked = true;\n\t\t\t\t\t\tthis._list_property[i].parentElement.classList.add('active');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\tif (~~args.value)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._list_property[i].checked = true;\n\t\t\t\t\t\t\tthis._list_property[i].parentElement.classList.add('active');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._list_property[i].checked = false;\n\t\t\t\t\t\t\tthis._list_property[i].parentElement.classList.remove('active');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'field':\n\t\t\t\t\t\tthis._list_property[i].val = this._list_property[i].dataset.value = args.value;\t\n\t\t\t\t\t\tthis._list_property[i].setValue (args.value);\n\t\t\t\t\t\ttrigger = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis._list_property[i].value = args.value;\n\t\t\t\t\t\tthis._list_property[i].val = this._list_property[i].dataset.value = args.value;\t\n\n\t\t\t\t\t\tif (this._list_property[i].value != args.value)\n\t\t\t\t\t\t\ttrigger = false;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (trigger && this._list_property[i].onchange)\n\t\t\t\t\tthis._list_property[i].onchange();\n\t\t\t}\n\t\t}\n\n\t\tthis.dispatch ('propertyChanged.' + args.name, args, false);\n\t\tthis.dispatch ('propertyChanged', args, false);\n\n\t\tthis.onModelPropertyChanged(evt, args);\n\t},\n\n\t/**\n\t**\tEvent handler invoked when a property of the model has changed.\n\t*/\n\tonModelPropertyChanged: function (evt, args) // @override\n\t{\n\t},\n\n\t/**\n\t**\tEvent handler invoked when a property of the model is removed. Field `name` can be found in the `args` object.\n\t*/\n\tonModelPropertyRemoved: function (evt, args) // @override\n\t{\n\t},\n\n\t/*\n\t**\tRuns the following preparation procedures on the specified prototype:\n\t**\t\t- All functions named 'event <event-name> [event-selector]' will be moved to the 'events' map.\n\t**\t\t- All functions named 'route <route-path>' will be moved to the 'routes' map.\n\t**\n\t**\t>> void preparePrototype (object proto);\n\t*/\n\tpreparePrototype: function (proto)\n\t{\n\t\tif (proto.__prototypePrepared === true)\n\t\t\treturn;\n\n\t\tproto.__prototypePrepared = true;\n\n\t\tif (!proto.hasOwnProperty('events') || !proto.events)\n\t\t\tproto.events = { };\n\n\t\tif (!proto.hasOwnProperty('routes') || !proto.routes)\n\t\t\tproto.routes = { };\n\n\t\tfor (let i in proto)\n\t\t{\n\t\t\tif (i.startsWith('event '))\n\t\t\t{\n\t\t\t\tproto.events[i.substr(6)] = proto[i];\n\t\t\t\tdelete proto[i];\n\t\t\t}\n\t\t\telse if (i.startsWith('route '))\n\t\t\t{\n\t\t\t\tproto.routes[i.substr(6)] = proto[i];\n\t\t\t\tdelete proto[i];\n\t\t\t}\n\t\t}\n\t},\n\n\t/*\n\t**\tRegisters a new custom element with the specified name. Extra functionality can be added with one or more prototypes, by default\n\t**\tall elements also get the `Element` prototype. Note that the final prototypes of all registered elements are stored, and if you want\n\t**\tto inherit another element's prototype just provide its name (string) in the protos argument list.\n\t**\n\t**\t>> class register (string name, ...(object|string) protos);\n\t*/\n\tregister: function (name, ...protos)\n\t{\n\t\tconst newElement = class extends HTMLElement\n\t\t{\n\t\t\tconstructor()\n\t\t\t{\n\t\t\t\tsuper();\n\t\t\t\tthis.invokeConstructor = true;\n\n\t\t\t\tif (Element.debug)\n\t\t\t\t\tconsole.log('CREATED ' + this.tagName);\n\n\t\t\t\tthis._super = { };\n\n\t\t\t\tfor (let i of Object.entries(this.constructor.prototype._super))\n\t\t\t\t{\n\t\t\t\t\tthis._super[i[0]] = { };\n\n\t\t\t\t\tfor (let j of Object.entries(i[1])) {\n\t\t\t\t\t\tthis._super[i[0]][j[0]] = j[1].bind(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.onCreated();\n\t\t\t}\n\n\t\t\tfindRoot (srcElement)\n\t\t\t{\n\t\t\t\tlet elem = srcElement ? srcElement : this.parentElement;\n\n\t\t\t\twhile (elem != null)\n\t\t\t\t{\n\t\t\t\t\tif ('isRoot' in elem && elem.isRoot === true)\n\t\t\t\t\t\treturn elem;\n\n\t\t\t\t\telem = elem.parentElement;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfindCustomParent (srcElement)\n\t\t\t{\n\t\t\t\tlet elem = srcElement ? srcElement.parentElement : this.parentElement;\n\n\t\t\t\twhile (elem != null)\n\t\t\t\t{\n\t\t\t\t\tif (elem.tagName.indexOf('-') !== -1)\n\t\t\t\t\t\treturn elem;\n\n\t\t\t\t\telem = elem.parentElement;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconnectReference (root=null, flags=255)\n\t\t\t{\n\t\t\t\tif (!this.root && (flags & 1) == 1)\n\t\t\t\t{\n\t\t\t\t\tif (root == null) root = this.findRoot();\n\t\t\t\t\tif (root != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.dataset.ref)\n\t\t\t\t\t\t\troot[this.dataset.ref] = this;\n\n\t\t\t\t\t\tthis.root = root;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconnectedCallback ()\n\t\t\t{\n\t\t\t\tthis.connectReference(null, 1);\n\n\t\t\t\tif (this.invokeConstructor)\n\t\t\t\t{\n\t\t\t\t\tthis.invokeConstructor = false;\n\t\t\t\t\tthis.__ctor();\n\t\t\t\t}\n\n\t\t\t\tthis.connectReference(null, 2);\n\t\t\t\tthis.elementConnected();\n\n\t\t\t\tif (this.dataset.xref)\n\t\t\t\t\tglobalThis[this.dataset.xref] = this;\n\t\t\t}\n\n\t\t\tdisconnectedCallback()\n\t\t\t{\n\t\t\t\tif (this.root)\n\t\t\t\t{\n\t\t\t\t\tif (this.dataset.ref)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.root.onRefRemoved (this.dataset.ref, this);\n\n\t\t\t\t\t\tdelete this.root[this.dataset.ref];\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.root = null;\n\t\t\t\t}\n\n\t\t\t\tthis.elementDisconnected();\n\n\t\t\t\tif (this.dataset.xref)\n\t\t\t\t\tdelete globalThis[this.dataset.xref];\n\t\t\t}\n\t\t};\n\n\t\tRinn.override (newElement.prototype, Element);\n\n\t\tconst proto = { };\n\t\tconst _super = { };\n\t\tconst events = Rinn.clone(Element.events);\n\n\t\tlet __init = true;\n\t\tlet __ready = true;\n\t\tlet __rready = true;\n\t\tlet __check;\n\n\t\tfor (let i = 0; i < protos.length; i++)\n\t\t{\n\t\t\tif (!protos[i]) continue;\n\n\t\t\tif (Rinn.typeOf(protos[i]) == 'string')\n\t\t\t{\n\t\t\t\tconst name = protos[i];\n\n\t\t\t\tprotos[i] = elementPrototypes[name];\n\t\t\t\tif (!protos[i]) continue;\n\n\t\t\t\t_super[name] = { };\n\n\t\t\t\tfor (let f in protos[i])\n\t\t\t\t{\n\t\t\t\t\tif (Rinn.typeOf(protos[i][f]) != 'function')\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t_super[name][f] = protos[i][f];\n\t\t\t\t}\n\n\t\t\t\t__init = false;\n\t\t\t\t__ready = false;\n\t\t\t\t__rready = false;\n\t\t\t\t__check = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tElement.preparePrototype(protos[i]);\n\t\t\t\t__check = true;\n\t\t\t}\n\n\t\t\tif ('_super' in protos[i])\n\t\t\t\tRinn.override (_super, protos[i]._super);\n\n\t\t\tif ('events' in protos[i])\n\t\t\t\tRinn.override (events, protos[i].events);\n\n\t\t\tRinn.override (newElement.prototype, protos[i]);\n\t\t\tRinn.override (proto, protos[i]);\n\n\t\t\tif (__check)\n\t\t\t{\n\t\t\t\tif (!__init && 'init' in protos[i]) __init = true;\n\t\t\t\tif (!__ready && 'ready' in protos[i]) __ready = true;\n\t\t\t\tif (!__rready && 'rready' in protos[i]) __rready = true;\n\t\t\t}\n\t\t}\n\n\t\tlet dummy = function(){};\n\n\t\tif (!__init)\n\t\t{\n\t\t\tnewElement.prototype.init = dummy;\n\t\t\tproto.init = dummy;\n\t\t}\n\n\t\tif (!__ready)\n\t\t{\n\t\t\tnewElement.prototype.ready = dummy;\n\t\t\tproto.ready = dummy;\n\t\t}\n\n\t\tif (!__rready)\n\t\t{\n\t\t\tnewElement.prototype.rready = dummy;\n\t\t\tproto.rready = dummy;\n\t\t}\n\n\t\tnewElement.prototype._super = _super;\n\t\tnewElement.prototype.events = events;\n\n\t\tproto._super = _super;\n\t\tproto.events = events;\n\n\t\tcustomElements.define (name, newElement);\n\n\t\telementPrototypes[name] = proto;\n\t\telementClasses[name] = newElement;\n\n\t\treturn newElement;\n\t},\n\n\t/*\n\t**\tExpands an already created custom element with the specified prototype(s).\n\t**\n\t**\t>> void expand (string elementName, ...object protos);\n\t*/\n\texpand: function (name, ...protos)\n\t{\n\t\tif (!(name in elementPrototypes))\n\t\t\treturn;\n\n\t\tconst self = elementPrototypes[name];\n\t\tconst elem = elementClasses[name];\n\n\t\tconst _super = self._super;\n\t\tconst events = self.events;\n\n\t\tfor (let proto of protos)\n\t\t{\n\t\t\tElement.preparePrototype(proto);\n\n\t\t\tif ('_super' in proto)\n\t\t\t\tRinn.override (_super, proto._super);\n\n\t\t\tif ('events' in proto)\n\t\t\t\tRinn.override (events, proto.events);\n\n\t\t\tRinn.override (elem.prototype, proto);\n\t\t\tRinn.override (self, proto);\n\t\t}\n\n\t\telem.prototype._super = _super;\n\t\telem.prototype.events = events;\n\n\t\tself._super = _super;\n\t\tself.events = events;\n\t},\n\n\t/*\n\t**\tAppends a hook to a function of a custom element.\n\t*/\n\thookAppend: function (name, functionName, newFunction)\n\t{\n\t\tif (!(name in elementPrototypes))\n\t\t\treturn;\n\n\t\tlet hook1 = Rinn.hookAppend(elementPrototypes[name], functionName, newFunction);\n\t\tlet hook2 = Rinn.hookAppend(elementClasses[name].prototype, functionName, newFunction);\n\n\t\treturn { \n\t\t\tunhook: function() {\n\t\t\t\thook1.unhook();\n\t\t\t\thook2.unhook();\n\t\t\t}\n\t\t};\n\t},\n\n\t/*\n\t**\tPrepends a hook to a function of a custom element.\n\t*/\n\thookPrepend: function (name, functionName, newFunction)\n\t{\n\t\tif (!(name in elementPrototypes))\n\t\t\treturn;\n\n\t\tlet hook1 = Rinn.hookPrepend(elementPrototypes[name], functionName, newFunction);\n\t\tlet hook2 = Rinn.hookPrepend(elementClasses[name].prototype, functionName, newFunction);\n\n\t\treturn { \n\t\t\tunhook: function() {\n\t\t\t\thook1.unhook();\n\t\t\t\thook2.unhook();\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tBuilt-in action handlers.\n\t*/\n\n\t/**\n\t**\t:toggleClass <className> [<selector>]\n\t**\n\t**\tToggles a CSS class on the element.\n\t*/\n\t':toggleClass': function (args, evt)\n\t{\n\t\tlet elem = evt.source;\n\n\t\tif ('2' in args)\n\t\t\telem = document.querySelector(args[2]);\n\n\t\tif (!elem) return;\n\n\t\tif (elem.classList.contains(args[1]))\n\t\t\telem.classList.remove(args[1]);\n\t\telse\n\t\t\telem.classList.add(args[1]);\n\t},\n\n\t/**\n\t**\t:setClass <className> [<selector>]\n\t**\n\t**\tSets a CSS class on the element.\n\t*/\n\t':setClass': function (args, evt)\n\t{\n\t\tlet elem = evt.source;\n\n\t\tif ('2' in args)\n\t\t\telem = document.querySelector(args[2]);\n\n\t\tif (!elem) return;\n\n\t\telem.classList.add(args[1]);\n\t},\n\n\t/**\n\t**\t:volatileClass <className> [<selector>]\n\t**\n\t**\tAdds the CSS class to the element and any click outside will cause it to be removed.\n\t*/\n\t':volatileClass': function (args, evt)\n\t{\n\t\tlet elem = evt.source;\n\n\t\tif ('2' in args)\n\t\t\telem = document.querySelector(args[2]);\n\n\t\tif (!elem) return;\n\n\t\telem.classList.add(args[1]);\n\n\t\tlet fn = () => {\n\t\t\twindow.removeEventListener('click', fn, true);\n\t\t\telem.classList.remove(args[1]);\n\t\t};\n\n\t\twindow.addEventListener('click', fn, true);\n\t},\n\n\t/**\n\t**\t:toggleClassUnique <className> <parentSelector> <childSelector>\n\t**\n\t**\tToggles a CSS class on the element and only one element in the selected parent can have the class.\n\t*/\n\t':toggleClassUnique': function (args, evt)\n\t{\n\t\tlet elem = evt.source;\n\t\tif (!elem) return;\n\n\t\tif (elem.classList.contains(args[1]))\n\t\t{\n\t\t\telem.classList.remove(args[1]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\telem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach(elem => elem.classList.remove(args[1]));\n\t\t\telem.classList.add(args[1]);\n\t\t}\n\t},\n\n\t/**\n\t**\t:setClassUnique <className> <parentSelector> <childSelector>\n\t**\n\t**\tSets a CSS class on the element and only that element in the selected parent can have the class.\n\t*/\n\t':setClassUnique': function (args, evt)\n\t{\n\t\tlet elem = evt.source;\n\t\tif (!elem) return;\n\n\t\telem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach(elem => elem.classList.remove(args[1]));\n\t\telem.classList.add(args[1]);\n\t}\n};\n\nElement.debug = false;\n\nElement.register('r-elem', {\n});\n\nElement.register ('r-dom-probe', {\n});\n\n/* ****************************************** */\n\n/**\n * Finds the parent element given a selector.\n */\nHTMLElement.prototype.querySelectorParent = function (selector)\n{\n\tlet elem = this;\n\n\twhile (elem != null)\n\t{\n\t\tif (elem.matches(selector))\n\t\t\tbreak;\n\n\t\telem = elem.parentElement;\n\t}\n\n\treturn elem;\n};\n\nexport default Element;\n","\r\nimport base64 from 'base-64';\r\n\r\n/**\r\n * API interface utility functions.\r\n */\r\n\r\nconst Api =\r\n{\r\n\t/**\r\n\t * Flags constants.\r\n\t */\r\n\tREQUEST_PACKAGE_SUPPORTED:\t0x01,\r\n\tREQ64_SUPPORTED: \t\t\t0x02,\r\n\tJSON_RESPONSE_SUPPORTED: \t0x04,\r\n\tXML_RESPONSE_SUPPORTED: \t0x08,\r\n\tINCLUDE_CREDENTIALS:\t\t0x10,\r\n\tUNIQUE_STAMP:\t\t\t\t0x20,\r\n\tDISABLE_CORS:\t\t\t\t0x40,\r\n\r\n\t/**\r\n\t * Target URL for all the API requests. Set by calling `setEndPoint`.\r\n\t */\r\n\tapiUrl: \"/api\",\r\n\r\n\t/**\r\n\t * Capabilities flag.\r\n\t */\r\n\tflags: 0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20,\r\n\r\n\t/**\r\n\t * Indicates if all request data will be packed into a req64 parameter instead of individual fields.\r\n\t */\r\n\tuseReq64: false,\r\n\r\n\t/**\r\n\t * Number of retries to execute each API call before giving up and invoking error handlers.\r\n\t */\r\n\tretries: 0,\r\n\r\n\t/**\r\n\t * Headers for the request.\r\n\t */\r\n\theaders: { },\r\n\r\n\t/**\r\n\t * Level of the current request. Used to detect nested requests.\r\n\t */\r\n\t_requestLevel: 0,\r\n\r\n\t/**\r\n\t * Indicates if all API calls should be bundled in a request package. Activated by calling the packageBegin() function and finished with packageEnd().\r\n\t */\r\n\t_requestPackage: 0,\r\n\r\n\t/**\r\n\t * When in package-mode, this contains the package data to be sent upon a call to packageEnd().\r\n\t */\r\n\t_packageData: [],\r\n\r\n\t/**\r\n\t * Sets the API end-point URL address.\r\n\t */\r\n\tsetEndPoint: function (apiUrl, flags=null)\r\n\t{\r\n\t\tthis.apiUrl = apiUrl;\r\n\t\tthis.flags = flags ?? this.flags;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Overridable filter that processes the response from the server and returns true if it was successful. The `res` parameter indicates the response data, and `req` the request data.\r\n\t */\r\n\tresponseFilter: function (res, req)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t * Starts \"package-mode\" (using the `rpkg` field). Any API calls after this will be bundled together.\r\n\t */\r\n\tpackageBegin: function ()\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t\treturn;\r\n\r\n\t\tthis._requestPackage++;\r\n\t},\r\n\r\n\t/**\r\n\t * Finishes \"package-mode\" and a single API request with the currently constructed package will be sent.\r\n\t */\r\n\tpackageEnd: function (callback)\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t\treturn;\r\n\r\n\t\tif (!this._requestPackage)\r\n\t\t\treturn;\r\n\r\n\t\tif (--this._requestPackage)\r\n\t\t\treturn;\r\n\r\n\t\tthis.packageSend(callback);\r\n\t},\r\n\r\n\t/**\r\n\t * Starts package-mode, executes the callback and finishes package-mode. Therefore any requests made by the callback will be packed together.\r\n\t */\r\n\tbatch: function (callback, responseCallback=null)\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t{\r\n\t\t\tcallback();\r\n\t\t\tif (responseCallback) responseCallback();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.packageBegin();\r\n\t\tcallback();\r\n\t\tthis.packageEnd(responseCallback);\r\n\t},\r\n\r\n\t/**\r\n\t * Sends a single API request with the currently constructed package and maintains package-mode.\r\n\t */\r\n\tpackageSend: function (callback)\r\n\t{\r\n\t\tif (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t\treturn;\r\n\r\n\t\tif (!this._packageData.length)\r\n\t\t\treturn;\r\n\r\n\t\tlet _packageData = this._packageData;\r\n\t\tthis._packageData = [];\r\n\r\n\t\tvar rpkg = \"\";\r\n\r\n\t\tfor (var i = 0; i < _packageData.length; i++)\r\n\t\t\trpkg += \"r\"+i+\",\"+base64.encode(this.encodeParams(_packageData[i][2]))+\";\";\r\n\r\n\t\tthis._showProgress();\r\n\r\n\t\tthis.apiCall (\r\n\t\t\t{ rpkg: rpkg },\r\n\r\n\t\t\t(res, req) =>\r\n\t\t\t{\r\n\t\t\t\tthis._hideProgress();\r\n\r\n\t\t\t\tfor (let i = 0; i < _packageData.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar response = res[\"r\"+i];\r\n\t\t\t\t\t\tif (!response)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (_packageData[i][0] != null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (this.responseFilter (response, _packageData[i][2]))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t_packageData[i][0] (response, _packageData[i][2]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (callback) callback();\r\n\t\t\t},\r\n\r\n\t\t\t(req) =>\r\n\t\t\t{\r\n\t\t\t\tthis._hideProgress();\r\n\r\n\t\t\t\tfor (let i = 0; i < _packageData.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t * Adds CSS class 'busy' to the HTML root element, works only if running inside a browser.\r\n\t */\r\n\t_showProgress: function ()\r\n\t{\r\n\t\tif ('document' in global) {\r\n\t\t\tthis._requestLevel++;\r\n\t\t\tif (this._requestLevel > 0) global.document.documentElement.classList.add('busy');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Removes the 'busy' CSS class from the HTML element.\r\n\t */\r\n\t_hideProgress: function ()\r\n\t{\r\n\t\tif ('document' in global)\r\n\t\t{\r\n\t\t\tthis._requestLevel--;\r\n\t\t\tif (this._requestLevel) return;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (this._requestLevel === 0)\r\n\t\t\t\t\tglobal.document.documentElement.classList.remove('busy');\r\n\t\t\t}, 250);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Sets an HTTP header.\r\n\t */\r\n\theader: function (name, value)\r\n\t{\r\n\t\tif (value === null)\r\n\t\t\tdelete this.headers[name];\r\n\t\telse\r\n\t\t\tthis.headers[name] = value;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a parameter string for a GET request given an object with fields.\r\n\t */\r\n\tencodeParams: function (obj)\r\n\t{\r\n\t\tlet s = [];\r\n\r\n\t\tif (obj instanceof FormData)\r\n\t\t{\r\n\t\t\tfor (let i of obj.entries())\r\n\t\t\t\ts.push(encodeURIComponent(i[0]) + '=' + encodeURIComponent(i[1]));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (let i in obj)\r\n\t\t\t\ts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\r\n\t\t}\r\n\r\n\t\treturn s.join('&');\r\n\t},\r\n\r\n\t/**\r\n\t * Returns a URL given a relative or absolute URL.\r\n\t */\r\n\tgetUrl: function (url)\r\n\t{\r\n\t\tif (url.indexOf('//') !== -1)\r\n\t\t\treturn url;\r\n\r\n\t\treturn this.apiUrl + url;\r\n\t},\r\n\r\n\t/**\r\n\t * Appends a parameter to the URL.\r\n\t */\r\n\tappendParam: function (url, param)\r\n\t{\r\n\t\treturn url + (url.indexOf('?') == -1 ? '?' : '&') + param;\r\n\t},\r\n\r\n\t/**\r\n\t * Executes an API call to the URL stored in the `apiUrl` property. By default `httpMethod` is \"auto\", which will determine the best depending on the data to\r\n\t * be sent. Any connection error will be reported to the `failure` callback, and similarly any success to the `success` callback. The `params` object can be\r\n\t * a FormData object or just a regular object.\r\n\t */\r\n\tapiCall: function (params, success, failure, httpMethod=null, retries=null, relativeUrl='')\r\n\t{\r\n\t\tlet url = this.getUrl(relativeUrl);\r\n\r\n\t\tif (this.flags & Api.UNIQUE_STAMP)\r\n\t\t\turl = this.appendParam(url, '_='+Date.now());\r\n\r\n\t\thttpMethod = httpMethod ? httpMethod.toUpperCase() : null;\r\n\t\tif (httpMethod != 'GET' && httpMethod != 'POST')\r\n\t\t\thttpMethod = 'auto';\r\n\r\n\t\tif (retries === null)\r\n\t\t\tretries = this.retries;\r\n\r\n\t\tif (this._requestPackage && (this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n\t\t{\r\n\t\t\tif (!(params instanceof FormData))\r\n\t\t\t\tparams = {...params};\r\n\r\n\t\t\tthis._packageData.push([success, failure, params]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._showProgress();\r\n\r\n\t\tlet data = params;\r\n\r\n\t\tlet options =\r\n\t\t{\r\n\t\t\tmode: this.flags & Api.DISABLE_CORS ? 'no-cors' : 'cors',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'text/html,application/xhtml+xml,application/xml,application/json;q=0.9',\r\n\t\t\t\t...this.headers\r\n\t\t\t},\r\n\t\t\tmethod: httpMethod,\r\n\t\t\tbody: null,\r\n\t\t\tmultipart: false\r\n\t\t};\r\n\r\n\t\tif (this.flags & Api.INCLUDE_CREDENTIALS)\r\n\t\t\toptions.credentials = 'include';\r\n\r\n\t\tif (typeof(data) !== 'string' && !(data instanceof Blob))\r\n\t\t{\r\n\t\t\tif (!(data instanceof FormData))\r\n\t\t\t{\r\n\t\t\t\tdata = new FormData();\r\n\r\n\t\t\t\tfor (let i in params)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ((params[i] instanceof File) || (params[i] instanceof Blob))\r\n\t\t\t\t\t\tdata.append(i, params[i], params[i].name);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdata.append(i, params[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i of data.entries())\r\n\t\t\t{\r\n\t\t\t\tif ((i[1] instanceof File) || (i[1] instanceof Blob))\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.method = 'POST';\r\n\t\t\t\t\toptions.multipart = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.useReq64 && (this.flags & Api.REQ64_SUPPORTED) && !options.multipart)\r\n\t\t\t{\r\n\t\t\t\tlet tmp = new FormData();\r\n\t\t\t\ttmp.append('req64', base64.encode(this.encodeParams(data)));\r\n\t\t\t\tdata = tmp;\r\n\t\t\t}\r\n\r\n\t\t\tif (options.method == 'auto')\r\n\t\t\t{\r\n\t\t\t\tlet l = 0;\r\n\r\n\t\t\t\toptions.method = 'GET';\r\n\r\n\t\t\t\tfor (let i of data.entries())\r\n\t\t\t\t{\r\n\t\t\t\t\tl += i[0].length + i[1].length + 2;\r\n\r\n\t\t\t\t\tif (l > 960)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\toptions.method = 'POST';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\r\n\t\t\tif (options.method == 'GET')\r\n\t\t\t{\r\n\t\t\t\turl = this.appendParam(url, this.encodeParams(data));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (!options.multipart)\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\t\t\t\t\toptions.body = this.encodeParams(data);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toptions.body = data;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (typeof(data) === 'string')\r\n\t\t\t{\r\n\t\t\t\tif (data[0] === '<')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (data.endsWith('</soap:Envelope>'))\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/soap+xml';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/xml';\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (data[0] === '{' || data[0] === '[')\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/json';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toptions.headers['Content-Type'] = 'application/octet-stream';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\toptions.headers['Content-Type'] = data.type;\r\n\r\n\t\t\toptions.method = 'POST';\r\n\t\t\toptions.body = data;\r\n\t\t}\r\n\r\n\t\tglobal.fetch(url, options)\r\n\t\t.then(result => this.decodeResult(result))\r\n\t\t.then(result =>\r\n\t\t{\r\n\t\t\tthis._hideProgress();\r\n\t\t\tif (!success) return\r\n\r\n\t\t\tif (this.responseFilter(result, params)) {\r\n\t\t\t\ttry { success(result, params); } catch(e) { }\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err =>\r\n\t\t{\r\n\t\t\tthis._hideProgress();\r\n\r\n\t\t\tif (retries == 0) {\r\n\t\t\t\tif (failure) failure(err, params);\r\n\t\t\t} else {\r\n\t\t\t\tthis.apiCall (data, success, failure, httpMethod, retries-1, relativeUrl);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Decodes a result obtained using fetch into a usable object.\r\n\t */\r\n\tdecodeResult: function (result)\r\n\t{\r\n\t\tlet type = result.headers.get('content-type').split(';')[0].toLowerCase();\r\n\r\n\t\tif ((this.flags & Api.JSON_RESPONSE_SUPPORTED) && type.indexOf('json') !== -1)\r\n\t\t\treturn result.json();\r\n\r\n\t\tif ((this.flags & Api.XML_RESPONSE_SUPPORTED) && type.indexOf('xml') !== -1)\r\n\t\t{\r\n\t\t\treturn new Promise((resolve, reject) =>\r\n\t\t\t{\r\n\t\t\t\tresult.text().then(data =>\r\n\t\t\t\t{\r\n\t\t\t\t\tdata = (new DOMParser).parseFromString(data, 'text/xml');\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(reject);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn result.blob();\r\n\t},\r\n\r\n\t/**\r\n\t * Makes a blob with the specified data and type.\r\n\t */\r\n\tgetBlob: function (data, type)\r\n\t{\r\n\t\treturn new Blob ([data], { type: type });\r\n\t},\r\n\r\n\t/**\r\n\t * Provided access to the base64 module to encode/decode data.\r\n\t */\r\n\tbase64:\r\n\t{\r\n\t\tencode: function (value)\r\n\t\t{\r\n\t\t\treturn base64.encode(value);\r\n\t\t},\r\n\r\n\t\tdecode: function (value)\r\n\t\t{\r\n\t\t\treturn base64.decode(value);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Executes an API request, returns a promise.\r\n\t */\r\n\trequest: function (method, url, params=null)\r\n\t{\r\n\t\tif (params === null)\r\n\t\t{\r\n\t\t\tif (typeof(url) !== 'string')\r\n\t\t\t{\r\n\t\t\t\tparams = url;\r\n\t\t\t\turl = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.apiCall(params, resolve, reject, null, method, url);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Executes a POST API call.\r\n\t */\r\n\tpost: function (params, success=null, failure=null)\r\n\t{\r\n\t\treturn this.apiCall(params, success, failure, 'POST');\r\n\t},\r\n\r\n\t/**\r\n\t * Executes a GET API call.\r\n\t */\r\n\tget: function (params, success=null, failure=null)\r\n\t{\r\n\t\treturn this.apiCall(params, success, failure, 'GET');\r\n\t},\r\n\r\n\t/**\r\n\t * Executes an automatic API call, returns a promise.\r\n\t */\r\n\tfetch: function (url, params=null)\r\n\t{\r\n\t\tif (params === null) {\r\n\t\t\tif (typeof(url) !== 'string') {\r\n\t\t\t\tparams = url;\r\n\t\t\t\turl = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.apiCall(params, resolve, reject, null, null, url);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * Builds a URL from the given data.\r\n\t */\r\n\tmakeUrl: function (url, params=null)\r\n\t{\r\n\t\tif (params === null)\r\n\t\t{\r\n\t\t\tif (typeof(url) !== 'string')\r\n\t\t\t{\r\n\t\t\t\tparams = url;\r\n\t\t\t\turl = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.appendParam(this.getUrl(url), this.encodeParams(params));\r\n\t}\r\n};\r\n\r\nexport default Api;\r\n","\r\nimport { Model, ModelList, EventDispatcher } from 'rinn';\r\nimport Api from './api.js';\r\n\r\n/*\r\n**\tProvides several methods to quickly interface with a remote data-source as defined by Wind.\r\n*/\r\n\r\nexport default EventDispatcher.extend\r\n({\r\n\tclassName: 'DataSource',\r\n\tdebounceDelay: 250,\r\n\r\n\trequest: null,\r\n\r\n\tincludeCount: false,\r\n\tincludeEnum: false,\r\n\tincludeList: true,\r\n\r\n\teid: null,\r\n\tcount: 0,\r\n\tlist: null,\r\n\tenum: null,\r\n\r\n\t/*\r\n\t**\tConstructs the data source with the specified optional `config` parameters, any of the properties of this object can be specified\r\n\t**\tin the config. Uses the given basePath as prefix for the `f` parameter for subsequent API operations, a basePath of `candies` will\r\n\t**\tresult in calls to `candies.list`, `candies.count`, etc.\r\n\t*/\r\n\t__ctor: function (basePath, config)\r\n\t{\r\n\t\tthis._super.EventDispatcher.__ctor();\r\n\r\n\t\tthis.basePath = basePath;\r\n\r\n\t\tif (config) Object.assign(this, config);\r\n\r\n\t\tthis.request = new Model(this.request);\r\n\r\n\t\tthis.eid = Math.random().toString().substr(2);\r\n\t\tthis.count = 0;\r\n\r\n\t\tthis.list = new ModelList();\r\n\t\tthis.list.dataSource = this;\r\n\r\n\t\tthis.enum = new ModelList();\r\n\t\tthis.enum.dataSource = this;\r\n\r\n\t\tthis.request.addEventListener (this.eid+':propertyChanged', this.forwardRequestEvent, this);\r\n\r\n\t\tthis.list.addEventListener (this.eid+':itemsCleared', this.forwardListEvent, this);\r\n\t\tthis.list.addEventListener (this.eid+':itemsChanged', this.forwardListEvent, this);\r\n\t\tthis.list.addEventListener (this.eid+':itemRemoved', this.forwardListEvent, this);\r\n\t\tthis.list.addEventListener (this.eid+':itemChanged', this.forwardListEvent, this);\r\n\t\tthis.list.addEventListener (this.eid+':itemAdded', this.forwardListEvent, this);\r\n\r\n\t\tthis.enum.addEventListener (this.eid+':itemsCleared', this.forwardEnumEvent, this);\r\n\t\tthis.enum.addEventListener (this.eid+':itemsChanged', this.forwardEnumEvent, this);\r\n\t\tthis.enum.addEventListener (this.eid+':itemRemoved', this.forwardEnumEvent, this);\r\n\t\tthis.enum.addEventListener (this.eid+':itemChanged', this.forwardEnumEvent, this);\r\n\t\tthis.enum.addEventListener (this.eid+':itemAdded', this.forwardEnumEvent, this);\r\n\t},\r\n\r\n\tforwardRequestEvent: function (evt, args)\r\n\t{\r\n\t\tthis.prepareEvent('request' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n\t},\r\n\r\n\tforwardListEvent: function (evt, args)\r\n\t{\r\n\t\tthis.prepareEvent('list' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n\t},\r\n\r\n\tforwardEnumEvent: function (evt, args)\r\n\t{\r\n\t\tthis.prepareEvent('enum' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes one or more API functions (depending on `includeCount`, `includeEnum` and `includeList` properties) to retrieve the\r\n\t**\trequired data (uses debounce to prevent too-quick refreshes).\r\n\t**\r\n\t**\tRefresh mode can be: order, filter, range, enum or full. Setting `mode` to `true` will cause a full refresh without debouncing.\r\n\t*/\r\n\trefresh: function (mode='full', callback=null)\r\n\t{\r\n\t\tif (typeof(mode) == 'function') {\r\n\t\t\tcallback = mode;\r\n\t\t\tmode = 'full';\r\n\t\t}\r\n\r\n\t\tif (this._timeout) {\r\n\t\t\tclearTimeout(this._timeout);\r\n\t\t\tthis._timeout = null;\r\n\t\t}\r\n\r\n\t\tconst fn = () =>\r\n\t\t{\r\n\t\t\tthis._timeout = null;\r\n\r\n\t\t\tApi.packageBegin();\r\n\r\n\t\t\tif (this.includeCount && (mode === 'full' || mode === 'filter')) this.fetchCount();\r\n\t\t\tif (this.includeEnum && (mode === 'full' || mode === 'enum')) this.fetchEnum();\r\n\t\t\tif (this.includeList && mode !== 'enum') this.fetchList();\r\n\r\n\t\t\tApi.packageEnd(callback);\r\n\t\t};\r\n\r\n\t\tif (mode === true) {\r\n\t\t\tmode = 'full';\r\n\t\t\tfn();\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis._timeout = setTimeout(fn, this.debounceDelay);\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for the item in `list` that matches the specified `fields` and sends it to the callback. If no item is found (or if `forced` is true),\r\n\t**\ta call to API function `.get` will be executed with the fields as request parameters. Returns a promise.\r\n\t*/\r\n\tfetch: function (fields, forced=false)\r\n\t{\r\n\t\treturn new Promise((resolve, reject) =>\r\n\t\t{\r\n\t\t\tlet item = forced == true ? null : this.list.find(fields, true);\r\n\t\t\tif (!item)\r\n\t\t\t{\r\n\t\t\t\tthis.fetchOne(fields, (r) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif (r && r.response == 200)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (r.data.length > 0)\r\n\t\t\t\t\t\t\tresolve(r.data[0]);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\treject(r);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treject(r);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tresolve(item.get());\r\n\t\t});\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the remote data source by executing the `.delete` API function, passes the given `fields` as request\r\n\t**\tparameters. Returns a promise.\r\n\t*/\r\n\tdelete: function (params)\r\n\t{\r\n\t\treturn new Promise((resolve, reject) =>\r\n\t\t{\r\n\t\t\tthis.fetchDelete(params, (r) =>\r\n\t\t\t{\r\n\t\t\t\tif (r.response == 200)\r\n\t\t\t\t\tresolve(r);\r\n\t\t\t\telse\r\n\t\t\t\t\treject(r.error);\r\n\t\t\t});\r\n\t\t});\r\n\t},\r\n\r\n\tfetchList: function ()\r\n\t{\r\n\t\tlet data = {...this.request.get()};\r\n\r\n\t\tdata.f = this.basePath + '.list';\r\n\r\n\t\tthis.dispatchEvent('listLoading');\r\n\r\n\t\tApi.fetch(data).then(r => {\r\n\t\t\tthis.list.setData(r.response == 200 ? r.data : null);\r\n\t\t\tthis.dispatchEvent('listLoaded');\r\n\t\t\tthis.dispatchEvent('listChanged');\r\n\t\t});\r\n\t},\r\n\r\n\tfetchEnum: function ()\r\n\t{\r\n\t\tlet data = {...this.request.get()};\r\n\r\n\t\tdata.f = this.basePath + '.enum';\r\n\r\n\t\tthis.dispatchEvent('enumLoading');\r\n\r\n\t\tApi.fetch(data).then(r => {\r\n\t\t\tthis.enum.setData(r.response == 200 ? r.data : null);\r\n\t\t\tthis.dispatchEvent('enumLoaded');\r\n\t\t\tthis.dispatchEvent('enumChanged');\r\n\t\t});\r\n\t},\r\n\r\n\tfetchCount: function ()\r\n\t{\r\n\t\tlet data = {...this.request.get()};\r\n\r\n\t\tdata.f = this.basePath + '.count';\r\n\r\n\t\tthis.dispatchEvent('countLoading');\r\n\r\n\t\tApi.fetch(data).then(r => {\r\n\t\t\tthis.count = r.response == 200 ? r.count : 0;\r\n\t\t\tthis.dispatchEvent('countLoaded');\r\n\t\t\tthis.dispatchEvent('countChanged');\r\n\t\t});\r\n\t},\r\n\r\n\tfetchOne: function (params, callback)\r\n\t{\r\n\t\tlet data = {...this.request.get(), ...params};\r\n\r\n\t\tdata.f = this.basePath + '.get';\r\n\r\n\t\tApi.fetch(data).then(r => {\r\n\t\t\tcallback(r);\r\n\t\t});\r\n\t},\r\n\r\n\tfetchDelete: function (params, callback)\r\n\t{\r\n\t\tlet data = {...this.request.get(), ...params};\r\n\r\n\t\tdata.f = this.basePath + '.delete';\r\n\r\n\t\tApi.fetch(data).then(r => {\r\n\t\t\tcallback(r);\r\n\t\t});\r\n\t},\r\n\r\n\tfetchData: function (params)\r\n\t{\r\n\t\tlet data = {...this.request.get(), ...params};\r\n\r\n\t\tif (data.f[0] == '.')\r\n\t\t\tdata.f = this.basePath + data.f;\r\n\r\n\t\treturn Api.fetch(data);\r\n\t},\r\n\r\n\tmakeUrl: function (params)\r\n\t{\r\n\t\tlet data = {...this.request.get(), ...params};\r\n\r\n\t\tif (data.f[0] == '.')\r\n\t\t\tdata.f = this.basePath + data.f;\r\n\r\n\t\treturn Api.makeUrl(data);\r\n\t}\r\n});\r\n","\r\nimport { Model, ModelList } from 'rinn';\r\nimport Api from './api.js';\r\n\r\n/*\r\n**\tProvides an interface to connect with a listing API function.\r\n*/\r\n\r\nexport default ModelList.extend\r\n({\r\n\tclassName: 'DataList',\r\n\tdebounceDelay: 250,\r\n\r\n\trequest: null,\r\n\r\n\teid: null,\r\n\r\n\t/*\r\n\t**\tConstructs the data list with the specified optional `config` parameters, any of the properties of this object can be specified\r\n\t**\tin the config. The given `f` parameter is passed directly as a request parameter to the API.\r\n\t*/\r\n\t__ctor: function (f, config=null)\r\n\t{\r\n\t\tthis._super.ModelList.__ctor();\r\n\r\n\t\tif (config !==  null)\r\n\t\t\tObject.assign(this, config);\r\n\r\n\t\tif (!this.request)\r\n\t\t\tthis.request = { };\r\n\r\n\t\tthis.request.f = f;\r\n\t\tthis.request = new Model(this.request);\r\n\r\n\t\tthis.eid = Math.random().toString().substr(2);\r\n\t\tthis.dataList = this;\r\n\r\n\t\tthis.request.addEventListener (this.eid+':propertyChanged', this.forwardRequestEvent, this);\r\n\t},\r\n\r\n\tforwardRequestEvent: function (evt, args)\r\n\t{\r\n\t\tthis.prepareEvent('request' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a request to retrieve the data for the list (uses debounce to prevent too-quick refreshes).\r\n\t*/\r\n\trefresh: function (callback=null, _callback=null)\r\n\t{\r\n\t\tif (this._timeout)\r\n\t\t{\r\n\t\t\tclearTimeout(this._timeout);\r\n\t\t\tthis._timeout = null;\r\n\t\t}\r\n\r\n\t\tif (callback === true)\r\n\t\t{\r\n\t\t\tthis.dispatchEvent('listLoading');\r\n\r\n\t\t\tApi.fetch(this.request.get()).then(r =>\r\n\t\t\t{\r\n\t\t\t\tthis.setData(r.response == 200 ? r.data : null);\r\n\t\t\t\tthis.dispatchEvent('listLoaded');\r\n\t\t\t\tthis.dispatchEvent('listChanged');\r\n\r\n\t\t\t\tif (_callback !== null)\r\n\t\t\t\t\t_callback();\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst fn = () => {\r\n\t\t\tthis.refresh(true, callback);\r\n\t\t};\r\n\r\n\t\tthis._timeout = setTimeout(fn, this.debounceDelay);\r\n\t}\r\n});\r\n","\n/**\n**\tCollection of useful easing functions (imported from Cherry source code).\n*/\n\nconst Easing =\n{\n\t/**\n\t**\tInterpolates numeric values between two objects (`src` and `dst`) using the specified `duration` (in seconds) and `easing` function. Note\n\t**\tthat all four parameters `src`, `dst`, `duration` and `easing` must be objects having the same number of values.\n\t*/\n\tinterpolate: function (src, dst, duration, easing, callback/* function(data, isFinished) */)\n\t{\n\t\tlet time = { };\n\t\tlet data = { };\n\t\tlet count = 0;\n\n\t\tfor (let x in src)\n\t\t{\n\t\t\ttime[x] = 0.0;\n\t\t\tdata[x] = src[x]\n\t\t\tcount++;\n\t\t}\n\n\t\tlet lastTime = Date.now()/1000;\n\t\tlet dt = 0;\n\n\t\tlet interpolator = function()\n\t\t{\n\t\t\tlet curTime = Date.now()/1000;\n\t\t\tdt = curTime - lastTime;\n\t\t\tlastTime = curTime;\n\n\t\t\tfor (let x in time)\n\t\t\t{\n\t\t\t\tif (time[x] == duration[x])\n\t\t\t\t\tcontinue;\n\n\t\t\t\ttime[x] += dt;\n\t\t\t\tif (time[x] >= duration[x])\n\t\t\t\t{\n\t\t\t\t\ttime[x] = duration[x];\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\n\t\t\t\tlet t = easing[x] (time[x] / duration[x]);\n\t\t\t\tdata[x] = (1-t)*src[x] + t*dst[x];\n\t\t\t}\n\n\t\t\tcallback (data, count == 0);\n\n\t\t\tif (count != 0)\n\t\t\t\trequestAnimationFrame(interpolator);\n\t\t};\n\n\t\tinterpolator();\n\t},\n\n\t/* ******************************************** */\n\tLinear:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn t;\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\treturn t;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tBack:\n\t{\n\t\tk: 1.70158,\n\n\t\tIN: function (t, k)\n\t\t{\n\t\t\tif (k === undefined) k = Easing.Back.k;\n\t\t\treturn t*t*((k+1)*t - k);\n\t\t},\n\n\t\tOUT: function (t, k)\n\t\t{\n\t\t\treturn 1 - Easing.Back.IN(1 - t, k);\n\t\t},\n\n\t\tIN_OUT: function (t, k)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Back.IN(t*2, k)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Back.OUT((t-0.5)*2, k)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tBounce:\n\t{\n\t\tgetConst: function (t)\n\t\t{\n\t\t\tif (t < 1.0/2.75)\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\telse if (t < 2.0/2.75)\n\t\t\t\treturn 7.5625 * (t -= 1.5/2.75)*t + 0.75;\n\t\t\telse if (t < 2.5/2.75)\n\t\t\t\treturn 7.5625 * (t -= 2.250/2.75) * t + 0.9375;\n\n\t\t\treturn 7.5625 * (t -= 2.625/2.75) * t + 0.984375;\n\t\t},\n\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Bounce.getConst(1-t);\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn Easing.Bounce.getConst(t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn (1 - Easing.Bounce.getConst(1-2*t))/2;\n\t\t\telse\n\t\t\t\treturn (Easing.Bounce.getConst((t-0.5)*2)/2)+0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tCirc:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn 1 - Math.sqrt(1 - t*t);\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Circ.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\t\treturn Easing.Circ.IN(t*2)/2;\n\t\t\t\telse\n\t\t\t\t\treturn Easing.Circ.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tCubic:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Cubic.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Cubic.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Cubic.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tExpo:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn Math.pow(2, 12*(t-1));\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn -Math.pow(2, -12*t) + 1;\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif ((t *= 2) < 1)\n\t\t\t\treturn Math.pow (2, 12 * (t - 1)) / 2;\n\t\t\telse\n\t\t\t\treturn (-Math.pow (2, -12 * (t - 1)) + 2) / 2;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tPower:\n\t{\n\t\tp: 12,\n\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn Math.pow(t, Easing.Power.p);\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Power.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Power.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Power.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tQuad:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Quad.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Quad.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Quad.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tQuartic:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t*t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Quartic.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Quartic.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Quartic.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tQuintic:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t*t*t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Quintic.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\t\treturn Easing.Quintic.IN(t*2)/2;\n\t\t\t\telse\n\t\t\t\t\treturn Easing.Quintic.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tSine:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn 1 - Math.sin (1.5708 * (1 - t));\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn Math.sin (1.5708 * t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\treturn (Math.cos (3.1416*t) - 1) / -2;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tStep:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t != 1.0 ? 0 : 1.0;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn t != 1.0 ? 0 : 1.0;\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\treturn t != 1.0 ? 0 : 1.0;\n\t\t}\n\t}\n};\n\nexport default Easing;\n","\nimport { Rinn, Class } from 'rinn';\n\n/**\n**\tClass to animate properties using rules (imported from Cherry source code).\n*/\n\nconst Anim = Class.extend\n({\n\tlist: null,\n\n\tinitialData: null,\n\tdata: null,\n\n\tstack: null,\n\tblock: null,\n\n\ttimeScale: 1, time: 0, blockTime: 0,\n\tindex: 0,\n\n\tpaused: false,\n\tfinished: false,\n\n\tonFinishedCallback: null,\n\tonUpdatedCallback: null,\n\n\t__ctor: function ()\n\t{\n\t\tthis.list = [ ];\n\n\t\tthis.initialData = { };\n\t\tthis.data = { };\n\n\t\tthis.stack = [ ];\n\t\tthis.block = this.list;\n\n\t\tthis.reset();\n\t},\n\n\t__dtor: function ()\n\t{\n\t},\n\n\tclone: function ()\n\t{\n\t\tlet a = new Anim();\n\n\t\ta.list = this.list;\n\t\ta.initialData = this.initialData;\n\n\t\treturn a.reset();\n\t},\n\n\tonFinished: function (callback)\n\t{\n\t\tthis.onFinishedCallback = callback;\n\t\treturn this;\n\t},\n\n\tonUpdated: function (callback)\n\t{\n\t\tthis.onUpdatedCallback = callback;\n\t\treturn this;\n\t},\n\n\t// Resets the animation to its initial state.\n\treset: function ()\n\t{\n\t\tthis.stack.length = 0;\n\t\tthis.blockTime = 0;\n\n\t\tthis.time = 0;\n\t\tthis.index = 0;\n\n\t\tthis.block = this.list;\n\n\t\tthis.paused = true;\n\t\tthis.finished = false;\n\t\tthis.handle = null;\n\n\t\tfor (let i in this.initialData)\n\t\t\tthis.data[i] = this.initialData[i];\n\n\t\treturn this;\n\t},\n\n\t// Sets the initial data.\n\tinitial: function (data)\n\t{\n\t\tthis.initialData = data;\n\t\treturn this.reset();\n\t},\n\n\t// Sets the time scale (animation speed).\n\tspeed: function (value)\n\t{\n\t\tthis.timeScale = value > 0.0 ? value : 1.0;\n\t\treturn this;\n\t},\n\n\t// Sets the output data object.\n\tsetOutput: function (data)\n\t{\n\t\tthis.data = data;\n\t\treturn this;\n\t},\n\n\t// Pauses the animation.\n\tpause: function ()\n\t{\n\t\tif (this.paused) return;\n\n\t\tclearInterval(this.handle);\n\t\tthis.paused = true;\n\t},\n\n\t// Resumes the animation.\n\tresume: function ()\n\t{\n\t\tif (!this.paused) return;\n\n\t\tlet lastTime = Date.now()/1000;\n\n\t\tthis.handle = setInterval(() =>\n\t\t{\n\t\t\tlet curTime = Date.now()/1000;\n\t\t\tlet dt = curTime - lastTime;\n\t\t\tlastTime = curTime;\n\n\t\t\tthis.update(dt);\n\n\t\t\tif (this.onUpdatedCallback)\n\t\t\t\tthis.onUpdatedCallback (this.data, this);\n\t\t},\n\t\t16);\n\n\t\tif (this.onUpdatedCallback)\n\t\t\tthis.onUpdatedCallback (this.data, this);\n\n\t\tthis.paused = false;\n\t},\n\n\t// Updates the animation by the specified delta time (seconds).\n\tupdate: function (dt)\n\t{\n\t\tif (this.paused) return false;\n\n\t\tif (this.index >= this.block.length)\n\t\t\treturn true;\n\n\t\tlet i = 0;\n\n\t\tlet _block;\n\t\tlet _index;\n\t\tlet _blockTime;\n\n\t\tthis.time += dt*this.timeScale;\n\n\t\twhile (this.index < this.block.length)\n\t\t{\n\t\t\tlet cmd = this.block[this.index];\n\t\t\tlet duration;\n\n\t\t\tswitch (cmd.op)\n\t\t\t{\n\t\t\t\tcase \"parallel\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd.blocks.length = 0;\n\t\t\t\t\t\tcmd.started = true;\n\n\t\t\t\t\t\tfor (i = 0; i < cmd.block.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcmd.blocks.push([cmd.block[i]]);\n\t\t\t\t\t\t\tcmd.indices[i] = 0;\n\t\t\t\t\t\t\tcmd.blockTimes[i] = this.blockTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t_block = this.block;\n\t\t\t\t\t_index = this.index;\n\t\t\t\t\t_blockTime = this.blockTime;\n\n\t\t\t\t\tlet n = 0;\n\t\t\t\t\tlet blockTime = _blockTime;\n\n\t\t\t\t\tfor (i = 0; i < cmd.blocks.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.block = cmd.blocks[i];\n\t\t\t\t\t\tthis.index = cmd.indices[i];\n\t\t\t\t\t\tthis.blockTime = cmd.blockTimes[i];\n\n\t\t\t\t\t\tif (this.update(0) === true)\n\t\t\t\t\t\t\tn++;\n\n\t\t\t\t\t\tif (this.blockTime > blockTime)\n\t\t\t\t\t\t\tblockTime = this.blockTime;\n\n\t\t\t\t\t\tcmd.blockTimes[i] = this.blockTime;\n\t\t\t\t\t\tcmd.blocks[i] = this.block;\n\t\t\t\t\t\tcmd.indices[i] = this.index;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.block = _block;\n\t\t\t\t\tthis.index = _index;\n\t\t\t\t\tthis.blockTime = _blockTime;\n\n\t\t\t\t\tif (cmd.fn) cmd.fn.call(this);\n\n\t\t\t\t\tif (n != cmd.blocks.length)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime = blockTime;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"serial\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd._block = cmd.block;\n\t\t\t\t\t\tcmd._index = 0;\n\t\t\t\t\t\tcmd._blockTime = this.blockTime;\n\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t_block = this.block;\n\t\t\t\t\t_index = this.index;\n\t\t\t\t\t_blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = cmd._block;\n\t\t\t\t\tthis.index = cmd._index;\n\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\n\t\t\t\t\ti = this.update(0);\n\n\t\t\t\t\tcmd._block = this.block;\n\t\t\t\t\tcmd._index = this.index;\n\t\t\t\t\tcmd._blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = _block;\n\t\t\t\t\tthis.index = _index;\n\t\t\t\t\tthis.blockTime = _blockTime;\n\n\t\t\t\t\tif (cmd.fn) cmd.fn.call(this);\n\n\t\t\t\t\tif (i !== true) return false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"repeat\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd._block = cmd.block;\n\t\t\t\t\t\tcmd._index = 0;\n\t\t\t\t\t\tcmd._blockTime = this.blockTime;\n\t\t\t\t\t\tcmd._count = cmd.count;\n\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t_block = this.block;\n\t\t\t\t\t_index = this.index;\n\t\t\t\t\t_blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = cmd._block;\n\t\t\t\t\tthis.index = cmd._index;\n\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\n\t\t\t\t\ti = this.update(0);\n\n\t\t\t\t\tcmd._block = this.block;\n\t\t\t\t\tcmd._index = this.index;\n\t\t\t\t\tcmd._blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = _block;\n\t\t\t\t\tthis.index = _index;\n\t\t\t\t\tthis.blockTime = _blockTime;\n\n\t\t\t\t\tif (cmd.fn) cmd.fn.call(this);\n\n\t\t\t\t\tif (i !== true) return false;\n\n\t\t\t\t\tif (cmd._count <= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\t\t\t\t\t\tthis.index++;\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd._index = 0;\n\t\t\t\t\t\tcmd._count--;\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"set\":\n\t\t\t\t\tthis.data[cmd.field] = cmd.value;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"restart\":\n\t\t\t\t\tthis.index = 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wait\":\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"range\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (cmd.startValue === null)\n\t\t\t\t\t\t\tcmd._startValue = this.data[cmd.field];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcmd._startValue = cmd.startValue;\n\n\t\t\t\t\t\tcmd._endValue = cmd.endValue;\n\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\tdt = (this.time - this.blockTime) / duration;\n\t\t\t\t\telse\n\t\t\t\t\t\tdt = 1;\n\n\t\t\t\t\tif (cmd.easing && dt != 1.0)\n\t\t\t\t\t\tthis.data[cmd.field] = cmd.easing(dt)*(cmd._endValue - cmd._startValue) + cmd._startValue;\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.data[cmd.field] = dt*(cmd._endValue - cmd._startValue) + cmd._startValue;\n\n\t\t\t\t\tif (dt != 1) return false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rand\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t\tcmd.last = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\tdt = (this.time - this.blockTime) / duration;\n\t\t\t\t\telse\n\t\t\t\t\t\tdt = 1;\n\n\t\t\t\t\tif (cmd.easing && dt != 1)\n\t\t\t\t\t\tcmd.cur = ~~(cmd.easing(dt)*cmd.count);\n\t\t\t\t\telse\n\t\t\t\t\t\tcmd.cur = ~~(dt*cmd.count);\n\n\t\t\t\t\tif (cmd.cur != cmd.last)\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\ti = ~~(Math.random()*(cmd.endValue - cmd.startValue + 1)) + cmd.startValue;\n\t\t\t\t\t\t\tif (i != this.data[cmd.field]) break;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.data[cmd.field] = i;\n\t\t\t\t\t\tcmd.last = cmd.cur;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dt != 1) return false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"randt\":\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\tdt = (this.time - this.blockTime) / duration;\n\t\t\t\t\telse\n\t\t\t\t\t\tdt = 1;\n\n\t\t\t\t\tif (cmd.easing && dt != 1)\n\t\t\t\t\t\ti = cmd.easing(dt)*(cmd.count-1);\n\t\t\t\t\telse\n\t\t\t\t\t\ti = dt*(cmd.count-1);\n\n\t\t\t\t\tthis.data[cmd.field] = cmd.table[~~((i + cmd.count) % cmd.count)];\n\n\t\t\t\t\tif (dt != 1) return false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"play\":\n\t\t\t\t\tcmd.snd.play();\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"exec\":\n\t\t\t\t\tcmd.fn.call(this, this);\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this.block == this.list)\n\t\t{\n\t\t\tif (!this.finished && this.onFinishedCallback != null)\n\t\t\t\tthis.onFinishedCallback();\n\n\t\t\tthis.pause();\n\t\t\tthis.finished = true;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// Runs the subsequent commands in parallel. Should end the parallel block by calling end().\n\tparallel: function ()\n\t{\n\t\tlet block = [ ];\n\n\t\tthis.block.push({ op: \"parallel\", started: false, block: block, blocks: [ ], indices: [ ], blockTimes: [ ] });\n\n\t\tthis.stack.push (this.block);\n\t\tthis.block = block;\n\n\t\treturn this;\n\t},\n\n\t// Runs the subsequent commands in series. Should end the serial block by calling end().\n\tserial: function ()\n\t{\n\t\tlet block = [ ];\n\n\t\tthis.block.push({ op: \"serial\", started: false, block: block });\n\n\t\tthis.stack.push (this.block);\n\t\tthis.block = block;\n\n\t\treturn this;\n\t},\n\n\t// Repeats a block the specified number of times.\n\trepeat: function (count)\n\t{\n\t\tlet block = [ ];\n\n\t\tthis.block.push({ op: \"repeat\", started: false, block: block, count: count });\n\n\t\tthis.stack.push (this.block);\n\t\tthis.block = block;\n\n\t\treturn this;\n\t},\n\n\t// Sets the callback of the current block.\n\tcallback: function (fn)\n\t{\n\t\tlet block = this.stack[this.stack.length-1];\n\t\tblock[block.length-1].fn = fn;\n\n\t\treturn this;\n\t},\n\n\t// Ends a parallel(), serial() or repeat() block.\n\tend: function ()\n\t{\n\t\tthis.block = this.stack.pop();\n\t\treturn this;\n\t},\n\n\t// Sets the value of a variable.\n\tset: function (field, value)\n\t{\n\t\tthis.block.push({ op: \"set\", field: field, value: value });\n\t\treturn this;\n\t},\n\n\t// Restarts the current block.\n\trestart: function (duration)\n\t{\n\t\tthis.block.push({ op: \"restart\" });\n\t\treturn this;\n\t},\n\n\t// Waits for the specified duration.\n\twait: function (duration)\n\t{\n\t\tthis.block.push({ op: \"wait\", duration: duration });\n\t\treturn this;\n\t},\n\n\t// Sets the range of a variable.\n\trange: function (field, duration, startValue, endValue, easing)\n\t{\n\t\tthis.block.push({ op: \"range\", started: false, field: field, duration: duration, startValue: startValue, endValue: endValue, easing: easing ? easing : null });\n\t\treturn this;\n\t},\n\n\t// Generates a certain amount of random numbers in the given range (inclusive).\n\trand: function (field, duration, count, startValue, endValue, easing)\n\t{\n\t\tthis.block.push({ op: \"rand\", started: false, field: field, duration: duration, count: count, startValue: startValue, endValue: endValue, easing: easing ? easing : null });\n\t\treturn this;\n\t},\n\n\t// Generates a certain amount of random numbers in the given range (inclusive). This uses a static random table to determine the next values.\n\trandt: function (field, duration, count, startValue, endValue, easing)\n\t{\n\t\tlet table = [ ];\n\n\t\tfor (let i = 0; i < count; i++)\n\t\t\ttable.push ((i % (endValue - startValue + 1)) + startValue);\n\n\t\tfor (let i = count >> 2; i > 0; i--)\n\t\t{\n\t\t\tlet a = ~~(Math.random() * count);\n\t\t\tlet b = ~~(Math.random() * count);\n\n\t\t\tlet c = table[b];\n\t\t\ttable[b] = table[a];\n\t\t\ttable[a] = c;\n\t\t}\n\n\t\tthis.block.push({ op: \"randt\", field: field, duration: duration, count: count, startValue: startValue, endValue: endValue, table: table, easing: easing ? easing : null });\n\t\treturn this;\n\t},\n\n\t// Plays a sound.\n\tplay: function (snd)\n\t{\n\t\tthis.block.push({ op: \"play\", snd: snd });\n\t\treturn this;\n\t},\n\n\t// Executes a function.\n\texec: function (fn)\n\t{\n\t\tthis.block.push({ op: \"exec\", fn: fn });\n\t\treturn this;\n\t}\n});\n\nexport default Anim;\n","\nimport _Tabs from './elems/r-tabs.js';\nimport _Form from './elems/r-form.js';\nimport _Panel from './elems/r-panel.js';\nimport _List from './elems/r-list.js';\nimport _Item from './elems/r-item.js';\nimport _Paginator from './elems/r-paginator.js';\nimport _Table from './elems/r-table.js';\nimport _Select from './elems/r-select.js';\nimport _ImageCropper from './elems/r-image-cropper.js';\n\nexport default {\n\tTabs: _Tabs,\n\tForm: _Form,\n\tPanel: _Panel,\n\tList: _List,\n\tItem: _Item,\n\tPaginator: _Paginator,\n\tTable: _Table,\n\tSelect: _Select,\n\tImageCropper: _ImageCropper\n};\n","/*\n    <r-tabs data-container=\"div.tab-container\" data-base-route=\"@\" data-initial=\"tab1\">\n        <a data-name=\"tab1\">Tab-1</a>\n        <a data-name=\"tab2\">Tab-2</a>\n        <a data-name=\"tab3\">Tab-3</a>\n    </r-tabs>\n\n    <div class=\"tab-container\">\n        <div data-name=\"tab1\">\n            This is tab-1.\n        </div>\n\n        <div data-name=\"tab2\">\n            This is tab-2.\n        </div>\n\n        <div data-name=\"tab3\">\n            This is tab-3.\n        </div>\n    </div>\n\n    .is-hidden {\n        display: none;\n    }\n\n    r-tabs [data-name].is-active {\n        font-weight: bold;\n    }\n*/\n\nimport Element from '../element.js';\nimport Router from '../router.js';\n\nexport default Element.register ('r-tabs',\n{\n    /**\n     * Container element for tab content.\n     */\n    container: null,\n\n    /**\n     * Active tab name.\n     */\n    activeTab: null,\n\n    /**\n    **\tElement events.\n    */\n    'event click [data-name]': function (evt)\n    {\n        evt.continuePropagation = true;\n\n        if (this.dataset.baseRoute) {\n            location = \"#\" + Router.realLocation(this.dataset.baseRoute.replace('@', evt.source.dataset.name));\n            return;\n        }\n\n        this.selectTab (evt.source.dataset.name);\n    },\n\n    /**\n    **\tInitializes the Tabs element.\n    */\n    init: function()\n    {\n        this._routeHandler = (evt, args) =>\n        {\n            if (Router.location != '')\n            {\n                this.querySelectorAll(\"[href]\").forEach(link =>\n                {\n                    if (!link.href) return;\n\n                    if (Router.location.startsWith(link.href.substr(link.href.indexOf('#')+1))) {\n                        link.classList.add('is-active');\n                        link.classList.remove('is-inactive');\n                    } else {\n                        link.classList.add('is-inactive');\n                        link.classList.remove('is-active');\n                    }\n\n                    link.classList.remove('anim-ended');\n                    link.onanimationend = () => {\n                        link.onanimationend = null;\n                        link.classList.add('anim-ended');\n                    };\n                });\n            }\n\n            if (!args.route.changed)\n                return;\n\n            this.showTab (args.tabName);\n        };\n    },\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    ready: function()\n    {\n        if (\"container\" in this.dataset)\n        {\n            if (this.dataset.container == ':previousElement')\n                this.container = this.previousElementSibling;\n            else if (this.dataset.container == ':nextElement')\n                this.container = this.nextElementSibling;\n            else if (this.dataset.container == ':none')\n                this.container = null;\n            else\n                this.container = document.querySelector(this.dataset.container);\n        }\n        else\n            this.container = this.nextElementSibling;\n\n        this._hideTabsExcept(this.dataset.initial);\n    },\n\n    /**\n    **\tAdds a handler to Router if the data-base-route attribute was set.\n    */\n    onConnected: function()\n    {\n        if (this.dataset.baseRoute)\n            Router.addRoute (this.dataset.baseRoute.replace('@', ':tabName'), this._routeHandler);\n    },\n\n    /**\n    **\tRemoves a handler previously added to Router if the data-base-route attribute was set.\n    */\n    onDisconnected: function()\n    {\n        if (this.dataset.baseRoute)\n            Router.removeRoute(this.dataset.baseRoute.replace('@', ':tabName'), this._routeHandler);\n    },\n\n    /**\n    **\tHides all tabs except the one with the specified exceptName, if none specified then all tabs will be hidden (adds `.is-hidden` CSS class),\n    **\tadditionally the respective link item in the tab definition will have class `.is-active`.\n    */\n    _hideTabsExcept: function (exceptName)\n    {\n        if (!exceptName) exceptName = '';\n\n        if (this.container != null)\n        {\n            this.container.querySelectorAll(':scope > [data-name]').forEach(i =>\n            {\n                if (i.dataset.name === exceptName) {\n                    i.classList.remove('is-hidden');\n                    this.dispatch('tabShown', { name: i.dataset.name, el: i });\n                }\n                else {\n                    i.classList.add('is-hidden');\n                    this.dispatch('tabHidden', { name: i.dataset.name, el: i });\n                }\n            });\n        }\n\n        this.querySelectorAll(\"[data-name]\").forEach(link =>\n        {\n            if (link.dataset.name === exceptName) {\n                link.classList.add('is-active');\n                link.classList.remove('is-inactive');\n            } else {\n                link.classList.add('is-inactive');\n                link.classList.remove('is-active');\n            }\n\n            link.classList.remove('anim-ended');\n            link.onanimationend = () => {\n                link.onanimationend = null;\n                link.classList.add('anim-ended');\n            };\n        });\n\n        this.activeTab = exceptName;\n        this.dispatch('tabChanged', { name: exceptName, el: this });\n    },\n\n    /**\n    **\tShows the tab with the specified name, ignores `data-base-route` and current route as well.\n    */\n    showTab: function (name)\n    {\n        return this._hideTabsExcept (name);\n    },\n\n    /**\n    **\tShows a tab given its name. The route will be changed automatically if `data-base-route` is enabled.\n    */\n    selectTab: function (name)\n    {\n        if (this.dataset.baseRoute)\n        {\n            const hash = \"#\" + Router.realLocation(this.dataset.baseRoute.replace('@', name));\n\n            if (location.hash != hash) {\n                location = hash;\n                return;\n            }\n        }\n\n        this.showTab (name);\n    }\n});\n","/*\n<r-form data-form-action=\"api-function-name\" [data-strict=\"true|false\"] [data-errors-at=\"\"] [data-method=\"post\"]>\n    <input type=\"text\" data-field=\"username\"/>\n</r-form>\n\nr-form .message.is-hidden {\n    display: none;\n}\n\nr-form span.field-error {\n    display: block;\n    color: red;\n}\n*/\n\nimport { Template } from 'rinn';\nimport Element from '../element.js';\nimport Api from '../api.js';\n\nexport default Element.register ('r-form',\n{\n    /**\n    **\tElement events.\n    */\n    events:\n    {\n        'change [data-field]': '_fieldChanged',\n\n        'click input[type=reset]': 'reset',\n        'click .reset': 'reset',\n\n        'click input[type=submit]': 'submit',\n        'click button[type=submit]': 'submit',\n        'click .submit': 'submit',\n        'submit form': 'submit'\n    },\n\n    /*\n    **\tInitial form model.\n    */\n    model: { },\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    ready: function()\n    {\n        let formElement = document.createElement('form');\n        formElement.append(...this.childNodes);\n        this.append(formElement);\n\n        let def = { };\n        let names = this.model.get();\n\n        this.querySelectorAll('[data-field]').forEach((i) =>\n        {\n            i.name = i.dataset.field;\n            names[i.name] = i.type;\n\n            let val = i.dataset.default;\n            if (val == undefined)\n            {\n                switch (i.type)\n                {\n                    case 'radio':\n                        if (!i.checked) return;\n                        val = i.value;\n                        break;\n\n                    case 'checkbox':\n                        val = i.checked ? '1' : '0';\n                        break;\n\n                    case 'field':\n                        val = i.getValue();\n                        break;\n\n                    case 'file':\n                        val = '';\n                        break;\n\n                    default:\n                        val = '';\n                        break;\n                }\n            }\n\n            def[i.dataset.field] = val;\n        });\n\n        for (let name in names)\n        {\n            if (name in def)\n                names[name] = def[name];\n            else\n                names[name] = '';\n        }\n\n        def = names;\n\n        this.model.defaults = def;\n        this.model.reset();\n\n        this.clearMarkers();\n    },\n\n    /*\n    **\tTransforms an string returned by the server to a local representation.\n    */\n    filterString: function (str, r)\n    {\n        if (!str || !('messages' in global))\n            return str;\n\n        if (str.startsWith('@messages.'))\n        {\n            if (str.substr(10) in global.messages)\n                str = Template.eval(global.messages[str.substr(10)], r);\n        }\n\n        return str;\n    },\n\n    _change: function(elem)\n    {\n        if ('createEvent' in document)\n        {\n            let evt = document.createEvent('HTMLEvents');\n            evt.initEvent('change', false, true);\n            elem.dispatchEvent(evt);\n        }\n        else\n            elem.fireEvent('onchange');\n    },\n\n    _setField: function (f, value, silent)\n    {\n        if (!f) return;\n\n        for (f of this.querySelectorAll('[data-field=\"'+f+'\"]'))\n        {\n            switch (f.type || f.tagName.toLowerCase())\n            {\n                case 'select':\n                    f.val = f.dataset.value = f.multiple ? (value ? value.split(',') : value) : value;\n                    f.value = f.val = f.dataset.value;\n\n                    if (silent !== true) this._change(f);\n                    break;\n\n                case 'checkbox':\n                    f.checked = parseInt(value) ? true : false;\n                    break;\n\n                case 'radio':\n                    f.checked = value == f.value;\n                    break;\n\n                case 'field':\n                    f.val = f.dataset.value = value;\n                    f.setValue(value);\n                    break;\n\n                case 'file':\n                    if ((value instanceof File) || (value instanceof Blob))\n                    {\n                        f.val = value;\n                        f.dataset.value = value;\n                    }\n                    else if (value instanceof FileList)\n                    {\n                        f.val = value;\n                        f.dataset.value = value;\n                    }\n                    else\n                    {\n                        f.val = f.dataset.value = '';\n                        f.value = '';\n                    }\n\n                    break;\n\n                default:\n                    f.val = f.dataset.value = value;\n                    f.value = value;\n\n                    if (silent !== true) this._change(f);\n                    break;\n            }\n        }\n    },\n\n    _getField: function (f, _value=null, fromFileFields=false)\n    {\n        if (!f) return null;\n\n        if (typeof(f) != 'string')\n        {\n            let value = f.value == null ? f.val : f.value;\n            if (value === null) value = _value;\n\n            switch (f.type || f.tagName.toLowerCase())\n            {\n                case 'select':\n                    _value = f.multiple ? (value ? value.join(',') : value) : value;\n                    break;\n\n                case 'checkbox':\n                    _value = f.checked ? '1' : '0';\n                    break;\n\n                case 'radio':\n                    if (f.checked) _value = f.value;\n                    break;\n\n                case 'field':\n                    _value = f.getValue();\n                    break;\n\n                case 'file':\n                    _value = fromFileFields ? (f.files && f.files.length ? (f.multiple ? f.files : f.files[0]) : null) : f.val;\n                    break;\n\n                default:\n                    _value = value;\n                    break;\n            }\n\n            return _value === null ? '' : _value;\n        }\n\n        _value = null;\n\n        for (f of this.querySelectorAll('[data-field=\"'+f+'\"]'))\n            _value = this._getField(f, _value);\n\n        return _value === null ? '' : _value;\n    },\n\n    getField: function (name)\n    {\n        return this._getField(name);\n    },\n\n    clearMarkers: function ()\n    {\n        this.classList.remove('busy');\n\n        this.querySelectorAll('.message').forEach(i => i.classList.add('is-hidden') );\n        this.querySelectorAll('span.field-error').forEach(i => i.remove());\n\n        this.querySelectorAll('.field-error').forEach(i => { i.classList.remove('field-error'); i.classList.remove('is-invalid'); });\n        this.querySelectorAll('.field-passed').forEach(i => i.classList.remove('field-passed'));\n    },\n\n    _fieldChanged: function (evt)\n    {\n        let f = evt.source;\n\n        if (f.type == 'file')\n            this.model.set (f.dataset.field, this._getField(f, null, true), true);\n        else\n            this.model.set (f.dataset.field, this._getField(f));\n\n        evt.continuePropagation = true;\n    },\n\n    onModelPropertyChanged: function (evt, args)\n    {\n        this._setField (args.name, args.value);\n    },\n\n    _onSuccess: function(r)\n    {\n        this.classList.remove('busy');\n        this.clearMarkers();\n        let tmp;\n\n        this.dispatch ('formSuccess', r);\n\n        if (r.message && (tmp = this.querySelector('.message.success')) != null)\n        {\n            tmp.innerHTML = this.filterString(r.message, r).replace(/\\n/g, '<br/>');\n            tmp.classList.remove('is-hidden');\n            tmp.onanimationend = () => tmp.classList.add('is-hidden');\n        }\n    },\n\n    _onFailure: function(r)\n    {\n        this.classList.remove('busy');\n        this.clearMarkers();\n        let tmp;\n\n        this.dispatch ('formError', r);\n\n        if (r.fields)\n        {\n            for (let i in r.fields)\n            {\n                let f = this.querySelector('[data-field-container=\"'+i+'\"]');\n                if (!f)\n                {\n                    f = this.querySelector('[data-field=\"'+i+'\"]');\n                    if (!f) continue;\n                }\n\n                let tmp = document.createElement('span');\n                tmp.classList.add('field-error');\n                tmp.innerHTML = this.filterString(r.fields[i], r).replace(/\\n/g, '<br/>');\n\n                f.classList.add('field-error');\n                f.classList.add('is-invalid');\n\n                if (this.dataset.errorsAt == 'bottom')\n                    f.parentElement.append(tmp);\n                else if (this.dataset.errorsAt == 'top')\n                    f.parentElement.prepend(tmp);\n                else\n                    f.parentElement.insertBefore(tmp, f.nextElementSibling);\n\n                setTimeout((function (tmp) { return function() { tmp.classList.add('active'); } })(tmp), 25);\n            }\n\n            if (r.error && (tmp = this.querySelector('.message.error')) != null)\n            {\n                tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, '<br/>');\n                tmp.classList.remove('is-hidden');\n                tmp.onanimationend = () => tmp.classList.add('is-hidden');\n            }\n        }\n        else\n        {\n            if ((tmp = this.querySelector('.message.error')) != null)\n            {\n                tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, '<br/>') || ('Error: ' + r.response);\n                tmp.classList.remove('is-hidden');\n                tmp.onanimationend = () => tmp.classList.add('is-hidden');\n            }\n        }\n    },\n\n    reset: function (nsilent)\n    {\n        this.model.reset (nsilent);\n        this.clearMarkers();\n\n        if (nsilent === false)\n        {\n            for (var i in this.model.data)\n                this._setField (i, this.model.data[i], true);\n        }\n\n        return false;\n    },\n\n    submit: function ()\n    {\n        if (this.classList.contains('busy'))\n            return;\n\n        let data = { };\n\n        if (this.dataset.strict == 'false')\n            Object.assign(data, this.model.get());\n\n        let list = { };\n        this.querySelectorAll('[data-field]').forEach(e => list[e.dataset.field] = true);\n        Object.keys(list).forEach(f => data[f] = this._getField(f));\n\n        if (this.onbeforesubmit)\n            this.onbeforesubmit(data);\n\n        this.model.set(data);\n\n        let f = this.dataset.formAction || this.formAction;\n        if (!f) return;\n\n        this.classList.add('busy');\n\n        if (typeof(f) != 'function') {\n            data.f = f;\n            Api.apiCall(data, (r) => this[r.response == 200 ? '_onSuccess' : '_onFailure'](r), (r) => this._onFailure({ error: 'Unable to execute request.' }), this.dataset.method ?? 'POST');\n        }\n        else\n            f(data, (r) => this[r.response == 200 ? '_onSuccess' : '_onFailure'](r));\n    }\n});\n","/*\n    <r-panel data-route=\"name\">\n    </r-panel>\n\n    r-panel {\n        display: block;\n    }\n\n    r-panel:not(.is-active) {\n        display: none;\n    }\n\n    r-panel.is-inactive {\n    }\n\n    r-panel.is-active {\n    }\n*/\n\nimport Element from '../element.js';\nimport Router from '../router.js';\n\nexport default Element.register ('r-panel',\n{\n    /**\n     * Route object used by this element.\n     */\n    route: null,\n\n    /**\n     * Initializes the element.\n     */\n    init: function()\n    {\n        this.style.display = '';\n\n        // Executed then the panel route is activated.\n        this._onActivate = (evt, args) => {\n            if (!args.route.changed) return;\n            this.show(true);\n        };\n\n        // Executed then the panel route is deactivated.\n        this._onDeactivate = (evt, args) => {\n            this.hide();\n        };\n\n        this.hide();\n    },\n\n    /**\n     * Adds a handler to Router if the data-route attribute was set.\n     */\n    onConnected: function()\n    {\n        if (this.dataset.route) {\n            this.route = Router.addRoute (this.dataset.route, this._onActivate, this._onDeactivate);\n            this.classList.remove('is-active');\n            this.classList.add('is-inactive');\n        }\n        else {\n            this.classList.add('is-active');\n            this.classList.remove('is-inactive');\n        }\n\n        this.classList.add('anim-ended');\n    },\n\n    /**\n     * Removes a handler previously added to Router if the data-route attribute was set.\n     */\n    onDisconnected: function()\n    {\n        if (this.dataset.route)\n            Router.removeRoute(this.dataset.route, this._onActivate, this._onDeactivate);\n    },\n\n    /**\n     * Hides the panel by removing the `is-active` and adding `is-inactive` class to the element. Fires `panelHidden` event.\n     */\n    hide: function ()\n    {\n        this.dispatch('panelHidden', this.route ? this.route.args : { });\n        this.classList.remove('anim-ended');\n        this.classList.remove('is-active');\n        this.classList.add('is-inactive');\n        this.onanimationend = () => {\n            this.classList.add('anim-ended');\n            this.onanimationend = null;\n        };\n    },\n\n    /**\n     * Shows the panel visible by adding `is-active` and removing `is-inactive` class from the element. If `silent` is true and `data-route` enabled,\n     * the current route will not be updated. Fires `panelShown` event.\n     * @param {boolean} silent \n     */\n    show: function (silent=false)\n    {\n        if (this.dataset.route && !silent)\n        {\n            let hash = \"#\" + this.dataset.route;\n            if (window.location.hash.substr(0, hash.length) != hash) {\n                window.location = hash;\n                return;\n            }\n        }\n\n        this.dispatch('panelShown', this.route ? this.route.args : { });\n        this.classList.remove('anim-ended');\n        this.classList.remove('is-inactive');\n        this.classList.add('is-active');\n        this.onanimationend = () => {\n            this.classList.add('anim-ended');\n            this.onanimationend = null;\n        }\n    },\n\n    /**\n     * Toggles the visibility of the panel. If `silent` is true and `data-route` enabled, the current route will not be updated.\n     */\n    toggleVisibility: function (silent=false)\n    {\n        if (this.classList.contains('is-active'))\n            this.hide();\n        else\n            this.show(silent);\n    }\n});\n","/*\n    <r-list data-list=\"window.dataList1\" data-container=\".x-data\" data-wrap=\"true|false\">\n\n        <template data-mode=\"static|dynamic\">\n        </template>\n\n        <div class=\"x-empty\">\n            Nothing to show.\n        </div>\n\n        <div class=\"x-data\">\n        </div>\n\n    </r-list>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n    Modifiers:\n        .x-empty-null\t\tVisible when the list is in undefined state (before first load).\n        .x-empty\t\t\tVisible when there is no data in the list.\n        .x-not-empty \t\tVisible when there is data in the list.\n        .is-loading \t\tVisible when the list is loading.\n*/\n\nimport { Rinn, ModelList, Template } from 'rinn';\nimport Element from '../element.js';\n\n/*\n**\tConnects to a ModelList and renders its contents using a template. When using \"dynamic\" template, the contents can be other custom elements, and\n**\tthe model of each item can be accessed by using data-model=\":list-item\", which will cause the item model to be added to the element.\n**\n**\tAdditionally root attribute data-wrap can be set to 'true' to wrap the template contents inside a div with a data-iid representing the ID of the\n**\titem, this will cause any changes to items to affect only the specific item in question.\n*/\n\nexport default Element.register ('r-list',\n{\n    list: null,\n\n    container: null,\n    template: null,\n    isEmpty: false,\n    isDynamicTemplate: false,\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    ready: function()\n    {\n        this.container = this.querySelector(this.dataset.container || '.x-data');\n        if (!this.container) {\n            this.container = document.createElement('div');\n            this.container.className = 'x-data';\n            this.appendChild(this.container);\n        }\n\n        let tmp = this.template_elem = this.querySelector('template');\n        if (tmp) {\n            if (tmp.dataset.mode != 'dynamic') {\n                this.template = Template.compile(tmp.innerHTML);\n            }\n            else {\n                this.template = () => tmp.innerHTML;\n                this.isDynamicTemplate = true;\n            }\n\n            tmp.remove();\n        }\n        else\n            this.template = () => '';\n\n        this.container.textContent = ' ';\n\n        this.setEmpty(null);\n        this.setLoading(null);\n    },\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    rready: function()\n    {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error('data-list not found: ' + this.dataset.list);\n            return;\n        }\n\n        this.setList(list);\n    },\n\n    /*\n    **\tIndicates if the list is empty. Elements having x-empty, x-not-empty and x-empty-null will be updated.\n    */\n    setEmpty: function (value)\n    {\n        if (this.isEmpty === value)\n            return;\n\n        if (value === true)\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.remove('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-empty-null').forEach(i => i.classList.add('is-hidden'));\n        }\n        else if (value === false)\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.remove('is-hidden'));\n            this.querySelectorAll('.x-empty-null').forEach(i => i.classList.add('is-hidden'));\n        }\n        else\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-empty-null').forEach(i => i.classList.remove('is-hidden'));\n        }\n\n        this.isEmpty = value;\n    },\n\n    /*\n    **\tIndicates if the list is loading. Elements having is-loading will be updated.\n    */\n    setLoading: function (value)\n    {\n        if (value === true)\n            this.querySelectorAll('.is-loading').forEach(i => i.classList.remove('is-hidden'));\n        else\n            this.querySelectorAll('.is-loading').forEach(i => i.classList.add('is-hidden'));\n    },\n\n    /**\n    **\tSets the list model-list of the element.\n    */\n    setList: function (list)\n    {\n        if (!list || !Rinn.isInstanceOf(list, ModelList) || this.list === list)\n            return;\n\n        if (this.list != null)\n        {\n            if (this.list.dataSource)\n                this.list.dataSource.removeEventListener (this.eid+':*');\n\n            if (this.list.dataList)\n                this.list.dataList.removeEventListener (this.eid+':*');\n\n            this.list.removeEventListener (this.eid+':*');\n        }\n\n        this.list = list;\n\n        if (this.list.dataSource) {\n            this.list.dataSource.addEventListener (this.eid+':listLoading', this.onLoading, this);\n            this.list.dataSource.addEventListener (this.eid+':listLoaded', this.onLoaded, this);\n        }\n\n        if (this.list.dataList) {\n            this.list.dataList.addEventListener (this.eid+':listLoading', this.onLoading, this);\n            this.list.dataList.addEventListener (this.eid+':listLoaded', this.onLoaded, this);\n        }\n\n        this.list.addEventListener (this.eid+':itemsCleared', this.onItemsCleared, this);\n        this.list.addEventListener (this.eid+':itemsChanged', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemRemoved', this.onItemRemoved, this);\n        this.list.addEventListener (this.eid+':itemChanged', this.onItemChanged, this);\n        this.list.addEventListener (this.eid+':itemAdded', this.onItemAdded, this);\n    },\n\n    /*\n    **\tBuilds an item (inside a div) to be added to the container.\n    */\n    buildItem: function (iid, data, asHtml=false)\n    {\n        if (this.content) {\n            let elem = this.content(data.get());\n            elem.dataset.iid = iid;\n            return elem;\n        }\n\n        if (this.container.content) {\n            let elem = this.container.content(data.get());\n            elem.dataset.iid = iid;\n            return elem;\n        }\n\n        let html = this.template(data.get());\n        if (asHtml) return html;\n\n        let elem = document.createElement('div');\n        \n        elem.dataset.iid = iid;\n        elem.innerHTML = html;\n\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach(i => {\n            i.model = data;\n            i.dataset.model = \"this.model\";\n        });\n\n        for (let attr of this.template_elem.attributes)\n        {\n            if (attr.nodeName.startsWith('data-_') || attr.nodeName == 'data-mode')\n                continue;\n\n            elem.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n\n        return elem;\n    },\n\n    /*\n    **\tExecuted when the list is loading.\n    */\n    onLoading: function()\n    {\n        this.setLoading(true);\n    },\n\n    /*\n    **\tExecuted when the list finished loading.\n    */\n    onLoaded: function()\n    {\n        this.setLoading(false);\n    },\n\n    /*\n    **\tExecuted when the list is cleared.\n    */\n    onItemsCleared: function()\n    {\n        this.container._timeout = setTimeout(() => {\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = '';\n        }, 300);\n    },\n\n    /*\n    **\tExecuted when the items of the list changed.\n    */\n    onItemsChanged: function()\n    {\n        if (this.list.length() == 0)\n            return;\n\n        if (this.container._timeout)\n            clearTimeout(this.container._timeout);\n\n        this.container._timeout = null;\n        this.container.textContent = '';\n\n        let i = 0;\n\n        for (let data of this.list.getData())\n        {\n            if (this.dataset.wrap != 'false')\n                this.container.append(this.buildItem(this.list.itemId[i++], data));\n            else\n                this.container.innerHTML += this.buildItem(this.list.itemId[i++], data, true);\n        }\n\n        this.setEmpty(i == 0);\n    },\n\n    /*\n    **\tExecuted when an item is removed from the list.\n    */\n    onItemRemoved: function(evt, args)\n    {\n        if (this.dataset.wrap == 'false')\n        {\n            this.onItemsChanged();\n            return;\n        }\n\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        elem.remove();\n        this.setEmpty(this.list.length() == 0);\n    },\n\n    /*\n    **\tExecuted when an item changes.\n    */\n    onItemChanged: function(evt, args)\n    {\n        if (this.isDynamicTemplate) return;\n\n        if (this.dataset.wrap == 'false')\n        {\n            this.onItemsChanged();\n            return;\n        }\n\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        elem.innerHTML = this.template(args.item);\n    },\n\n    /*\n    **\tExecuted when an item is added to the list.\n    */\n    onItemAdded: function(evt, args)\n    {\n        if (args.position == 'head')\n        {\n            if (this.dataset.wrap != 'false')\n                this.container.prepend(this.buildItem(args.id, args.item));\n            else\n                this.container.innerHTML = this.buildItem(args.id, args.item, true) + this.container.innerHTML;\n        }\n        else\n        {\n            if (this.dataset.wrap != 'false')\n                this.container.append(this.buildItem(args.id, args.item));\n            else\n                this.container.innerHTML += this.buildItem(args.id, args.item, true);\n        }\n\n        this.setEmpty(false);\n    },\n\n    /**\n     * \tForces re-rendering of the element.\n     */\n    refresh: function()\n    {\n        this.onItemsChanged();\n    }\n});\n","/*\n    <r-item data-model=\"window.model1\">\n    </r-item>\n*/\n\nimport Element from '../element.js';\n\nexport default Element.register ('r-item',\n{\n    /**\n    **\tInitializes the element.\n    */\n    init: function() {\n    },\n\n    /**\n    **\tExecuted when the children and root are ready.\n    */\n    rready: function()\n    {\n        let model = this.dataModel ?? this.getFieldByPath(this.dataset.model);\n        if (!model) model = { };\n\n        this.setModel (model);\n    }\n});\n","/*\n    <r-paginator data-source=\"window.dataSource1\" data-page-size=\"25\">\n        <span data-watch=\"count\">Showing [offsetStart] to [offsetEnd] out of [count]</span>\n\n        <button data-action=\"firstPage\">First</button>\n        <button data-action=\"prevPage\">&laquo;</button>\n        <button data-action=\"nextPage\">&raquo;</button>\n        <button data-action=\"lastPage\">Last</button>\n        <button data-action=\"refresh\">Refresh</button>\n\n        <input type=\"text\" data-property=\"pageSize\" />\n    </r-paginator>\n*/\n\nimport { Rinn } from 'rinn';\nimport Element from '../element.js';\nimport DataSource from '../data-source.js';\n\n/*\n**\tConnects to a data source to provide pagination features.\n*/\n\nexport default Element.register ('r-paginator',\n{\n    source: null,\n    template: null,\n\n    /**\n    **\tInitializes the element.\n    */\n    init: function()\n    {\n        this.setModel({\n            offsetStart: 0,\n            offsetEnd: 0,\n            count: 0, offset: 0,\n            currentPageSize: this.dataset.pageSize || 25,\n            pageSize: this.dataset.pageSize || 25\n        });\n\n        this.listen('propertyChanged.pageSize', (evt, args) =>\n        {\n            if (this.model.get('currentPageSize') == args.value)\n                return;\n\n            this.model.set('currentPageSize', args.value);\n            this.updateOffset('range');\n        });\n    },\n\n    rready: function()\n    {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error('data-source not found: ' + this.dataset.source);\n            return;\n        }\n\n        this.setSource(source);\n    },\n\n    /**\n    **\tSets the source model-list of the paginator.\n    */\n    setSource: function (source)\n    {\n        if (!source || !Rinn.isInstanceOf(source, DataSource) || this.source === source)\n            return;\n\n        if (this.source != null)\n        {\n            this.source.removeEventListener (this.eid+':*');\n            this.source.includeCount = false;\n        }\n\n        this.source = source;\n\n        this.source.includeCount = true;\n        this.updateOffset();\n\n        this.source.addEventListener (this.eid+':requestPropertyChanged', this.onRequestPropertyChanged, this);\n        this.source.addEventListener (this.eid+':countChanged', this.onCountChanged, this);\n        this.source.addEventListener (this.eid+':listItemRemoved', this.onItemRemoved, this);\n        this.source.addEventListener (this.eid+':listItemAdded', this.onItemAdded, this);\n\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n\n    /*\n    **\tUpdates several offset related fields in the paginator model. Optionally refreshes the data source with the specified mode.\n    */\n    updateOffset: function(mode=null)\n    {\n        this.model.set('offsetStart', this.model.get('count') != 0 ? this.model.get('offset') + 1 : 0);\n        this.model.set('offsetEnd', Math.min(this.model.get('count'), this.model.get('offsetStart') + this.model.getInt('pageSize') - 1));\n        this.model.update('count');\n\n        let _count = this.source.request.get('count');\n        let _offset = this.source.request.get('offset');\n\n        this.source.request.set('count', this.model.getInt('pageSize'));\n        this.source.request.set('offset', this.model.get('offset'));\n\n        if (mode && (_count != this.source.request.get('count') || _offset != this.source.request.get('offset')))\n            this.source.refresh(mode);\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */\n    onRequestPropertyChanged: function(evt, args)\n    {\n        if (args.name == 'count' || args.name == 'offset')\n            return;\n\n        this.model.set(args.name, args.value);\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */\n    onModelPropertyChanged: function (evt, args)\n    {\n        let ignored = [\n            'offsetStart',\n            'offsetEnd',\n            'count',\n            'offset',\n            'currentPageSize',\n            'pageSize'\n        ];\n\n        if (ignored.indexOf(args.name) != -1)\n            return;\n\n        if (this.source.request.get(args.name) == args.value)\n            return;\n\n        this.source.request.set(args.name, args.value);\n        this.source.refresh('filter');\n    },\n\n    /*\n    **\tExecuted when the remote count changes.\n    */\n    onCountChanged: function(evt, args)\n    {\n        this.model.set('count', evt.source.count, false);\n        this.updateOffset();\n    },\n\n    /*\n    **\tExecuted when an item is removed from the list.\n    */\n    onItemRemoved: function(evt, args)\n    {\n        this.model.set('count', this.model.getInt('count') - 1, false);\n        this.updateOffset();\n    },\n\n    /*\n    **\tExecuted when an item is added to the list.\n    */\n    onItemAdded: function(evt, args)\n    {\n        this.model.set('count', this.model.getInt('count') + 1, false);\n        this.updateOffset();\n    },\n\n    /*\n    **\tMoves to the previous page.\n    */\n    prevPage: function()\n    {\n        if (this.model.get('offset') <= 0)\n            return;\n\n        let offs = this.model.get('offset') - this.model.getInt('pageSize');\n        if (offs < 0) offs = 0;\n\n        this.model.set('offset', offs);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tMoves to the next page.\n    */\n    nextPage: function()\n    {\n        let offs = this.model.get('offset') + this.model.getInt('pageSize');\n        if (offs >= this.model.get('count')) return;\n\n        this.model.set('offset', offs);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tMoves to the first page.\n    */\n    firstPage: function()\n    {\n        this.model.set('offset', 0);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tMoves to the last page.\n    */\n    lastPage: function()\n    {\n        let offs = this.model.get('count') - this.model.getInt('pageSize');\n        if (offs < 0) offs = 0;\n\n        this.model.set('offset', offs);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tRefreshes the data source.\n    */\n    refresh: function()\n    {\n        this.source.refresh('full');\n    },\n\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */\n    clear: function(args)\n    {\n        for (let i = 0; i < args.length; i++)\n            this.model.set(args[i], '');\n    }\n});\n","/*\n    <r-table data-source=\"window.dataSource1\">\n        <table>\n            <thead>\n                <tr>\n                    <th>A</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"x-data\">\n                <tr>\n                    <td>[a]</td>\n                    <td>[b]</td>\n                </tr>\n            </tbody>\n        </table>\n    </r-table>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n        th[data-sort] {\n            cursor: pointer; text-decoration: underline;\n        }\n\n        th[data-sort][data-order=\"asc\"]:before {\n            content: \"\\25B2\";\n        }\n\n        th[data-sort][data-order=\"desc\"]:before {\n            content: \"\\25BC\";\n        }\n\n    Modifiers:\n        .x-empty\t\t\tAdd to elements that should be shown only when there is no data in the data source.\n        .x-not-empty \t\tAdd to elements that should be shown only when there is data in the data source.\n        [data-sort]\t\t\tAdded to th/td elements in thead, marks the column as sortable.\n*/\n\nimport { Rinn, Template } from 'rinn';\nimport Element from '../element.js';\nimport DataSource from '../data-source.js';\n\n/*\n**\tConnects to a DataSource and renders its contents as a table.\n*/\n\nexport default Element.register ('r-table',\n{\n    source: null,\n    template: null,\n    container: null,\n    isEmpty: null,\n\n    /**\n    **\tInitializes the element.\n    */\n    init: function()\n    {\n        this.setModel({ });\n    },\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    ready: function()\n    {\n        this.container = this.querySelector(this.dataset.container || 'tbody.x-data');\n        if (!this.container) throw new Error ('r-table requires a container');\n\n        if (this.container.dataset.mode != 'dynamic')\n            this.template = Template.compile(this.container.innerHTML);\n        else\n            this.template = () => this.container.innerHTML;\n\n        this.temporalBody = document.createElement('tbody');\n        this.container.textContent = ' ';\n\n        this.setEmpty(true);\n    },\n\n    /**\n    **\tExecuted when the children and root elements are ready.\n    */\n    rready: function()\n    {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error('data-source not found: ' + this.dataset.source);\n            return;\n        }\n\n        this.setSource(source);\n    },\n\n    /*\n    **\tIndicates if the table is empty. Elements having .x-not-empty will be hidden.\n    */\n    setEmpty: function (value)\n    {\n        if (this.isEmpty === value)\n            return;\n\n        if (value)\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.remove('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.add('is-hidden'));\n        }\n        else\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.remove('is-hidden'));\n        }\n\n        this.isEmpty = value;\n    },\n\n    /**\n    **\tSets the data source of the element.\n    */\n    setSource: function (source)\n    {\n        if (!source || !Rinn.isInstanceOf(source, DataSource) || this.source === source)\n            return;\n\n        if (this.source != null)\n            this.source.removeEventListener (this.eid+':*');\n\n        this.source = source;\n\n        this.source.addEventListener (this.eid+':requestPropertyChanged', this.onRequestPropertyChanged, this);\n        this.source.addEventListener (this.eid+':listItemsCleared', this.onItemsCleared, this);\n        this.source.addEventListener (this.eid+':listItemsChanged', this.onItemsChanged, this);\n        this.source.addEventListener (this.eid+':listItemRemoved', this.onItemRemoved, this);\n        this.source.addEventListener (this.eid+':listItemChanged', this.onItemChanged, this);\n        this.source.addEventListener (this.eid+':listItemAdded', this.onItemAdded, this);\n\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */\n    onRequestPropertyChanged: function(evt, args)\n    {\n        this.model.set(args.name, args.value);\n\n        if (args.name == 'sort')\n        {\n            this.querySelectorAll('thead [data-sort]').forEach(i => i.dataset.order = '');\n        }\n        else if (args.name == 'order')\n        {\n            let elem = this.querySelector('thead [data-sort=\"'+evt.source.get('sort')+'\"]');\n            if (elem) elem.dataset.order = args.value;\n        }\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */\n    onModelPropertyChanged: function (evt, args)\n    {\n        if (this.source.request.get(args.name) == args.value)\n            return;\n\n        this.source.request.set(args.name, args.value);\n\n        let ignored = [\n            'count',\n            'offset'\n        ];\n\n        if (ignored.indexOf(args.name) != -1)\n            return;\n\n        this.source.refresh('filter');\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the model is removed.\n    */\n    onModelPropertyRemoved: function (evt, args)\n    {\n        if (typeof(args.fields) == 'string')\n            this.source.request.remove(i);\n        else\n            args.fields.forEach(i => this.source.request.remove(i));\n\n        this.source.refresh('filter');\n    },\n\n    /*\n    **\tBuilds an item to be added to the container.\n    */\n    buildItem: function (iid, data)\n    {\n        if (this.container.content) {\n            let elem = this.container.content(data.get());\n            elem.dataset.iid = iid;\n            return elem;\n        }\n\n        let elem = this.temporalBody;\n\n        elem.innerHTML = this.template(data.get());\n\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach(i => {\n            i.model = data;\n            i.dataset.model = \"this.model\";\n        });\n\n        elem = elem.firstElementChild;\n        elem.dataset.iid = iid;\n\n        return elem;\n    },\n\n    /*\n    **\tExecuted when the list is cleared.\n    */\n    onItemsCleared: function(evt, args)\n    {\n        this.container._timeout = setTimeout(() => {\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = '';\n        }, 300);\n    },\n\n    /*\n    **\tExecuted when the items of the list changed.\n    */\n    onItemsChanged: function(evt, args)\n    {\n        if (this.source.list.length() == 0)\n            return;\n\n        if (this.container._timeout)\n            clearTimeout(this.container._timeout);\n\n        this.container._timeout = null;\n        this.container.textContent = '';\n\n        let i = 0;\n\n        for (let data of this.source.list.getData())\n            this.container.append(this.buildItem(this.source.list.itemId[i++], data));\n\n        this.setEmpty(i == 0);\n    },\n\n    /*\n    **\tExecuted when an item is removed from the list.\n    */\n    onItemRemoved: function(evt, args)\n    {\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        elem.remove();\n        this.setEmpty(this.source.list.length() == 0);\n    },\n\n    /*\n    **\tExecuted when an item changes.\n    */\n    onItemChanged: function(evt, args)\n    {\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        let _elem = this.buildItem(args.id, args.item);\n        this.container.replaceChild(_elem, elem);\n    },\n\n    /*\n    **\tExecuted when an item is added to the list.\n    */\n    onItemAdded: function(evt, args)\n    {\n        if (args.position == 'head')\n            this.container.prepend(this.buildItem(args.id, args.item));\n        else\n            this.container.append(this.buildItem(args.id, args.item));\n\n        this.setEmpty(false);\n    },\n\n    /*\n    **\tHandles clicks to data-sort elements.\n    */\n    \"event click thead [data-sort]\": function(evt, args)\n    {\n        if (this.source.request.get('sort') == evt.source.dataset.sort)\n        {\n            this.source.request.set('order', this.source.request.get('order') == 'asc' ? 'desc' : 'asc');\n            this.source.refresh('order');\n        }\n        else\n        {\n            this.source.request.set('sort', evt.source.dataset.sort);\n            this.source.request.set('order', 'asc', true);\n            this.source.refresh('order');\n        }\n    },\n\n    /*\n    **\tRefreshes the data source.\n    */\n    refresh: function()\n    {\n        this.source.refresh('full');\n    },\n\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */\n    clear: function(args)\n    {\n        for (let i = 0; i < args.length; i++)\n            this.model.set(args[i], '');\n    }\n});\n","/*\n    <r-select data-list=\"window.dataList1\" data-blank=\"\"></r-select>\n*/\n\nimport { Rinn, ModelList } from 'rinn';\nimport Element from '../element.js';\n\n/*\n**\tConnects to a ModelList and renders its contents as a <select> element.\n*/\n\nexport default Element.register ('r-select',\n{\n    list: null,\n    container: null,\n\n    value: '',\n\n    /**\n    **\tInitializes the element.\n    */\n    init: function()\n    {\n        this.container = document.createElement('select');\n        this.parentElement.insertBefore(this.container, this);\n\n        let list = [];\n\n        for (let attr of this.attributes)\n        {\n            if (attr.nodeName.startsWith('data-_') || attr.nodeName == 'data-list' || attr.nodeName == 'data-blank')\n                continue;\n\n            this.container.setAttribute(attr.nodeName, attr.nodeValue);\n            list.push(attr.nodeName);\n        }\n\n        if (this.disabled)\n            this.container.disabled = this.disabled;\n\n        list.forEach(i => this.removeAttribute(i));\n\n        this.textContent = ' ';\n        this.style.display = 'none';\n    },\n\n    /**\n    **\tExecuted when the children and parent of the element are ready.\n    */\n    rready: function()\n    {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error('data-list not found: ' + this.dataset.list);\n            return;\n        }\n\n        this.setList(list);\n\n        if (this.parentElement.lastElementChild !== this)\n            this.parentElement.append(this);\n    },\n\n    /**\n    **\tSets the list model-list of the element.\n    */\n    setList: function (list)\n    {\n        if (!list || !Rinn.isInstanceOf(list, ModelList) || this.list === list)\n            return;\n\n        if (this.list != null)\n            this.list.removeEventListener (this.eid+':*');\n\n        this.list = list;\n\n        if (this.list.dataSource)\n            this.list.dataSource.includeEnum = true;\n\n        this.list.addEventListener (this.eid+':itemsCleared', this.onItemsCleared, this);\n        this.list.addEventListener (this.eid+':itemsChanged', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemRemoved', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemChanged', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemAdded', this.onItemsChanged, this);\n\n        this.onItemsChanged();\n    },\n\n    /*\n    **\tExecuted when the list is cleared.\n    */\n    onItemsCleared: function(evt, args)\n    {\n        this.container.textContent = '';\n    },\n\n    /*\n    **\tExecuted when the items of the list changed.\n    */\n    onItemsChanged: function(evt, args)\n    {\n        if (this.list.length() == 0)\n            return;\n\n        let list = this.list.getData();\n        let value, label, s = '';\n\n        if (list[0].has('value')) value = 'value';\n        else if (list[0].has('id')) value = 'id';\n\n        if (list[0].has('label')) label = 'label';\n        else if (list[0].has('name')) label = 'name';\n\n        if ('blank' in this.dataset)\n            s += '<option value=\"\">'+this.dataset.blank+'</option>';\n\n        if (list[0].has('group'))\n        {\n            let groups = { };\n            list.forEach(i => groups[i.get('group')] = null);\n\n            for (let i in groups)\n                groups[i] = { name: i, list: [] };\n\n            list.forEach(i => groups[i.get('group')].list.push(i));\n\n            groups = Object.values(groups);\n            groups.forEach(g => {\n                s += '<optgroup label=\"'+g.name+'\">';\n                g.list.forEach(i => s += '<option value=\"'+i.get(value)+'\">'+i.get(label)+'</option>');\n                s += '</optgroup>';\n            });\n        }\n        else\n            list.forEach(i => s += '<option value=\"'+i.get(value)+'\">'+i.get(label)+'</option>');\n\n        this.container.innerHTML = s;\n        this.container.value = this.container.dataset.value;\n    },\n\n    /**\n     * \tForces re-rendering of the element.\n     */\n    refresh: function()\n    {\n        this.onItemsChanged();\n    }\n});\n","/*\n    <r-image-cropper>\n    </r-image-cropper>\n*/\n\nimport Element from '../element.js';\nimport Utils from '../utils.js';\n\nexport default Element.register ('r-image-cropper',\n{\n    /*\n    **\tDefault aspect ratio.\n    */\n    aspectRatio: 1,\n\n    /*\n    **\tCurrent image scale.\n    */\n    imageScale0: 0, imageScale: 1,\n\n    /*\n    **\tImage translation offsets.\n    */\n    imageOffsX: 0, imageOffsY: 0,\n\n    /*\n    **\tPointer contexts.\n    */\n    pointerA: null, pointerB: null,\n\n    /*\n    **\tClient bounding box.\n    */\n    bounds: null,\n\n    /*\n    **\tInitializes the element.\n    */\n    init: function()\n    {\n        this.canvas = document.createElement('canvas');\n        this.appendChild(this.canvas);\n\n        this.g = this.canvas.getContext('2d');\n\n        this.pointerA = { id: null, active: false, sx: 0, sy: 0, cx: 0, cy: 0, ix: 0, iy: 0 };\n        this.pointerB = { id: null, active: false, sx: 0, sy: 0, cx: 0, cy: 0, ix: 0, iy: 0 };\n\n        this.log = document.createElement('div');\n        this.appendChild(this.log);\n    },\n\n    /*\n    **\tSets the image for the cropper from an image URL.\n    */\n    setImageUrl: function(url)\n    {\n        Utils.loadImageFromUrl(url, (image) => {\n            this.setImage(image);\n        });\n    },\n\n    /*\n    **\tSets the image for the cropper from an HTML File object.\n    */\n    setImageFile: function(file)\n    {\n        Utils.loadAsDataUrl(file, (url) => {\n            Utils.loadImageFromUrl(url, (image) => {\n                this.setImage(image);\n            });\n        });\n    },\n\n    /*\n    **\tSets the cropper image from an HTML Image element.\n    */\n    setImage: function(image)\n    {\n        this.image = image;\n\n        this.reset();\n\n        this.imageScale = Math.max(this.canvas.width / this.image.width, this.canvas.height / this.image.height);\n\n        this.imageOffsX = (this.canvas.width - this.imageScale*this.image.width)*0.5;\n        this.imageOffsY = (this.canvas.height - this.imageScale*this.image.height)*0.5;\n\n        this.render();\n    },\n\n    /*\n    **\tReturns the blob and URL representing the current canvas state.\n    */\n    getBlobAndUrl: function(callback, type='image/png', quality=0.9)\n    {\n        this.canvas.toBlob((blob) => {\n            callback(blob, URL.createObjectURL(blob));\n        },\n        type, quality);\n    },\n\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained.\n    */\n    reset: function()\n    {\n        this.bounds = this.getBoundingClientRect();\n\n        this.canvas.width = this.bounds.width;\n        this.canvas.height = this.bounds.width/this.aspectRatio;\n    },\n\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained and renders the image.\n    */\n    render: function()\n    {\n        this.canvas.width = this.canvas.width;\n\n        this.g.fillStyle = '#000';\n        this.g.beginPath();\n        this.g.rect(0, 0, this.canvas.width, this.canvas.height);\n        this.g.fill();\n\n        this.g.translate(this.imageOffsX, this.imageOffsY);\n        this.g.scale(this.imageScale, this.imageScale);\n        this.g.drawImage(this.image, 0, 0);\n    },\n\n    /*\n    **\tTranslates the image by the given offsets.\n    */\n    translateImage: function(offsX, offsY)\n    {\n        this.imageOffsX += offsX;\n        this.imageOffsY += offsY;\n\n        this.render(true);\n    },\n\n    /*\n    **\tHandle mouse events on the canvas.\n    */\n    \"event mousemove canvas\": function(evt)\n    {\n        if (this.pointerA.active)\n        {\n            this.pointerA.cx = evt.clientX;\n            this.pointerA.cy = evt.clientY;\n\n            this.translateImage(this.pointerA.cx - this.pointerA.sx, this.pointerA.cy - this.pointerA.sy);\n\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n        }\n\n        this.pointerA.ix = ((evt.clientX-this.bounds.left) - this.imageOffsX) / this.imageScale;\n        this.pointerA.iy = ((evt.clientY-this.bounds.top) - this.imageOffsY) / this.imageScale;\n    },\n\n    \"event mousedown canvas\": function(evt)\n    {\n        this.pointerA.active = true;\n        this.pointerA.sx = evt.clientX;\n        this.pointerA.sy = evt.clientY;\n    },\n\n    \"event mouseup canvas\": function(evt)\n    {\n        this.pointerA.active = false;\n    },\n\n    \"event wheel canvas\": function(evt)\n    {\n        if (evt.deltaY > 0)\n            this.imageScale -= 0.045;\n        else\n            this.imageScale += 0.045;\n\n        if (this.imageScale < 0.1) this.imageScale = 0.1;\n\n        this.imageOffsX += -this.pointerA.ix*this.imageScale + (evt.clientX-this.bounds.left) - this.imageOffsX;\n        this.imageOffsY += -this.pointerA.iy*this.imageScale + (evt.clientY-this.bounds.top) - this.imageOffsY;\n\n        this.render();\n    },\n\n    /*\n    **\tHandle touch events on the canvas.\n    */\n    \"event touchmove canvas\": function(evt)\n    {\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id == i.identifier)\n            {\n                this.pointerA.cx = i.clientX;\n                this.pointerA.cy = i.clientY;\n            }\n            else if (this.pointerB.id == i.identifier)\n            {\n                this.pointerB.cx = i.clientX;\n                this.pointerB.cy = i.clientY;\n            }\n        }\n\n        if (this.pointerA.active && this.pointerB.active)\n        {\n            let d0 = Math.sqrt(Math.pow(this.pointerA.sx-this.pointerB.sx, 2) + Math.pow(this.pointerA.sy-this.pointerB.sy, 2));\n            let d1 = Math.sqrt(Math.pow(this.pointerA.cx-this.pointerB.cx, 2) + Math.pow(this.pointerA.cy-this.pointerB.cy, 2));\n\n            let d = d1 - d0;\n            this.imageScale += (d/10)*0.025;\n            if (this.imageScale < 0.1) this.imageScale = 0.1;\n\n            this.imageOffsX += -this.pointerA.ix*this.imageScale + (this.pointerA.cx-this.bounds.left) - this.imageOffsX;\n            this.imageOffsY += -this.pointerA.iy*this.imageScale + (this.pointerA.cy-this.bounds.top) - this.imageOffsY;\n\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n\n            this.pointerB.sx = this.pointerB.cx;\n            this.pointerB.sy = this.pointerB.cy;\n\n            this.render();\n        }\n        else\n        {\n            let p = this.pointerA.active ? this.pointerA : (this.pointerB.active ? this.pointerB : null);\n            if (!p) return;\n\n            this.translateImage(p.cx - p.sx, p.cy - p.sy);\n\n            p.sx = p.cx;\n            p.sy = p.cy;\n        }\n    },\n\n    \"event touchstart canvas\": function(evt)\n    {\n        this.imageScale0 = this.imageScale;\n\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id === null)\n            {\n                this.pointerA.id = i.identifier;\n                this.pointerA.active = true;\n                this.pointerA.sx = i.clientX;\n                this.pointerA.sy = i.clientY;\n                this.pointerA.ix = ((i.clientX-this.bounds.left) - this.imageOffsX) / this.imageScale;\n                this.pointerA.iy = ((i.clientY-this.bounds.top) - this.imageOffsY) / this.imageScale;\n            }\n            else if (this.pointerB.id === null)\n            {\n                this.pointerB.id = i.identifier;\n                this.pointerB.active = true;\n                this.pointerB.sx = i.clientX;\n                this.pointerB.sy = i.clientY;\n                this.pointerB.ix = ((i.clientX-this.bounds.left) - this.imageOffsX) / this.imageScale;\n                this.pointerB.iy = ((i.clientY-this.bounds.top) - this.imageOffsY) / this.imageScale;\n            }\n        }\n    },\n\n    \"event touchend canvas\": function(evt)\n    {\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id == i.identifier)\n            {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            }\n            else if (this.pointerB.id == i.identifier)\n            {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    },\n\n    \"event touchcancel canvas\": function(evt)\n    {\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id == i.identifier)\n            {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            }\n            else if (this.pointerB.id == i.identifier)\n            {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    }\n});\n","\nconst Utils =\n{\n\t/**\n\t**\tForces the browser to show a download dialog.\n\t*/\n\tshowDownload: function (filename, url)\n\t{\n\t\tvar link = document.createElement(\"a\");\n\t\tlink.href = url;\n\n\t\tlink.style.display = 'none';\n\t\tlink.download = filename;\n\t\tlink.target = \"_blank\";\n\n\t\tdocument.body.appendChild(link);\n\t\tlink.click();\n\t\tdocument.body.removeChild(link);\n\t},\n\n\t/**\n\t**\tForces the browser to show a file selection dialog.\n\t*/\n\tshowFilePicker: function (allowMultiple, accept, callback)\n\t{\n\t\tvar input = document.createElement(\"input\");\n\n\t\tinput.type = \"file\";\n\t\tinput.accept = accept;\n\t\tinput.style.display = 'none';\n\t\tinput.multiple = allowMultiple;\n\n\t\tdocument.body.appendChild(input);\n\n\t\tinput.onchange = function () {\n\t\t\tcallback(input.files);\n\t\t};\n\n\t\tdocument.body.onfocus = function ()\n\t\t{\n\t\t\tdocument.body.onfocus = null;\n\t\t\tdocument.body.removeChild(input);\n\t\t};\n\n\t\tinput.click();\n\t},\n\n\t/**\n\t**\tLoads a URL using FileReader and returns as a dataURL.\n\t*/\n\tloadAsDataUrl: function (file, callback)\n\t{\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\t\t\tcallback (e.target.result, null);\n\t\t};\n\n\t\treader.onerror = function(e) {\n\t\t\tcallback (null, e);\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\t},\n\n\t/**\n\t**\tLoads a URL using FileReader and returns as text.\n\t*/\n\tloadAsText: function (file, callback)\n\t{\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\t\t\tcallback (e.target.result);\n\t\t};\n\n\t\treader.readAsText(file);\n\t},\n\n\t/**\n\t**\tLoads a URL using FileReader and returns as an array buffer.\n\t*/\n\tloadAsArrayBuffer: function (file, callback)\n\t{\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\t\t\tcallback (e.target.result);\n\t\t};\n\n\t\treader.readAsArrayBuffer(file);\n\t},\n\n\t/**\n\t**\tLoads an array of URLs using FileReader and returns them as data url.\n\t*/\n\tloadAllAsDataUrl: function (fileList, callback)\n\t{\n\t\tvar result = [];\n\n\t\tif (!fileList || !fileList.length)\n\t\t{\n\t\t\tcallback(result);\n\t\t\treturn;\n\t\t}\n\n\t\tvar loadNext = function (i)\n\t\t{\n\t\t\tif (i == fileList.length)\n\t\t\t{\n\t\t\t\tcallback(result);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tUtils.loadAsDataUrl (fileList[i], function(url, err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresult.push({ name: fileList[i].name, size: fileList[i].size, url: url });\n\t\t\t\t}\n\t\t\t\tloadNext(i+1);\n\t\t\t});\n\t\t};\n\n\t\tloadNext(0);\n\t},\n\n\t/*\n\t**\tLoads a URL as an image.\n\t*/\n\tloadImageFromUrl: function (url, callback)\n\t{\n\t\tlet image = new Image();\n\t\timage.onload = () => callback(image);\n\t\timage.onerror = () => callback(null);\n\t\timage.src = url;\n\t}\n};\n\nexport default Utils;\n","\nimport { Rinn } from 'rinn';\n\n//!class db\n\nexport default\n{\n\t/**\n\t * Database connection.\n\t */\n\tdb: null,\n\n\t/**\n\t * Initializes the database connection.\n\t * @param {string} dbName\n\t * @param {number} version\n\t * @param {(db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void} upgradeCallback\n\t * @returns {Promise<void>}\n\t * !static init (dbName: string, version: number, upgradeCallback: (db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void) : Promise<void>;\n\t */\n\tinit: function (dbName, version, upgradeCallback)\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tif (!global.indexedDB)\n\t\t\t{\n\t\t\t\treject ('IndexedDB is not available in your system.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet req = indexedDB.open(dbName, version);\n\t\t\treq.onerror = (evt) =>\n\t\t\t{\n\t\t\t\tlet err = evt.target.error + '';\n\n\t\t\t\tif (err.indexOf('AbortError') !== -1)\n\t\t\t\t\terr = \"\\n\" + req.message;\n\n\t\t\t\treject('Unable to open database: ' + err);\n\t\t\t\treturn;\n\t\t\t};\n\n\t\t\treq.onupgradeneeded = async (evt) =>\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tconst db = evt.target.result;\n\t\t\t\t\tconst txn = evt.target.transaction;\n\n\t\t\t\t\tif (evt.oldVersion < 1)\n\t\t\t\t\t\tdb.createObjectStore('system', { keyPath: ['name'] });\n\n\t\t\t\t\tawait upgradeCallback(db, txn, evt.oldVersion);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\treq.message = e.message;\n\t\t\t\t\treq.transaction.abort();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treq.onsuccess = async (evt) =>\n\t\t\t{\n\t\t\t\tthis.db = evt.target.result;\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Ensures the database is ready to be used, or throws an exception.\n\t */\n\tensureConnected: function()\n\t{\n\t\tif (!this.db)\n\t\t\talert('Error: Database not initialized.');\n\t},\n \n\t/**\n\t * Returns an index object for later use with methods that accept an IDBIndex in the `storeName` parameter.\n\t * @param {string} storeName\n\t * @param {string} indexName\n\t * @returns {IDBIndex}\n\t * !static index (storeName: string, indexName: string) : IDBIndex;\n\t */\n\tindex: function (storeName, indexName)\n\t{\n\t\tthis.ensureConnected();\n\n\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\n\t\tlet index = store.index(indexName);\n\t\tif (!index) throw new Error ('Unable to find index `' + indexName + '` in store ' + storeName);\n\n\t\treturn index;\n\t},\n\n\t/**\n\t * Runs a callback for each record in a data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} id\n\t * @param { (value:object, cursor:IDBCursor) => Promise<boolean> } callback\n\t * @returns {Promise<void>}\n\t * !static forEach (storeName: string|IDBIndex|IDBObjectStore, id: string, callback: (value:object, cursor:IDBCursor) => Promise<boolean>) : Promise<void>;\n\t */\n\tforEach: function (storeName, id, callback)\n\t{\n\t\tthis.ensureConnected();\n\n\t\tif (typeof(id) === 'function')\n\t\t{\n\t\t\tcallback = id;\n\t\t\tid = null;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) =>\n\t\t{\n\t\t\tlet request, store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tif (id === null)\n\t\t\t\trequest = store.openCursor();\n\t\t\telse\n\t\t\t\trequest = store.openCursor(id);\n\n\t\t\trequest.onsuccess = async (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet result = await callback (cursor.value, cursor);\n\t\t\t\tif (result === false)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns the count of all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @returns {Promise<number>}\n\t * !static count (storeName: string|IDBIndex|IDBObjectStore) : Promise<number>;\n\t */\n\tcount: function (storeName)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.count();\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<object>>}\n\t * !static getAll (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */\n\tgetAll: function (storeName, filter=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.getAll(filter);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns all keys from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<string|number|Array<string|number>>>}\n\t * !static getAllKeys (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */\n\tgetAllKeys: function (storeName, filter=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.getAllKeys(filter);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Loads a list of records having unique values from the specified data store and returns the entire object or just the specified field.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} [field]\n\t * @returns {Promise<Array<number|string|object>>}\n\t * !static getAllUnique (storeName: string|IDBIndex|IDBObjectStore) : Promise<Array<number|string|object>>;\n\t */\n\tgetAllUnique: function (storeName, fieldName=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.openCursor(null, 'nextunique');\n\t\t\tlet list = [];\n\n\t\t\trequest.onsuccess = (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve(list);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlist.push(fieldName ? cursor.value[fieldName] : cursor.value);\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns a single record from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<object>}\n\t * !static get (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<object>;\n\t */\n\tget: function (storeName, id)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.get(id);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result || null);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\n\t/**\n\t * Adds or overwrites a record in the specified data store (data must include the primary key).\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static put (storeName: string, data: object) : Promise<void>;\n\t */\n\tput: function (storeName, data)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\tlet request = store.put(data);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns a variable from the system table.\n\t * @param {string} name - Name of the property to read.\n\t * @param {boolean} full - When `true` the entire object will be returned.\n\t * @returns {any}\n\t * !static sysGet (name: string, full?: boolean) : any;\n\t */\n\tsysGet: async function (name, full=false)\n\t{\n\t\tlet data = await this.get('system', [name]);\n\t\treturn data ? (full ? data : data.value) : null;\n\t},\n\n\t/**\n\t * Writes a variable to the system table.\n\t * @param {string} name - Name of the property to write.\n\t * @param {any} value - Value to write.\n\t * @param {boolean} full - When `true` the entire value will be written as-is.\n\t * @returns {void}\n\t * !static sysPut (name: string, value: any, full?: boolean) : void;\n\t */\n\tsysPut: async function (name, value, full=false)\n\t{\n\t\tif (full)\n\t\t{\n\t\t\tvalue.name = name;\n\t\t\tawait this.put('system', value);\n\t\t}\n\t\telse\n\t\t\tawait this.put('system', { name: name, value: value });\n\t},\n\n\t/**\n\t * Returns a single record from the specified data store that matches the `partial` object and does NOT match the `notPartial` object.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {object} [partial]\n\t * @param {object} [notPartial]\n\t * @returns {Promise<object>}\n\t * !static findOne (storeName: string|IDBIndex|IDBObjectStore, partial?: object, notPartial?: object) : Promise<object>;\n\t */\n\tfindOne: function (storeName, partial=null, notPartial=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.openCursor();\n\n\t\t\trequest.onsuccess = (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve(null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (partial === null || Rinn.partialCompare(cursor.value, partial))\n\t\t\t\t{\n\t\t\t\t\tif (notPartial !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Rinn.partialCompare(cursor.value, notPartial))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor.continue();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(cursor.value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Deletes a record from the specified data store.\n\t * @param {string} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static delete (storeName: string, id: string|number|Array<string|number>) : Promise<void>;\n\t */\n\tdelete: function (storeName, id)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\n\t\t\tlet request = store.delete(id);\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Deletes all items in the specified store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static deleteAll (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<void>;\n\t */\n\tdeleteAll: function (storeName, id=null)\n\t{\n\t\treturn this.forEach(storeName, id, async (value, cursor) => {\n\t\t\tawait cursor.delete();\n\t\t});\n\t},\n\n\t/**\n\t * Inserts a new record in the specified data store.\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static insert (storeName: string, data: object) : Promise<void>;\n\t */\n\tinsert: function (storeName, data)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\tlet request = store.add(data);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t}\n};\n\n//!/class\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$interopDefault","a","__esModule","default","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$parcel$export","t11","e11","n11","r11","Object","defineProperty","get","set","enumerable","configurable","$9ffb7151b8b2d038$export$eefcfe56efaaa57d","$9ffb7151b8b2d038$export$4c85e640eb41c31b","$9ffb7151b8b2d038$export$d61e24a684f9e51","$9ffb7151b8b2d038$export$ec8b666c5fe2c75a","$9ffb7151b8b2d038$export$a1edc412be3e1841","$9ffb7151b8b2d038$export$59eced47f477f85a","$9ffb7151b8b2d038$export$19342e026b58ebb7","$9ffb7151b8b2d038$export$3a9581c9ade29768","$9ffb7151b8b2d038$export$fb8073518f34e6ec","$9ffb7151b8b2d038$export$14416b8d99d47caa","parcelRequire25d2","$39761b0dd175036e$export$2e2bcd8739ae039","$fMUO1","$cAEYe","_getref","value","obj","substr","eval","type","isNaN","parseInt","parseFloat","toString","typeOf","model","i11","ensure","cls","ensureTypeOf","arrayof","s11","length","arraynull","remove","splice","arraycompliant","isCompliant","required","minlen","maxlen","minval","maxval","mincount","maxcount","pattern","test","inset","RegExp","indexOf","join","upper","toUpperCase","lower","toLowerCase","invokeLater","setTimeout","wait","Promise","Array","isArrayOrObject","clone","push","merge","override","partialCompare","arrayFind","isInstanceOf","escape","replace","prototype","className","serialize","JSON","stringify","deserialize","parse","hookAppend","apply","unhook","hookPrepend","email","url","urlNoProt","name","uname","text","utext","$2394d727dfd6a212$var$Class","_class","_super","__ctor","__dtor","__proto__","hasOwnProperty","instanceOf","_initSuperRefs","constructor","a11","l11","o11","u11","f11","h11","c11","inherit","_extend","Class","classInit","isInstance","extend","create","mutate","bind","$2394d727dfd6a212$export$2e2bcd8739ae039","$13eda5a5dec8010f$export$2e2bcd8739ae039","source","args","_async","list","next","ret","original","i","cbHandler","cbContext","reset","setSource","resume","silent","handler","context","data","from","enqueue","$c43adaf9cb6d6dd3$export$2e2bcd8739ae039","listeners","namespace","setNamespace","addEventListener","split","ns","removeEventListener","prepareEvent","concat","silence","dispatchEvent","$4VREF","$4dfa0622e14576ea$var$_Model","defaults","constraints","changedList","_silent","_level","EventDispatcher","def","update","ready","_validate","Constraints","message","_set","constraint","_propertyEvent","old","level","arguments","fields","has","flatten","getInt","getFloat","getBool","getReference","class","classPath","validate","observe","unobserve","watch","unwatch","trigger","$4dfa0622e14576ea$export$2e2bcd8739ae039","$0890bed8a163f087$export$2e2bcd8739ae039","itemt","contents","itemId","nextId","Model","_eventGroup","Date","now","_bind","_onItemEvent","_unbind","item","clear","setData","getData","getAt","removeAt","setAt","updateAt","position","pop","unshift","shift","find","$2710795e2347ba2a$var$Schema","Type","unflatten","String","Integer","Number","_precision","_round","precision","Math","pow","Bool","_compact","compact","SharedString","index","strings","itemType","_debug","_filter","debug","of","filter","properties","property","defvalue","propertyAlias","symbolic","_constructor","Property","is","Map","Selector","conditions","when","with","$2710795e2347ba2a$export$2e2bcd8739ae039","$32651d5f38a8a64c$export$2e2bcd8739ae039","typeSchema","assign","onUnflattened","$2bcce06113365814$export$2e2bcd8739ae039","itemTypeSchema","items","add","itemsReferenceChanged","onItemRemoved","sort","findItem","getItems","isEmpty","first","last","addAt","onBeforeItemAdded","onItemAdded","forEach","forEachCall","forEachRev","forEachRevCall","$d261ccdafdfe12a9$var$Template","strict","parseTemplate","p11","d11","trim","map","match","clean","expand","functions","compile","getNamedValues","startsWith","endsWith","null","true","false","len","int","str","float","chr","fromCharCode","ord","charCodeAt","not","neg","abs","and","or","eq","ne","lt","le","gt","ge","isnotnull","isnull","iszero","typeof","mul","div","sum","sub","mod","dump","_unset","nl2br","keys","values","_each","_foreach","_if","_switch","_break","_continue","_repeat","_for","to","_loop","_echo","console","log","contains","_map","_call","$d261ccdafdfe12a9$export$2e2bcd8739ae039","root","freeExports","freeModule","freeGlobal","InvalidCharacterError","error","TABLE","REGEX_SPACE_CHARACTERS","base64","input","b","buffer","padding","output","charAt","bitStorage","bitCounter","define","amd","nodeType","key","$jNRwG","$a60d7ab082450164$var$_Router","Route","routeRegex","params","s_args","active","changed","route","_compileRoute","m","exec","addHandler","unrouted","removeHandler","dispatch","matches","routes","sortedRoutes","ignoreHashChangeEvent","location","alreadyAttached","onhashchange","onLocationChanged","refresh","setRoute","location1","realLocation","hash","addRoute","onRoute","onUnroute","getRoute","addRoutes","removeRoute","undefined","removeRoutes","cLocation","pLocation","k","state","j","rLocation","lastIndexOf","navigate","$a60d7ab082450164$export$2e2bcd8739ae039","$a5c21812244207c8$var$elementPrototypes","$a5c21812244207c8$var$elementClasses","$a5c21812244207c8$var$Element","eid","isRoot","isReady","readyReenter","readyLocked","modelt","events","evt","continuePropagation","_long_press","elem","dx","_pos_fx","_pos_sx","dy","_pos_fy","_pos_sy","sqrt","dispatchOn","clientX","clientY","touches","clearTimeout","opts","dataset","action","longPress","enter","_list_watch","_list_visible","_list_attr","_list_property","style","display","random","tmp","setModel","reverse","tagName","parentElement","bindEvents","setInnerHTML","appendChild","document","createElement","markReady","rready","collectWatchers","ref","getFieldByPath","onready","findCustomParent","checkReady","rootReady","getRoot","onRefAdded","onrootready","childNodes","result","evaluate","XPathResult","ANY_TYPE","iterateNext","path","findRoot","Rinn","onModelPreChanged","onModelPropertyChanging","onModelPropertyPreChanged","onModelPropertyRemoved","getModel","addClass","classString","classList","removeClass","setStyle","styleString","getWidth","getBoundingClientRect","width","getHeight","height","evtstr","hdl","selector","listen","keyCode","bindRoutes","routeStr","unbindRoutes","_eventHandler","target","HTMLElement","detail","elems","querySelectorAll","preventDefault","stopPropagation","eventName","eventCatcher","eventImmediate","callback0","callback1","firstCapture","firstCaptureCount","queue","q","removed","createEventObject","bubbles","MouseEvent","CustomEvent","propName","innerHTML","modified","_list_watch_length","_list_visible_length","_list_attr_length","_list_property_length","_template","Template","_watch","removeAttribute","selfWatch","_visible","visible","selfVisible","_attr","attr","selfAttr","onchange","onblur","checked","getValue","onmouseup","selfProperty","onCreated","elementConnected","onConnected","elementDisconnected","onconnected","onDisconnected","ondisconnected","element","onRefRemoved","removeProperty","setProperty","onModelChanged","val","setValue","onModelPropertyChanged","preparePrototype","proto","__prototypePrepared","protos","__check","newElement","invokeConstructor","entries","srcElement","connectReference","flags","connectedCallback","xref","disconnectedCallback","__init","__ready","__rready","f","dummy","customElements","functionName","newFunction","hook1","hook2","querySelector","fn","querySelectorParent","$a5c21812244207c8$export$2e2bcd8739ae039","$8AUAG","$7a42222fdfbd696d$var$Api","REQUEST_PACKAGE_SUPPORTED","REQ64_SUPPORTED","JSON_RESPONSE_SUPPORTED","XML_RESPONSE_SUPPORTED","INCLUDE_CREDENTIALS","UNIQUE_STAMP","DISABLE_CORS","apiUrl","useReq64","retries","headers","_requestLevel","_requestPackage","_packageData","setEndPoint","responseFilter","res","req","packageBegin","packageEnd","callback","packageSend","batch","responseCallback","rpkg","encode","encodeParams","_showProgress","apiCall","_hideProgress","response","e","documentElement","header","s","FormData","encodeURIComponent","getUrl","appendParam","param","success","failure","httpMethod","relativeUrl","options","mode","method","body","multipart","credentials","Blob","File","append","l","fetch","then","decodeResult","catch","json","resolve","reject","DOMParser","parseFromString","blob","getBlob","decode","request","post","makeUrl","$7a42222fdfbd696d$export$2e2bcd8739ae039","$80620d99b03812be$export$2e2bcd8739ae039","debounceDelay","includeCount","includeEnum","includeList","count","enum","basePath","config","ModelList","dataSource","forwardRequestEvent","forwardListEvent","forwardEnumEvent","_timeout","fetchCount","fetchEnum","fetchList","forced","fetchOne","r","delete","fetchDelete","fetchData","$dae0bbca73793b94$export$2e2bcd8739ae039","dataList","_callback","$34149b5e20a7ad4b$var$Easing","interpolate","src","dst","duration","easing","time","x","lastTime","dt","interpolator","curTime","t","requestAnimationFrame","Linear","IN","OUT","IN_OUT","Back","Bounce","getConst","Circ","Cubic","Expo","Power","p","Quad","Quartic","Quintic","Sine","sin","cos","Step","$34149b5e20a7ad4b$export$2e2bcd8739ae039","$b77ee20098523c74$var$Anim","initialData","stack","block","timeScale","blockTime","paused","finished","onFinishedCallback","onUpdatedCallback","onFinished","onUpdated","handle","initial","speed","setOutput","pause","clearInterval","setInterval","_block","_index","_blockTime","cmd","op","started","blocks","indices","blockTimes","n","_count","field","startValue","_startValue","_endValue","endValue","cur","table","snd","play","parallel","serial","repeat","end","restart","range","rand","randt","c","$b77ee20098523c74$export$2e2bcd8739ae039","$f7bcc5a668e0670f$export$2e2bcd8739ae039","container","activeTab","baseRoute","selectTab","_routeHandler","link","href","onanimationend","showTab","tabName","previousElementSibling","nextElementSibling","_hideTabsExcept","exceptName","el","$fc9b87eb8eb33755$export$2e2bcd8739ae039","formElement","names","clearMarkers","filterString","messages","_change","createEvent","initEvent","fireEvent","_setField","multiple","FileList","_getField","_value","fromFileFields","files","getField","_fieldChanged","_onSuccess","_onFailure","errorsAt","prepend","insertBefore","nsilent","submit","onbeforesubmit","formAction","$0a5950960712be2b$export$2e2bcd8739ae039","_onActivate","show","_onDeactivate","hide","toggleVisibility","$aa6a6e90ef8dc4c8$export$2e2bcd8739ae039","template","isDynamicTemplate","template_elem","textContent","setEmpty","setLoading","setList","onLoading","onLoaded","onItemsCleared","onItemsChanged","onItemChanged","buildItem","iid","asHtml","content","html","attributes","nodeName","setAttribute","nodeValue","wrap","$6ebf9e92cac4cb5e$export$2e2bcd8739ae039","dataModel","$9fd4b08f8abedc01$export$2e2bcd8739ae039","offsetStart","offsetEnd","offset","currentPageSize","pageSize","updateOffset","onRequestPropertyChanged","onCountChanged","min","_offset","ignored","prevPage","offs","nextPage","firstPage","lastPage","$0eddb6c9ad6478b4$export$2e2bcd8739ae039","temporalBody","i1","order","firstElementChild","_elem","replaceChild","$b31b5ad1048f6f9a$export$2e2bcd8739ae039","disabled","lastElementChild","label","blank","groups","g","$56b80282f7eea6ac$var$Utils","showDownload","filename","download","click","removeChild","showFilePicker","allowMultiple","accept","onfocus","loadAsDataUrl","file","reader","FileReader","onload","onerror","readAsDataURL","loadAsText","readAsText","loadAsArrayBuffer","readAsArrayBuffer","loadAllAsDataUrl","fileList","loadNext","size","loadImageFromUrl","image","Image","$56b80282f7eea6ac$export$2e2bcd8739ae039","$518ecafe6bac0ac2$export$2e2bcd8739ae039","aspectRatio","imageScale0","imageScale","imageOffsX","imageOffsY","pointerA","pointerB","bounds","canvas","getContext","sx","sy","cx","cy","ix","iy","setImageUrl","setImage","setImageFile","max","render","getBlobAndUrl","quality","toBlob","URL","createObjectURL","fillStyle","beginPath","rect","fill","translate","scale","drawImage","translateImage","offsX","offsY","left","top","deltaY","changedTouches","identifier","d0","d","d1","$71bc70b9c4af45f1$export$2e2bcd8739ae039","Tabs","Form","Panel","List","Item","Paginator","Table","Select","ImageCropper","$2adc75ff92895237$export$2e2bcd8739ae039","db","dbName","version","upgradeCallback","indexedDB","open","onupgradeneeded","txn","transaction","oldVersion","createObjectStore","keyPath","abort","onsuccess","ensureConnected","alert","storeName","indexName","store","objectStore","openCursor","event","cursor","continue","getAll","getAllKeys","getAllUnique","fieldName","put","sysGet","full","sysPut","findOne","partial","notPartial","deleteAll","insert","$a8da540bf1e6d416$export$55185c17a0fcbe46","$a8da540bf1e6d416$export$db77ccec0bb4ccac","$a8da540bf1e6d416$export$9864de54bd63ed8a","$a8da540bf1e6d416$export$bf71da7aebe9ddc1","$a8da540bf1e6d416$export$accd73d198d77d2f","$a8da540bf1e6d416$export$d3568da47c78d35c","$a8da540bf1e6d416$export$cea96571ebbff9dd","$a8da540bf1e6d416$export$deefd61317ad2797","$a8da540bf1e6d416$export$3abb4be70fa2c84e","$a8da540bf1e6d416$export$d2ca453b913dcdea","$a8da540bf1e6d416$export$f932f06c7eb6abeb","$a8da540bf1e6d416$export$eefcfe56efaaa57d","$a8da540bf1e6d416$export$4c85e640eb41c31b","$a8da540bf1e6d416$export$d61e24a684f9e51","Event","$a8da540bf1e6d416$export$ec8b666c5fe2c75a","$a8da540bf1e6d416$export$a1edc412be3e1841","$a8da540bf1e6d416$export$59eced47f477f85a","$a8da540bf1e6d416$export$19342e026b58ebb7","Schema","$a8da540bf1e6d416$export$3a9581c9ade29768","Flattenable","$a8da540bf1e6d416$export$fb8073518f34e6ec","Collection","$a8da540bf1e6d416$export$14416b8d99d47caa","riza","Router","Element","CElement","Api","DataSource","DataList","Easing","Anim","Elements","Utils","v","model11","ctval11","name11","value11","mclass11","remove11","$b7e7672d417be9d7$export$2e2bcd8739ae039","$b7e7672d417be9d7$var$Rinn","millis","o","objs","arr","getObject","forceArray","object","conditional","oldFunction","$92a8a0aff23e2e33$export$2e2bcd8739ae039","_newSuper","_prot","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","base","classConstructor","host","zombie","eventArgs","nvalue","ctname","prev","direct","temp","force","safe","rsafe","ct","retObject","desc","inc","exc","relative","sym_open","sym_close","is_tpl","nflush","flush","parts","mparts","nparts","unescape","value1","emit","quote","failed","expanded","start","var_name","case_value","to1","step","tpl","arrayMode"],"version":3,"file":"riza.js.map"}