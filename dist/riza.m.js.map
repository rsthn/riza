{"mappings":"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","sources":["<anon>","src/main.js","src/router.js","src/element.js","src/api.js","src/data-source.js","src/data-list.js","src/easing.js","src/anim.js","src/elements.js","src/elems/r-tabs.js","src/elems/r-form.js","src/elems/r-panel.js","src/elems/r-list.js","src/elems/r-item.js","src/elems/r-paginator.js","src/elems/r-table.js","src/elems/r-select.js","src/elems/r-image-cropper.js","src/utils.js","src/db.js","src/geo.js","src/runtime-jsx.js"],"sourcesContent":["import {Rinn as $k7heJ$Rinn, Class as $k7heJ$Class, Event as $k7heJ$Event, EventDispatcher as $k7heJ$EventDispatcher, Model as $k7heJ$Model, ModelList as $k7heJ$ModelList, Schema as $k7heJ$Schema, Flattenable as $k7heJ$Flattenable, Collection as $k7heJ$Collection, Template as $k7heJ$Template} from \"rinn\";\nimport $k7heJ$base64 from \"base-64\";\nimport {Signal as $k7heJ$Signal, signal as $k7heJ$signal, expr as $k7heJ$expr, watch as $k7heJ$watch, validator as $k7heJ$validator} from \"riza-signal\";\n\n\n      var $parcel$global = globalThis;\n    \n/*\r\n**\tThe Router is a special module that detects local URL changes (when a hash-change occurs) and\r\n**\tforwards events to the appropriate handlers.\r\n*/ const $7718a52dfca15325$var$_Router = {\n    Route: (0, $k7heJ$EventDispatcher).extend({\n        /*\r\n        **\tRegular expression for the route. This is generated from a simpler expression provided\r\n        **\tin the constructor.\r\n        */ routeRegex: null,\n        /*\r\n        **\tOriginal route string value.\r\n        */ value: null,\n        /*\r\n        **\tMap with the indices and the names of each paremeter obtained from the route expression.\r\n        */ params: null,\n        /*\r\n        **\tArguments obtained from the current route (uses `params` to determine name of arguments).\r\n        */ args: null,\n        /*\r\n        **\tArguments string obtained from the last route dispatch. Used to check if the arguments changed.\r\n        */ s_args: null,\n        /*\r\n        **\tIndicates if the route is active because of a past positive dispatch.\r\n        */ active: false,\n        /*\r\n        **\tIndicates if the params have changed since last event. Transition from inactive to active route will always set this value to true.\r\n        */ changed: false,\n        /*\r\n        **\tConstructor of the route, the specified argument is a route expression.\r\n        **\r\n        **\t>> void __ctor (string route);\r\n        */ __ctor: function(route) {\n            this._super.EventDispatcher.__ctor();\n            this._compileRoute(this.value = route);\n        },\n        /*\r\n        **\tTransforms the specified route expression into a regular expression and a set of parameter\r\n        **\tnames and stores them in the 'param' array.\r\n        **\r\n        **\t>> void _compileRoute (string route);\r\n        */ _compileRoute: function(route) {\n            this.params = [];\n            route = route.replace(/\\/\\*\\//g, \"/.+/\");\n            while(true){\n                var m = /:([!@A-Za-z0-9_-]+)/.exec(route);\n                if (!m) break;\n                route = route.replace(m[0], \"([^/]+)\");\n                this.params.push(m[1]);\n            }\n            this.routeRegex = \"^\" + route.replace(/##/g, \"\");\n        },\n        /*\r\n        **\tAdds a handler to the route dispatcher. The handler can be removed later using removeHandler and\r\n        **\tspecifying the same parameters. If unrouted boolean is specified the event to listen to will be\r\n        **\tthe unrouted event (when the route changes and the route is not activated).\r\n        **\r\n        **\tvoid addHandler (handler: function, unrouted: bool, context:object=null);\r\n        */ addHandler: function(handler, unrouted = false, context = null) {\n            this.addEventListener((unrouted === true ? \"un\" : \"\") + \"routed\", handler, context);\n        },\n        /*\r\n        **\tRemoves a handler from the route dispatcher.\r\n        **\r\n        **\tvoid removeHandler (handler: function, unrouted: bool, context: object=null);\r\n        */ removeHandler: function(handler, unrouted = false, context = null) {\n            this.removeEventListener((unrouted === true ? \"un\" : \"\") + \"routed\", handler, context);\n        },\n        /*\r\n        **\tVerifies if the specified route matches the internal route and if so dispatches a (depends on doUnroute parameter) \"routed\" or \"unrouted\" event with the\r\n        **\tparameters obtained from the location to all attached handlers.\r\n        **\r\n        **\tvoid dispatch (route:string, doUnroute:bool);\r\n        */ dispatch: function(route) {\n            var matches = route.match(this.routeRegex);\n            if (!matches) {\n                this.s_args = null;\n                if (this.active) this.dispatchEvent(\"unrouted\", {\n                    route: this\n                });\n                this.active = false;\n                return;\n            }\n            var args = {\n                route: this\n            };\n            var str = \"\";\n            for(var i = 0; i < this.params.length; i++){\n                args[this.params[i]] = matches[i + 1];\n                str += \"_\" + matches[i + 1];\n            }\n            this.changed = str != this.s_args;\n            this.s_args = str;\n            this.dispatchEvent(\"routed\", this.args = args);\n            this.active = true;\n        }\n    }),\n    /*\r\n    **\tMap with route objects. The key of the map is the route and the value a handler.\r\n    */ routes: {},\n    /*\r\n    **\tSorted list of routes. Smaller routes are processed first than larger ones. This array stores\r\n    **\tonly the keys to the Router.routes map.\r\n    */ sortedRoutes: [],\n    /*\r\n    **\tIndicates the number of times the onLocationChanged handler should ignore the hash change event.\r\n    */ ignoreHashChangeEvent: 0,\n    /*\r\n    **\tCurrent relative location (everything after the location hash symbol).\r\n    */ location: \"\",\n    /*\r\n    **\tCurrent relative location as an array of elements (obtained by splitting the location by slash).\r\n    */ args: [],\n    /*\r\n    **\tInitializes the router module. Ensure to call `refresh` once to force a hashchange when the page loads.\r\n    */ init: function() {\n        if (this.alreadyAttached) return;\n        this.alreadyAttached = true;\n        if (\"onhashchange\" in globalThis) {\n            globalThis.onhashchange = this.onLocationChanged.bind(this);\n            this.location = globalThis.location.hash.substring(1);\n            this.args = this.location.split(\"/\");\n        }\n    },\n    /*\r\n    **\tRefreshes the current route by forcing a hashchange event.\r\n    */ refresh: function() {\n        this.onLocationChanged();\n    },\n    /*\r\n    **\tChanges the current location and optionally prevents a trigger of the hashchange event.\r\n    */ setRoute: function(route, silent) {\n        var location = this.realLocation(route);\n        if (location == this.location) return;\n        if (silent) this.ignoreHashChangeEvent++;\n        globalThis.location.hash = location;\n    },\n    /*\r\n    **\tAdds the specified route to the routing map. When the specified route is detected, the `onRoute` handler will be called, and then\r\n    **\twhen the route exits `onUnroute` will be called.\r\n    */ addRoute: function(route, onRoute, onUnroute = null) {\n        if (!this.routes[route]) {\n            this.routes[route] = new this.Route(route);\n            this.sortedRoutes.push(route);\n            this.sortedRoutes.sort((a, b)=>{\n                return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\n            });\n        }\n        if (onUnroute !== null) {\n            this.routes[route].addHandler(onRoute, false);\n            this.routes[route].addHandler(onUnroute, true);\n        } else this.routes[route].addHandler(onRoute, false);\n        return this.routes[route];\n    },\n    /*\r\n    **\tReturns the Route object for the specified route.\r\n    */ getRoute: function(route) {\n        if (!this.routes[route]) {\n            this.routes[route] = new this.Route(route);\n            this.sortedRoutes.push(route);\n            this.sortedRoutes.sort((a, b)=>{\n                return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\n            });\n        }\n        return this.routes[route];\n    },\n    /*\r\n    **\tAdds the specified routes to the routing map. The routes map should contain the route expression\r\n    **\tin the key of the map and a handler function in the value.\r\n    */ addRoutes: function(routes) {\n        for(var i in routes){\n            if (!this.routes[i]) {\n                this.routes[i] = new this.Route(i);\n                this.sortedRoutes.push(i);\n            }\n            this.routes[i].addHandler(routes[i], false);\n        }\n        this.sortedRoutes.sort((a, b)=>{\n            return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\n        });\n    },\n    /*\r\n    **\tRemoves the specified route from the routing map.\r\n    */ removeRoute: function(route, onRoute, onUnroute) {\n        if (!this.routes[route]) return;\n        if (onUnroute !== undefined) {\n            this.routes[route].removeHandler(onRoute, false);\n            this.routes[route].removeHandler(onUnroute, true);\n        } else this.routes[route].removeHandler(onRoute);\n    },\n    /*\r\n    **\tRemoves the specified routes from the routing map. The routes map should contain the route\r\n    **\texpression in the key of the map and a handler function in the value.\r\n    */ removeRoutes: function(routes) {\n        for(var i in routes){\n            if (!this.routes[i]) continue;\n            this.routes[i].removeHandler(routes[i]);\n        }\n    },\n    /*\r\n    **\tGiven a formatted location and a previous one it will return the correct real location.\r\n    */ realLocation: function(cLocation, pLocation) {\n        if (!pLocation) pLocation = this.location;\n        if (!pLocation) pLocation = \" \";\n        var state = 0, i = 0, j = 0, k;\n        var rLocation = \"\";\n        while(state != -1 && i < cLocation.length && j < pLocation.length)switch(state){\n            case 0:\n                if (cLocation.substr(i++, 1) == \"*\") {\n                    state = 1;\n                    break;\n                }\n                if (cLocation.substr(i - 1, 1) != pLocation.substr(j++, 1)) {\n                    rLocation += cLocation.substr(i - 1);\n                    state = -1;\n                    break;\n                }\n                rLocation += pLocation.substr(j - 1, 1);\n                break;\n            case 1:\n                if (cLocation.substr(i, 1) == \"*\") {\n                    state = 3;\n                    i++;\n                    break;\n                }\n                state = 2;\n                break;\n            case 2:\n                k = pLocation.indexOf(cLocation.substr(i, 1), j);\n                if (k == -1) {\n                    rLocation += pLocation.substr(j) + cLocation.substr(i);\n                    state = -1;\n                    break;\n                }\n                rLocation += pLocation.substr(j, k - j);\n                state = 0;\n                j = k;\n                break;\n            case 3:\n                k = pLocation.lastIndexOf(cLocation.substr(i, 1));\n                if (k == -1) {\n                    rLocation += cLocation.substr(i);\n                    state = -1;\n                    break;\n                }\n                rLocation += pLocation.substr(j, k - j);\n                state = 0;\n                j = k;\n                break;\n        }\n        if (state != -1) rLocation += cLocation.substr(i);\n        return rLocation.trim();\n    },\n    /*\r\n    **\tEvent handler called when the location hash changes.\r\n    */ onLocationChanged: function() {\n        var cLocation = globalThis.location.hash.substring(1);\n        var rLocation = this.realLocation(cLocation);\n        if (cLocation !== rLocation) {\n            globalThis.location.replace(\"#\" + rLocation);\n            return;\n        }\n        this.location = cLocation;\n        this.args = this.location.split(\"/\");\n        if (this.ignoreHashChangeEvent > 0) {\n            this.ignoreHashChangeEvent--;\n            return;\n        }\n        for(var i = 0; i < this.sortedRoutes.length; i++)this.routes[this.sortedRoutes[i]].dispatch(this.location);\n    },\n    /*\r\n    **\tNavigates to the given hash-based URL.\r\n    */ navigate: function(location, replace = false) {\n        location = this.realLocation(location);\n        if (globalThis.location.hash == \"#\" + location) {\n            this.refresh();\n            return;\n        }\n        if (replace) globalThis.location.replace(\"#\" + location);\n        else globalThis.location.hash = location;\n    }\n};\n$7718a52dfca15325$var$_Router.init();\nvar $7718a52dfca15325$export$2e2bcd8739ae039 = $7718a52dfca15325$var$_Router;\n\n\n\n\n/**\n * Map containing the original prototypes for all registered elements.\n */ const $5808f050ebbd5b77$var$elementPrototypes = {};\n/**\n * Map containing the final classes for all registered elements.\n */ const $5808f050ebbd5b77$var$elementClasses = {};\n/**\n * Base class for custom elements. Provides support for model-triggered events, easy definition of handlers for events originated in\n * self or child-elements, and several utility methods.\n */ const $5808f050ebbd5b77$var$Element = {\n    /**\n     * Internal element ID. Added as namespace to model events. Ensures that certain model events are run locally only, not affecting other event handlers.\n     */ eid: null,\n    /**\n     * Indicates if the element is a root element, that is, the target element to attach child elements having `data-ref` attribute.\n     */ isRoot: false,\n    /**\n     * Root element to which this element is attached (when applicable).\n     */ root: null,\n    /**\n     * Indicates ready-state of the element. Possible values are: 0: \"Not ready\", 1: \"Children Initialized\", and 2: \"Parent Ready\".\n     */ isReady: 0,\n    readyReenter: 0,\n    readyLocked: 0,\n    /**\n     * Model type (class) for the element's model.\n     */ modelt: (0, $k7heJ$Model),\n    /**\n     * Data model related to the element.\n     */ model: null,\n    /**\n     * Contents of the element. When set, the innerHTML will be set to this value.\n     */ contents: null,\n    /**\n     * \tEvents map.\n     */ events: {\n        \"mousedown [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (evt.source._long_press) return;\n            let elem = evt.source;\n            elem._long_press = setTimeout(()=>{\n                let dx = elem._pos_fx - elem._pos_sx;\n                let dy = elem._pos_fy - elem._pos_sy;\n                elem._long_press = null;\n                let d = Math.sqrt(dx * dx + dy * dy);\n                if (d < 5) {\n                    elem._long_press = false;\n                    this.dispatchOn(elem, \"long-press\");\n                }\n            }, 500);\n            elem._pos_sx = evt.clientX;\n            elem._pos_sy = evt.clientY;\n            elem._pos_fx = evt.clientX;\n            elem._pos_fy = evt.clientY;\n        },\n        \"mousemove [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (!evt.source._long_press) return;\n            evt.source._pos_fx = evt.clientX;\n            evt.source._pos_fy = evt.clientY;\n        },\n        \"touchstart [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (evt.source._long_press) return;\n            let elem = evt.source;\n            elem._long_press = setTimeout(()=>{\n                let dx = elem._pos_fx - elem._pos_sx;\n                let dy = elem._pos_fy - elem._pos_sy;\n                elem._long_press = null;\n                let d = Math.sqrt(dx * dx + dy * dy);\n                if (d < 5) {\n                    elem._long_press = false;\n                    this.dispatchOn(elem, \"long-press\");\n                }\n            }, 500);\n            elem._pos_sx = evt.touches[0].clientX;\n            elem._pos_sy = evt.touches[0].clientY;\n            elem._pos_fx = evt.touches[0].clientX;\n            elem._pos_fy = evt.touches[0].clientY;\n        },\n        \"touchmove [data-long-press]\": function(evt) {\n            evt.continuePropagation = true;\n            if (!evt.source._long_press) return;\n            evt.source._pos_fx = evt.touches[0].clientX;\n            evt.source._pos_fy = evt.touches[0].clientY;\n        },\n        \"mouseup [data-long-press]\": function(evt) {\n            if (evt.source._long_press === false) return;\n            if (evt.source._long_press) {\n                clearTimeout(evt.source._long_press);\n                evt.source._long_press = null;\n            }\n            evt.continuePropagation = true;\n        },\n        \"touchend [data-long-press]\": function(evt) {\n            if (evt.source._long_press === false) return;\n            if (evt.source._long_press) {\n                clearTimeout(evt.source._long_press);\n                evt.source._long_press = null;\n            }\n            evt.continuePropagation = true;\n        },\n        \"click [data-action]\": function(evt) {\n            if (evt.source._long_press === false) return;\n            let opts = evt.source.dataset.action.split(\" \");\n            if (opts[0] in this) this[opts[0]]({\n                ...evt.params,\n                ...evt.source.dataset,\n                ...opts,\n                length: opts.length\n            }, evt);\n            else evt.continuePropagation = true;\n        },\n        \"long-press [data-long-press]\": function(evt) {\n            let opts = evt.source.dataset.longPress.split(\" \");\n            if (opts[0] in this) this[opts[0]]({\n                ...evt.params,\n                ...evt.source.dataset,\n                ...opts,\n                length: opts.length\n            }, evt);\n            else evt.continuePropagation = true;\n        },\n        \"keyup(13) input[data-enter]\": function(evt) {\n            let opts = evt.source.dataset.enter.split(\" \");\n            if (opts[0] in this) this[opts[0]]({\n                ...evt.params,\n                ...evt.source.dataset,\n                ...opts,\n                length: opts.length\n            }, evt);\n            else evt.continuePropagation = true;\n        }\n    },\n    /**\n     * Internal routes map, set by `bindRoutes`.\n     */ routes: null,\n    /**\n     * \tElement constructor.\n     */ __ctor: function() {\n        this._list_watch = [];\n        this._list_visible = [];\n        this._list_attr = [];\n        this._list_property = [];\n        if (\"root\" in this.dataset) this.isRoot = this.dataset.root === \"true\";\n        this.style.display = \"block\";\n        this.eid = Math.random().toString().substr(2);\n        if (this.model != null) {\n            let tmp = this.model;\n            this.model = null;\n            this.setModel(tmp, false);\n        }\n        Object.keys(this._super).reverse().forEach((i)=>{\n            if (\"init\" in this._super[i]) this._super[i].init();\n        });\n        if ($5808f050ebbd5b77$var$Element.debug) console.log(\">> \" + this.tagName + \" INIT ON \" + this.parentElement.tagName);\n        this.init();\n        if (this.events) this.bindEvents(this.events);\n        if (this.contents) this.setInnerHTML(this.contents);\n        setTimeout(()=>{\n            if (this.tagName.toLowerCase() !== \"r-dom-probe\") this.appendChild(document.createElement(\"r-dom-probe\"));\n            else this.markReady();\n        }, 0);\n    },\n    /**\n     * \tInitializes the element. Called after construction of the instance.\n     */ init: function() {},\n    /**\n     * \tExecuted when the children of the element are ready.\n     */ ready: function() {},\n    /**\n     * \tExecuted after ready and after the root is also ready.\n     */ rready: function() {},\n    /**\n     * \tMarks the element as ready.\n     */ markReady: function(list = null) {\n        this.readyLocked++;\n        if (!this.isReady) {\n            this.isReady = 1;\n            // Set model is `model` property was set in the element.\n            if (\"model\" in this.dataset) {\n                let ref = this.getFieldByPath(this.dataset.model);\n                if (ref) this.setModel(ref);\n            }\n            // Run ready methods in class hierarchy.\n            Object.keys(this._super).reverse().forEach((i)=>{\n                if (\"ready\" in this._super[i]) this._super[i].ready();\n            });\n            if ($5808f050ebbd5b77$var$Element.debug) console.log(\">> \" + this.tagName + \" READY\");\n            this.ready();\n            if (this.onready) this.onready(this);\n            this.collectWatchers();\n        } else this.collectWatchers();\n        let root = this.findCustomParent(this);\n        if ($5808f050ebbd5b77$var$Element.debug) console.log(this.tagName + \" ROOT IS \" + (root ? root.tagName : \"NULL\"));\n        if (root && root.isReady === 0 && this.isReady != 0) root.checkReady();\n        let rootReady = false;\n        if (root && root.isReady === 2 && this.isReady !== 2) {\n            this.getRoot();\n            if (this.root && this.dataset.ref) {\n                if ($5808f050ebbd5b77$var$Element.debug) console.log(this.tagName + \" REF AS `\" + this.dataset.ref + \"` ON \" + this.root.tagName);\n                this.root[this.dataset.ref] = this;\n                this.root.onRefAdded(this.dataset.ref, this);\n            }\n            rootReady = true;\n        }\n        if (!root && this.isReady !== 2) rootReady = true;\n        if (rootReady) {\n            this.isReady = 2;\n            if (list !== null) for (let elem of list)elem.checkReady();\n            if ($5808f050ebbd5b77$var$Element.debug) console.log(\">> \" + this.tagName + \" RREADY\");\n            Object.keys(this._super).reverse().forEach((i)=>{\n                if (\"rready\" in this._super[i]) this._super[i].rready();\n            });\n            this.rready();\n            if (this.onrootready) this.onrootready(this);\n        }\n        this.readyLocked--;\n        if (this.readyReenter && !this.readyLocked) {\n            this.readyReenter = false;\n            this.checkReady();\n        }\n        if (this.tagName.toLowerCase() === \"r-dom-probe\") this.remove();\n    },\n    /**\n     *\tChecks if all children are ready and fires the appropriate function (`ready` and/or `rready`).\n     */ checkReady: function() {\n        if (this.childNodes.length == 0) return;\n        if (this.readyLocked) {\n            this.readyReenter = true;\n            return;\n        }\n        let isReady = true;\n        let list = [];\n        let result = document.evaluate(\".//*[contains(name(),'-')]\", this, null, XPathResult.ANY_TYPE, null);\n        if ($5808f050ebbd5b77$var$Element.debug) console.log(\"# CHECKING \" + this.tagName);\n        while(true){\n            let elem = result.iterateNext();\n            if (!elem) break;\n            if (elem === this) continue;\n            let root = this.findCustomParent(elem);\n            if (root !== this) continue;\n            if ($5808f050ebbd5b77$var$Element.debug) console.log(\"   \" + elem.tagName + \" = \" + elem.isReady);\n            if (!elem.isReady) isReady = false;\n            list.push(elem);\n        }\n        if (!isReady) return;\n        this.markReady(list);\n    },\n    /**\n     * \tReturns the value of a field given its path. Starts from `global`, unless the first item in the path is `this`, in which case it will start from the element.\n     */ getFieldByPath: function(path) {\n        if (!path) return null;\n        if (typeof path !== \"string\") return path;\n        let tmp = path.split(\".\");\n        let ref = $parcel$global;\n        if (tmp.length && tmp[0] == \"this\") {\n            ref = this;\n            tmp.shift();\n        }\n        if (tmp.length && tmp[0] == \"root\") {\n            ref = this.getRoot();\n            tmp.shift();\n        }\n        while(ref != null && tmp.length != 0)ref = ref[tmp.shift()];\n        return ref;\n    },\n    /**\n     * \tReturns the root of the element (that is, the `root` property). If not set it will attempt to find the root first.\n     */ getRoot: function() {\n        return this.root ? this.root : this.root = this.findRoot();\n    },\n    /**\n     * \tSets the model of the element and executes the `modelChanged` event handler (unless `update` is set to false).\n     */ setModel: function(model, update = true) {\n        if (!model) return this;\n        model = (0, $k7heJ$Rinn).ensureTypeOf(this.modelt, model);\n        if (this.model !== model) {\n            if (this.model != null) {\n                this.model.removeEventListener(this.eid + \":modelChanged\", this.onModelPreChanged, this);\n                this.model.removeEventListener(this.eid + \":propertyChanging\", this.onModelPropertyChanging, this);\n                this.model.removeEventListener(this.eid + \":propertyChanged\", this.onModelPropertyPreChanged, this);\n                this.model.removeEventListener(this.eid + \":propertyRemoved\", this.onModelPropertyRemoved, this);\n            }\n            this.model = model;\n            this.model.addEventListener(this.eid + \":modelChanged\", this.onModelPreChanged, this);\n            this.model.addEventListener(this.eid + \":propertyChanging\", this.onModelPropertyChanging, this);\n            this.model.addEventListener(this.eid + \":propertyChanged\", this.onModelPropertyPreChanged, this);\n            this.model.addEventListener(this.eid + \":propertyRemoved\", this.onModelPropertyRemoved, this);\n        }\n        if (update !== false) this.model.setNamespace(this.eid).update(true).setNamespace(null);\n        return this;\n    },\n    /**\n     * \tReturns the model of the element. Added for symmetry only, exactly the same as accesing public property `model` of this class.\n     */ getModel: function() {\n        return this.model;\n    },\n    /**\n     * \tAdds one or more CSS classes (separated by space) to the element.\n     */ addClass: function(classString) {\n        if (!classString) return this;\n        classString.split(\" \").forEach((i)=>{\n            i = i.trim();\n            if (!i) return;\n            if (i[0] == \"-\" || i[0] == \"+\") this.classList[i[0] == \"-\" ? \"remove\" : \"add\"](i.substr(1));\n            else this.classList.add(i);\n        });\n        return this;\n    },\n    /**\n     * \tRemoves one or more CSS classes (separated by space) from the element.\n     */ removeClass: function(classString) {\n        if (!classString) return this;\n        classString.split(\" \").forEach((i)=>{\n            i = i.trim();\n            if (!i) return;\n            if (i[0] == \"-\" || i[0] == \"+\") this.classList[i[0] == \"-\" ? \"remove\" : \"add\"](i.substr(1));\n            else this.classList.remove(i);\n        });\n        return this;\n    },\n    /**\n     * \tSets one or more style properties to the element (separated by semi-colon).\n     */ setStyle: function(styleString) {\n        if (!styleString) return this;\n        styleString.split(\";\").forEach((i)=>{\n            let j = (i = i.trim()).indexOf(\":\");\n            if (j == -1) return;\n            let name = i.substr(0, j).trim();\n            for(let k = name.indexOf(\"-\"); k != -1; k = name.indexOf(\"-\"))name = name.substr(0, k) + name.substr(k + 1, 1).toUpperCase() + name.substr(k + 2);\n            this.style[name] = i.substr(j + 1).trim();\n        });\n        return this;\n    },\n    /**\n     * \tReturns the width of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n     */ getWidth: function(elem = null) {\n        return (elem || this).getBoundingClientRect().width;\n    },\n    /**\n     * \tReturns the height of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n     */ getHeight: function(elem = null) {\n        return (elem || this).getBoundingClientRect().height;\n    },\n    /**\n    **\tBinds all events in the specified map to the element, the events map can have one of the following forms:\n    **\n    **\t\t\"click .button\": \"doSomething\",\t\t(Delegated Event)\n    **\t\t\"click .button\": function() { },\t(Delegated Event)\n    **\t\t\"myevt &this\": \"...\",\t\t\t\t(Self Event)\n    **\t\t\"myevt\": \"...\",\t\t\t\t\t\t(Element Event)\n    **\t\t\"myevt @objName\": \"...\",\t\t\t(EventDispatcher Event)\n    **\t\t\"#propname\": \"...\",\t\t\t\t\t(Property Changed Event)\n    **\t\t\"keyup(10) .input\": \"...\"\t\t\t(Delegated Event with Parameters)\n    **\n    **\t>> Element bindEvents (object events);\n    */ bindEvents: function(events) {\n        for(let evtstr in events){\n            let hdl = events[evtstr];\n            if ((0, $k7heJ$Rinn).typeOf(hdl) == \"string\") hdl = this[hdl];\n            hdl = hdl.bind(this);\n            var i = evtstr.indexOf(\" \");\n            var name = i == -1 ? evtstr : evtstr.substr(0, i);\n            var selector = i == -1 ? \"\" : evtstr.substr(i + 1);\n            let args = null;\n            var j = name.indexOf(\"(\");\n            if (j != -1) {\n                args = name.substr(j + 1, name.length - j - 2).split(\",\");\n                name = name.substr(0, j);\n            }\n            if (selector[0] == \"@\") {\n                if (selector != \"@this\") {\n                    this[selector.substr(1)].addEventListener(name, hdl);\n                    continue;\n                }\n                selector = this;\n            } else if (selector[0] == \"&\") {\n                if (selector != \"&this\") selector = \"[data-ref='\" + selector.substr(1) + \"']\";\n                else selector = this;\n            }\n            if (name.substr(0, 1) == \"#\") {\n                this.listen(\"propertyChanged.\" + name.substr(1), this, hdl);\n                continue;\n            }\n            if (args != null) switch(name){\n                case \"keyup\":\n                case \"keydown\":\n                    this.listen(name, selector, function(evt) {\n                        if ((0, $k7heJ$Rinn).indexOf(args, evt.keyCode.toString()) != -1) return hdl(evt, args);\n                        evt.continuePropagation = true;\n                    });\n                    continue;\n            }\n            this.listen(name, selector, hdl);\n        }\n        return this;\n    },\n    /**\n    **\tBinds all routes in the specified map to the Router object.\n    **\n    **\t\t\"route-path\": \"doSomething\"\t\t\t\t\t\tOn-Route\n    **\t\t\"route-path\": function (evt, args) { }\t\t\tOn-Route\n    **\t\t\"!route-path\": \"doSomething\"\t\t\t\t\tOn-UnRoute\n    **\t\t\"!route-path\": function (evt, args) { }\t\t\tOn-UnRoute\n    **\n    **\t>> Element bindRoutes ();\n    */ bindRoutes: function() {\n        if (!this.routes) return;\n        for(let routeStr in this.routes){\n            let route = routeStr[0] === \"!\" ? (0, $7718a52dfca15325$export$2e2bcd8739ae039).getRoute(routeStr.substr(1)) : (0, $7718a52dfca15325$export$2e2bcd8739ae039).getRoute(routeStr);\n            let handler = this.routes[routeStr];\n            if ((0, $k7heJ$Rinn).typeOf(handler) === \"string\") handler = this[handler];\n            if (routeStr[0] === \"!\") route.addHandler(handler, true, this);\n            else route.addHandler(handler, false, this);\n        }\n    },\n    /**\n     * Unbinds all routes added by bindRoutes.\n     */ unbindRoutes: function() {\n        if (!this.routes) return;\n        for(let routeStr in this.routes){\n            let route = routeStr[0] === \"!\" ? (0, $7718a52dfca15325$export$2e2bcd8739ae039).getRoute(routeStr.substr(1)) : (0, $7718a52dfca15325$export$2e2bcd8739ae039).getRoute(routeStr);\n            let handler = this.routes[routeStr];\n            if ((0, $k7heJ$Rinn).typeOf(handler) === \"string\") handler = this[handler];\n            if (routeStr[0] === \"!\") route.removeHandler(handler, true, this);\n            else route.removeHandler(handler, false, this);\n        }\n    },\n    /**\n    **\tExecutes the underlying event handler given an event and a selector. Called internally by listen().\n    **\n    **\t>> void _eventHandler (event evt, string selector, function handler);\n    */ _eventHandler: function(evt, selector, handler) {\n        if (evt.continuePropagation === false) return;\n        evt.continuePropagation = true;\n        evt.source = evt.target;\n        if (selector && selector instanceof HTMLElement) {\n            if (evt.source === selector) {\n                evt.continuePropagation = false;\n                if (handler.call(this, evt, evt.detail) === true) evt.continuePropagation = true;\n            }\n        } else if (selector && selector != \"*\") {\n            let elems = this.querySelectorAll(selector);\n            while(evt.source !== this){\n                let i = (0, $k7heJ$Rinn).indexOf(elems, evt.source, true);\n                if (i !== -1) {\n                    evt.continuePropagation = false;\n                    if (handler.call(this, evt, evt.detail) === true) evt.continuePropagation = true;\n                    break;\n                } else evt.source = evt.source.parentElement;\n            }\n        } else {\n            evt.continuePropagation = false;\n            if (handler.call(this, evt, evt.detail) === true) evt.continuePropagation = true;\n        }\n        if (evt.continuePropagation === false) {\n            evt.preventDefault();\n            evt.stopPropagation();\n        }\n    },\n    /**\n    **\tListens for an event on elements matching the specified selector, returns an object with a single method `remove` used\n    **\tto remove the listener when it is no longer needed.\n    **\n    **\t>> object listen (string eventName, string selector, function handler);\n    **\t>> object listen (string eventName, function handler);\n    */ listen: function(eventName, selector, handler) {\n        let eventCatcher = false;\n        let eventImmediate = false;\n        if ((0, $k7heJ$Rinn).typeOf(selector) == \"function\") {\n            handler = selector;\n            selector = null;\n        }\n        if (eventName[eventName.length - 1] == \"!\") {\n            eventName = eventName.substr(0, eventName.length - 1);\n            eventCatcher = true;\n        }\n        if (eventName[0] == \"!\") {\n            eventName = eventName.substr(1);\n            eventImmediate = true;\n        }\n        let callback0 = null;\n        let callback1 = null;\n        let self = this;\n        this.addEventListener(eventName, callback0 = (evt)=>{\n            if (evt.continuePropagation === false) return;\n            if (!evt.firstCapture) {\n                evt.firstCapture = this;\n                evt.firstCaptureCount = 0;\n                evt.queue = [];\n            }\n            if (evt.firstCapture === this) evt.firstCaptureCount++;\n            if (eventCatcher == true) evt.queue.push([\n                this,\n                selector,\n                handler\n            ]);\n            if (eventImmediate == true) this._eventHandler(evt, selector, handler);\n        }, true);\n        this.addEventListener(eventName, callback1 = (evt)=>{\n            if (evt.continuePropagation === false) return;\n            if (eventCatcher != true && eventImmediate != true) this._eventHandler(evt, selector, handler);\n            if (evt.firstCapture === this && evt.continuePropagation !== false) {\n                if (--evt.firstCaptureCount == 0) {\n                    while(evt.queue.length){\n                        let q = evt.queue.pop();\n                        q[0]._eventHandler(evt, q[1], q[2]);\n                    }\n                    evt.continuePropagation = false;\n                }\n            }\n        }, false);\n        return {\n            removed: false,\n            remove: function() {\n                if (this.removed) return;\n                this.removed = true;\n                self.removeEventListener(eventName, callback0, true);\n                self.removeEventListener(eventName, callback1, false);\n            }\n        };\n    },\n    /**\n    **\tCreates an event object for later dispatch.\n    */ createEventObject: function(eventName, args, bubbles) {\n        let evt;\n        if (eventName == \"click\") evt = new MouseEvent(eventName, {\n            bubbles: bubbles,\n            detail: args\n        });\n        else evt = new CustomEvent(eventName, {\n            bubbles: bubbles,\n            detail: args\n        });\n        return evt;\n    },\n    /**\n    **\tDispatches a new event with the specified name and the given arguments.\n    */ dispatch: function(eventName, args = null, bubbles = true) {\n        let propName = \"on\" + eventName.toLowerCase();\n        if (propName in this) {\n            this[propName](args, this);\n            return this;\n        }\n        this.dispatchEvent(this.createEventObject(eventName, args, bubbles));\n        return this;\n    },\n    /**\n    **\tDispatches a new event on the specified element with the given name and arguments (uses `CustomEvent`).\n    */ dispatchOn: function(elem, eventName, args = null, bubbles = true) {\n        elem.dispatchEvent(this.createEventObject(eventName, args, bubbles));\n        return this;\n    },\n    /**\n    **\tSets the innerHTML property of the element and runs some post set-content tasks.\n    */ setInnerHTML: function(value) {\n        this.readyLocked++;\n        this.innerHTML = value;\n        this.readyLocked--;\n        return this;\n    },\n    /**\n    **\tCollects all watchers (data-watch, data-visible, data-attr, data-property), that depend on the model, should be invoked when the\n    **  structure of the element changed (added/removed children). This is automatically called when the setInnerHTML method is called.\n    **\n    **\tNote that for 3rd party libs that add children to this element (which could probably have a watcher) will possibly result in\n    **\tduplication of the added elements when compiling the innerHTML template. To prevent this add the 'pseudo' CSS class to any\n    **\telement that should not be added to the HTML template.\n    **\n    **\t>> void collectWatchers ();\n    */ collectWatchers: function() {\n        let self = this;\n        let modified = false;\n        let list;\n        if (!this.isRoot) return;\n        let _list_watch_length = this._list_watch.length;\n        let _list_visible_length = this._list_visible.length;\n        let _list_attr_length = this._list_attr.length;\n        let _list_property_length = this._list_property.length;\n        /* *** */ list = this.querySelectorAll(\"[data-watch]\");\n        for(let i = 0; i < list.length; i++){\n            for (let j of list[i].querySelectorAll(\".pseudo\"))j.remove();\n            list[i]._template = (0, $k7heJ$Template).compile(list[i].innerHTML);\n            list[i]._watch = new RegExp(\"^(\" + list[i].dataset.watch + \")$\");\n            list[i].innerHTML = \"\";\n            list[i].removeAttribute(\"data-watch\");\n            this._list_watch.push(list[i]);\n        }\n        if (\"selfWatch\" in this.dataset) {\n            for (let j of this.querySelectorAll(\".pseudo\"))j.remove();\n            this._template = (0, $k7heJ$Template).compile(this.innerHTML);\n            this._watch = new RegExp(\"^(\" + this.dataset.selfWatch + \")$\");\n            this.innerHTML = \"\";\n            this.removeAttribute(\"data-self-watch\");\n            this._list_watch.push(this);\n        }\n        /* *** */ list = this.querySelectorAll(\"[data-visible]\");\n        for(let i = 0; i < list.length; i++){\n            list[i]._visible = (0, $k7heJ$Template).compile(list[i].dataset.visible);\n            list[i].removeAttribute(\"data-visible\");\n            this._list_visible.push(list[i]);\n        }\n        if (\"selfVisible\" in this.dataset) {\n            this._visible = (0, $k7heJ$Template).compile(this.dataset.selfVisible);\n            this.removeAttribute(\"data-self-visible\");\n            this._list_visible.push(this);\n        }\n        /* *** */ list = this.querySelectorAll(\"[data-attr]\");\n        for(let i = 0; i < list.length; i++){\n            list[i]._attr = [];\n            for (let j of list[i].dataset.attr.split(\";\")){\n                j = j.split(\":\");\n                if (j.length != 2) continue;\n                list[i]._attr.push({\n                    name: j[0].trim(),\n                    value: (0, $k7heJ$Template).compile(j[1].trim())\n                });\n            }\n            list[i].removeAttribute(\"data-attr\");\n            this._list_attr.push(list[i]);\n        }\n        if (\"selfAttr\" in this.dataset) {\n            this._attr = [];\n            for (let j of this.dataset.selfAttr.split(\";\")){\n                j = j.split(\":\");\n                if (j.length != 2) continue;\n                this._attr.push({\n                    name: j[0].trim(),\n                    value: (0, $k7heJ$Template).compile(j[1].trim())\n                });\n            }\n            this.removeAttribute(\"data-self-attr\");\n            this._list_attr.push(this);\n        }\n        /* *** */ list = this.querySelectorAll(\"[data-property]\");\n        for(let i = 0; i < list.length; i++){\n            list[i].onchange = list[i].onblur = function() {\n                switch(this.type){\n                    case \"radio\":\n                        if (this.checked) self.getModel().set(this.name, this.value);\n                        break;\n                    case \"checkbox\":\n                        self.getModel().set(this.name, this.checked ? \"1\" : \"0\");\n                        break;\n                    case \"field\":\n                        self.getModel().set(this.name, this.getValue());\n                        break;\n                    default:\n                        self.getModel().set(this.name, this.value);\n                        break;\n                }\n            };\n            if (list[i].tagName == \"SELECT\") list[i].onmouseup = function() {\n                self.getModel().set(this.name, this.value);\n            };\n            list[i].name = list[i].dataset.property;\n            list[i].removeAttribute(\"data-property\");\n            this._list_property.push(list[i]);\n        }\n        if (\"selfProperty\" in this.dataset) {\n            this.onchange = this.onblur = function() {\n                switch(this.type){\n                    case \"radio\":\n                        if (this.checked) self.getModel().set(this.name, this.value);\n                        break;\n                    case \"checkbox\":\n                        self.getModel().set(this.name, this.checked ? \"1\" : \"0\");\n                        break;\n                    case \"field\":\n                        self.getModel().set(this.name, this.getValue());\n                        break;\n                    default:\n                        self.getModel().set(this.name, this.value);\n                        break;\n                }\n            };\n            if (this.tagName == \"SELECT\") this.onmouseup = function() {\n                self.getModel().set(this.name, this.value);\n            };\n            this.name = this.dataset.selfProperty;\n            this.removeAttribute(\"data-self-property\");\n            this._list_property.push(this);\n        }\n        /* *** */ this._list_watch = this._list_watch.filter((i)=>i.parentElement != null);\n        if (_list_watch_length != this._list_watch.length) modified = true;\n        this._list_visible = this._list_visible.filter((i)=>i.parentElement != null);\n        if (_list_visible_length != this._list_visible.length) modified = true;\n        this._list_attr = this._list_attr.filter((i)=>i.parentElement != null);\n        if (_list_attr_length != this._list_attr.length) modified = true;\n        this._list_property = this._list_property.filter((i)=>i.parentElement != null);\n        if (_list_property_length != this._list_property.length) modified = true;\n        if (this.model != null && modified) this.model.setNamespace(this.eid).update(true).setNamespace(null);\n    },\n    /**\n    **\tExecuted when the element is created and yet not attached to the DOM tree.\n    */ onCreated: function() {},\n    /**\n     * Executed when the element is attached to the DOM tree.\n     */ elementConnected: function() {\n        this.bindRoutes();\n        this.onConnected();\n    },\n    /**\n     * Executed when the element is no longer a part of the DOM tree.\n     */ elementDisconnected: function() {\n        this.unbindRoutes();\n    },\n    /**\n    **\tExecuted when the element is attached to the DOM tree.\n    */ onConnected: function() {\n        if (this.onconnected) this.onconnected(this);\n    },\n    /**\n    **\tExecuted when the element is no longer a part of the DOM tree.\n    */ onDisconnected: function() {\n        if (this.ondisconnected) this.ondisconnected(this);\n    },\n    /**\n    **\tExecuted on the root element when a child element has `data-ref` attribute and it was added to it.\n    */ onRefAdded: function(name, element) {},\n    /**\n    **\tExecuted on the root element when a child element has `data-ref` attribute and it was removed from it.\n    */ onRefRemoved: function(name, element) {},\n    /**\n    **\tEvent handler invoked when the model has changed, executed before onModelChanged() to update internal dependencies,\n    **\tshould not be overriden or elements watching the model will not be updated.\n    **\n    **\t>> void onModelPreChanged (evt, args);\n    */ onModelPreChanged: function(evt, args) {\n        let data = this.getModel().get();\n        for(let i = 0; i < this._list_watch.length; i++)for (let j of args.fields){\n            if (!this._list_watch[i]._watch.test(j)) continue;\n            this._list_watch[i].innerHTML = this._list_watch[i]._template(data);\n            break;\n        }\n        for(let i = 0; i < this._list_visible.length; i++)if (!!this._list_visible[i]._visible(data, \"arg\")) this._list_visible[i].style.removeProperty(\"display\");\n        else this._list_visible[i].style.setProperty(\"display\", \"none\", \"important\");\n        for(let i = 0; i < this._list_attr.length; i++)for (let j of this._list_attr[i]._attr)this._list_attr[i][j.name] = j.value(data, \"arg\");\n        this.onModelChanged(evt, args);\n    },\n    /**\n    **\tEvent handler invoked when the model has changed.\n    */ onModelChanged: function(evt, args) {},\n    /**\n    **\tEvent handler invoked when a property of the model is changing. Fields `name` and `value` can be found in the `args` object.\n    */ onModelPropertyChanging: function(evt, args) {},\n    /**\n    **\tEvent handler invoked when a property of the model has changed, executed before onModelPropertyChanged() to update internal\n    **\tdependencies. Automatically triggers internal events named `propertyChanged.<propertyName>` and `propertyChanged`.\n    **\tShould not be overriden or elements depending on the property will not be updated.\n    */ onModelPropertyPreChanged: function(evt, args) {\n        for(let i = 0; i < this._list_property.length; i++)if (this._list_property[i].name == args.name) {\n            let trigger = true;\n            switch(this._list_property[i].type){\n                case \"radio\":\n                    if (this._list_property[i].value != args.value) {\n                        this._list_property[i].parentElement.classList.remove(\"active\");\n                        continue;\n                    }\n                    this._list_property[i].checked = true;\n                    this._list_property[i].parentElement.classList.add(\"active\");\n                    break;\n                case \"checkbox\":\n                    if (~~args.value) {\n                        this._list_property[i].checked = true;\n                        this._list_property[i].parentElement.classList.add(\"active\");\n                    } else {\n                        this._list_property[i].checked = false;\n                        this._list_property[i].parentElement.classList.remove(\"active\");\n                    }\n                    break;\n                case \"field\":\n                    this._list_property[i].val = this._list_property[i].dataset.value = args.value;\n                    this._list_property[i].setValue(args.value);\n                    trigger = false;\n                    break;\n                default:\n                    this._list_property[i].value = args.value;\n                    this._list_property[i].val = this._list_property[i].dataset.value = args.value;\n                    if (this._list_property[i].value != args.value) trigger = false;\n                    break;\n            }\n            if (trigger && this._list_property[i].onchange) this._list_property[i].onchange();\n        }\n        this.dispatch(\"propertyChanged.\" + args.name, args, false);\n        this.dispatch(\"propertyChanged\", args, false);\n        this.onModelPropertyChanged(evt, args);\n    },\n    /**\n    **\tEvent handler invoked when a property of the model has changed.\n    */ onModelPropertyChanged: function(evt, args) {},\n    /**\n    **\tEvent handler invoked when a property of the model is removed. Field `name` can be found in the `args` object.\n    */ onModelPropertyRemoved: function(evt, args) {},\n    /*\n    **\tRuns the following preparation procedures on the specified prototype:\n    **\t\t- All functions named 'event <event-name> [event-selector]' will be moved to the 'events' map.\n    **\t\t- All functions named 'route <route-path>' will be moved to the 'routes' map.\n    **\n    **\t>> void preparePrototype (object proto);\n    */ preparePrototype: function(proto) {\n        if (proto.__prototypePrepared === true) return;\n        proto.__prototypePrepared = true;\n        if (!proto.hasOwnProperty(\"events\") || !proto.events) proto.events = {};\n        if (!proto.hasOwnProperty(\"routes\") || !proto.routes) proto.routes = {};\n        for(let i in proto){\n            if (i.startsWith(\"event \")) {\n                proto.events[i.substr(6)] = proto[i];\n                delete proto[i];\n            } else if (i.startsWith(\"route \")) {\n                proto.routes[i.substr(6)] = proto[i];\n                delete proto[i];\n            }\n        }\n    },\n    /*\n    **\tRegisters a new custom element with the specified name. Extra functionality can be added with one or more prototypes, by default\n    **\tall elements also get the `Element` prototype. Note that the final prototypes of all registered elements are stored, and if you want\n    **\tto inherit another element's prototype just provide its name (string) in the protos argument list.\n    **\n    **\t>> class register (string name, ...(object|string) protos);\n    */ register: function(name, ...protos) {\n        const newElement = class extends HTMLElement {\n            constructor(){\n                super();\n                this.invokeConstructor = true;\n                if ($5808f050ebbd5b77$var$Element.debug) console.log(\"CREATED \" + this.tagName);\n                this._super = {};\n                for (let i of Object.entries(this.constructor.prototype._super)){\n                    this._super[i[0]] = {};\n                    for (let j of Object.entries(i[1]))this._super[i[0]][j[0]] = j[1].bind(this);\n                }\n                this.onCreated();\n            }\n            findRoot(srcElement = null) {\n                let elem = srcElement ? srcElement : this.parentElement;\n                while(elem != null){\n                    if (\"isRoot\" in elem && elem.isRoot === true) return elem;\n                    elem = elem.parentElement;\n                }\n                return null;\n            }\n            findCustomParent(srcElement = null) {\n                let elem = srcElement ? srcElement.parentElement : this.parentElement;\n                while(elem != null){\n                    if (elem.tagName.indexOf(\"-\") !== -1) return elem;\n                    elem = elem.parentElement;\n                }\n                return null;\n            }\n            connectReference(root = null, flags = 255) {\n                if (!this.root && (flags & 1) == 1) {\n                    if (root == null) root = this.findRoot();\n                    if (root != null) {\n                        if (this.dataset.ref) root[this.dataset.ref] = this;\n                        this.root = root;\n                    }\n                }\n            }\n            connectedCallback() {\n                this.connectReference(null, 1);\n                if (this.invokeConstructor) {\n                    this.invokeConstructor = false;\n                    this.__ctor();\n                }\n                this.connectReference(null, 2);\n                this.elementConnected();\n                if (this.dataset.xref) globalThis[this.dataset.xref] = this;\n            }\n            disconnectedCallback() {\n                if (this.root) {\n                    if (this.dataset.ref) {\n                        this.root.onRefRemoved(this.dataset.ref, this);\n                        delete this.root[this.dataset.ref];\n                    }\n                    this.root = null;\n                }\n                this.elementDisconnected();\n                if (this.dataset.xref) delete globalThis[this.dataset.xref];\n            }\n        };\n        (0, $k7heJ$Rinn).override(newElement.prototype, $5808f050ebbd5b77$var$Element);\n        const proto = {};\n        const _super = {};\n        const events = (0, $k7heJ$Rinn).clone($5808f050ebbd5b77$var$Element.events);\n        let __init = true;\n        let __ready = true;\n        let __rready = true;\n        let __check;\n        for(let i = 0; i < protos.length; i++){\n            if (!protos[i]) continue;\n            if ((0, $k7heJ$Rinn).typeOf(protos[i]) == \"string\") {\n                const name = protos[i];\n                protos[i] = $5808f050ebbd5b77$var$elementPrototypes[name];\n                if (!protos[i]) continue;\n                _super[name] = {};\n                for(let f in protos[i]){\n                    if ((0, $k7heJ$Rinn).typeOf(protos[i][f]) != \"function\") continue;\n                    _super[name][f] = protos[i][f];\n                }\n                __init = false;\n                __ready = false;\n                __rready = false;\n                __check = false;\n            } else {\n                $5808f050ebbd5b77$var$Element.preparePrototype(protos[i]);\n                __check = true;\n            }\n            if (\"_super\" in protos[i]) (0, $k7heJ$Rinn).override(_super, protos[i]._super);\n            if (\"events\" in protos[i]) (0, $k7heJ$Rinn).override(events, protos[i].events);\n            (0, $k7heJ$Rinn).override(newElement.prototype, protos[i]);\n            (0, $k7heJ$Rinn).override(proto, protos[i]);\n            if (__check) {\n                if (!__init && \"init\" in protos[i]) __init = true;\n                if (!__ready && \"ready\" in protos[i]) __ready = true;\n                if (!__rready && \"rready\" in protos[i]) __rready = true;\n            }\n        }\n        let dummy = function() {};\n        if (!__init) {\n            newElement.prototype.init = dummy;\n            proto.init = dummy;\n        }\n        if (!__ready) {\n            newElement.prototype.ready = dummy;\n            proto.ready = dummy;\n        }\n        if (!__rready) {\n            newElement.prototype.rready = dummy;\n            proto.rready = dummy;\n        }\n        newElement.prototype._super = _super;\n        newElement.prototype.events = events;\n        proto._super = _super;\n        proto.events = events;\n        customElements.define(name, newElement);\n        $5808f050ebbd5b77$var$elementPrototypes[name] = proto;\n        $5808f050ebbd5b77$var$elementClasses[name] = newElement;\n        return newElement;\n    },\n    /*\n    **\tExpands an already created custom element with the specified prototype(s).\n    **\n    **\t>> void expand (string elementName, ...object protos);\n    */ expand: function(name, ...protos) {\n        if (!(name in $5808f050ebbd5b77$var$elementPrototypes)) return;\n        const self = $5808f050ebbd5b77$var$elementPrototypes[name];\n        const elem = $5808f050ebbd5b77$var$elementClasses[name];\n        const _super = self._super;\n        const events = self.events;\n        for (let proto of protos){\n            $5808f050ebbd5b77$var$Element.preparePrototype(proto);\n            if (\"_super\" in proto) (0, $k7heJ$Rinn).override(_super, proto._super);\n            if (\"events\" in proto) (0, $k7heJ$Rinn).override(events, proto.events);\n            (0, $k7heJ$Rinn).override(elem.prototype, proto);\n            (0, $k7heJ$Rinn).override(self, proto);\n        }\n        elem.prototype._super = _super;\n        elem.prototype.events = events;\n        self._super = _super;\n        self.events = events;\n    },\n    /*\n    **\tAppends a hook to a function of a custom element.\n    */ hookAppend: function(name, functionName, newFunction) {\n        if (!(name in $5808f050ebbd5b77$var$elementPrototypes)) return;\n        let hook1 = (0, $k7heJ$Rinn).hookAppend($5808f050ebbd5b77$var$elementPrototypes[name], functionName, newFunction);\n        let hook2 = (0, $k7heJ$Rinn).hookAppend($5808f050ebbd5b77$var$elementClasses[name].prototype, functionName, newFunction);\n        return {\n            unhook: function() {\n                hook1.unhook();\n                hook2.unhook();\n            }\n        };\n    },\n    /*\n    **\tPrepends a hook to a function of a custom element.\n    */ hookPrepend: function(name, functionName, newFunction) {\n        if (!(name in $5808f050ebbd5b77$var$elementPrototypes)) return;\n        let hook1 = (0, $k7heJ$Rinn).hookPrepend($5808f050ebbd5b77$var$elementPrototypes[name], functionName, newFunction);\n        let hook2 = (0, $k7heJ$Rinn).hookPrepend($5808f050ebbd5b77$var$elementClasses[name].prototype, functionName, newFunction);\n        return {\n            unhook: function() {\n                hook1.unhook();\n                hook2.unhook();\n            }\n        };\n    },\n    /**\n    **\tBuilt-in action handlers.\n    */ /**\n    **\t:toggleClass <className> [<selector>]\n    **\n    **\tToggles a CSS class on the element.\n    */ \":toggleClass\": function(args, evt) {\n        let elem = evt.source;\n        if (\"2\" in args) elem = document.querySelector(args[2]);\n        if (!elem) return;\n        if (elem.classList.contains(args[1])) elem.classList.remove(args[1]);\n        else elem.classList.add(args[1]);\n    },\n    /**\n    **\t:setClass <className> [<selector>]\n    **\n    **\tSets a CSS class on the element.\n    */ \":setClass\": function(args, evt) {\n        let elem = evt.source;\n        if (\"2\" in args) elem = document.querySelector(args[2]);\n        if (!elem) return;\n        elem.classList.add(args[1]);\n    },\n    /**\n    **\t:volatileClass <className> [<selector>]\n    **\n    **\tAdds the CSS class to the element and any click outside will cause it to be removed.\n    */ \":volatileClass\": function(args, evt) {\n        let elem = evt.source;\n        if (\"2\" in args) elem = document.querySelector(args[2]);\n        if (!elem) return;\n        elem.classList.add(args[1]);\n        let fn = ()=>{\n            window.removeEventListener(\"click\", fn, true);\n            elem.classList.remove(args[1]);\n        };\n        window.addEventListener(\"click\", fn, true);\n    },\n    /**\n    **\t:toggleClassUnique <className> <parentSelector> <childSelector>\n    **\n    **\tToggles a CSS class on the element and only one element in the selected parent can have the class.\n    */ \":toggleClassUnique\": function(args, evt) {\n        let elem = evt.source;\n        if (!elem) return;\n        if (elem.classList.contains(args[1])) elem.classList.remove(args[1]);\n        else {\n            elem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach((elem)=>elem.classList.remove(args[1]));\n            elem.classList.add(args[1]);\n        }\n    },\n    /**\n    **\t:setClassUnique <className> <parentSelector> <childSelector>\n    **\n    **\tSets a CSS class on the element and only that element in the selected parent can have the class.\n    */ \":setClassUnique\": function(args, evt) {\n        let elem = evt.source;\n        if (!elem) return;\n        elem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach((elem)=>elem.classList.remove(args[1]));\n        elem.classList.add(args[1]);\n    }\n};\n$5808f050ebbd5b77$var$Element.debug = false;\n$5808f050ebbd5b77$var$Element.register(\"r-elem\", {});\n$5808f050ebbd5b77$var$Element.register(\"r-dom-probe\", {});\n/* ****************************************** */ /**\n * Finds the parent element given a selector.\n */ HTMLElement.prototype.querySelectorParent = function(selector) {\n    let elem = this;\n    while(elem != null){\n        if (elem.matches(selector)) break;\n        elem = elem.parentElement;\n    }\n    return elem;\n};\nvar $5808f050ebbd5b77$export$2e2bcd8739ae039 = $5808f050ebbd5b77$var$Element;\n\n\n\n/**\r\n * API interface utility functions.\r\n */ const $d584b999ce7bb535$var$Api = {\n    /**\r\n     * Flags constants.\r\n     */ REQUEST_PACKAGE_SUPPORTED: 0x01,\n    REQ64_SUPPORTED: 0x02,\n    JSON_RESPONSE_SUPPORTED: 0x04,\n    XML_RESPONSE_SUPPORTED: 0x08,\n    INCLUDE_CREDENTIALS: 0x10,\n    UNIQUE_STAMP: 0x20,\n    DISABLE_CORS: 0x40,\n    /**\r\n     * Target URL for all the API requests. Set by calling `setEndPoint`.\r\n     */ apiUrl: \"/api\",\n    /**\r\n     * Capabilities flag.\r\n     */ flags: 63,\n    /**\r\n     * Indicates if all request data will be packed into a req64 parameter instead of individual fields.\r\n     */ useReq64: false,\n    /**\r\n     * Number of retries to execute each API call before giving up and invoking error handlers.\r\n     */ retries: 0,\n    /**\r\n     * Headers for the request.\r\n     */ headers: {},\n    /**\r\n     * Level of the current request. Used to detect nested requests.\r\n     */ _requestLevel: 0,\n    /**\r\n     * Indicates if all API calls should be bundled in a request package. Activated by calling the packageBegin() function and finished with packageEnd().\r\n     */ _requestPackage: 0,\n    /**\r\n     * When in package-mode, this contains the package data to be sent upon a call to packageEnd().\r\n     */ _packageData: [],\n    /**\r\n     * Sets the API end-point URL address.\r\n     */ setEndPoint: function(apiUrl, flags = null) {\n        this.apiUrl = apiUrl;\n        this.flags = flags ?? this.flags;\n        return this;\n    },\n    /**\r\n     * Overridable filter that processes the response from the server and returns true if it was successful. The `res` parameter indicates the response data, and `req` the request data.\r\n     */ responseFilter: function(res, req) {\n        return true;\n    },\n    /**\r\n     * Starts \"package-mode\" (using the `rpkg` field). Any API calls after this will be bundled together.\r\n     */ packageBegin: function() {\n        if (!(this.flags & $d584b999ce7bb535$var$Api.REQUEST_PACKAGE_SUPPORTED)) return;\n        this._requestPackage++;\n    },\n    /**\r\n     * Finishes \"package-mode\" and a single API request with the currently constructed package will be sent.\r\n     */ packageEnd: function(callback) {\n        if (!(this.flags & $d584b999ce7bb535$var$Api.REQUEST_PACKAGE_SUPPORTED)) return;\n        if (!this._requestPackage) return;\n        if (--this._requestPackage) return;\n        this.packageSend(callback);\n    },\n    /**\r\n     * Starts package-mode, executes the callback and finishes package-mode. Therefore any requests made by the callback will be packed together.\r\n     */ batch: function(callback, responseCallback = null) {\n        if (!(this.flags & $d584b999ce7bb535$var$Api.REQUEST_PACKAGE_SUPPORTED)) {\n            callback();\n            if (responseCallback) responseCallback();\n            return;\n        }\n        this.packageBegin();\n        callback();\n        this.packageEnd(responseCallback);\n    },\n    /**\r\n     * Sends a single API request with the currently constructed package and maintains package-mode.\r\n     */ packageSend: function(callback) {\n        if (!(this.flags & $d584b999ce7bb535$var$Api.REQUEST_PACKAGE_SUPPORTED)) return;\n        if (!this._packageData.length) return;\n        let _packageData = this._packageData;\n        this._packageData = [];\n        var rpkg = \"\";\n        for(var i = 0; i < _packageData.length; i++)rpkg += \"r\" + i + \",\" + (0, $k7heJ$base64).encode(this.encodeParams(_packageData[i][2])) + \";\";\n        this._showProgress();\n        this.apiCall({\n            rpkg: rpkg\n        }, (res, req)=>{\n            this._hideProgress();\n            for(let i = 0; i < _packageData.length; i++)try {\n                var response = res[\"r\" + i];\n                if (!response) {\n                    if (_packageData[i][1] != null) _packageData[i][1](_packageData[i][2]);\n                    continue;\n                }\n                if (_packageData[i][0] != null) {\n                    if (this.responseFilter(response, _packageData[i][2])) _packageData[i][0](response, _packageData[i][2]);\n                }\n            } catch (e) {}\n            if (callback) callback();\n        }, (req)=>{\n            this._hideProgress();\n            for(let i = 0; i < _packageData.length; i++)if (_packageData[i][1] != null) _packageData[i][1](_packageData[i][2]);\n        });\n    },\n    /**\r\n     * Adds CSS class 'busy' to the HTML root element, works only if running inside a browser.\r\n     */ _showProgress: function() {\n        if (\"document\" in $parcel$global) {\n            this._requestLevel++;\n            if (this._requestLevel > 0) $parcel$global.document.documentElement.classList.add(\"busy\");\n        }\n    },\n    /**\r\n     * Removes the 'busy' CSS class from the HTML element.\r\n     */ _hideProgress: function() {\n        if (\"document\" in $parcel$global) {\n            this._requestLevel--;\n            if (this._requestLevel) return;\n            setTimeout(()=>{\n                if (this._requestLevel === 0) $parcel$global.document.documentElement.classList.remove(\"busy\");\n            }, 250);\n        }\n    },\n    /**\r\n     * Sets an HTTP header.\r\n     */ header: function(name, value) {\n        if (value === null) delete this.headers[name];\n        else this.headers[name] = value;\n        return this;\n    },\n    /**\r\n     * Returns a parameter string for a GET request given an object with fields.\r\n     */ encodeParams: function(obj) {\n        let s = [];\n        if (obj instanceof FormData) for (let i of obj.entries())s.push(encodeURIComponent(i[0]) + \"=\" + encodeURIComponent(i[1]));\n        else for(let i in obj)s.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(obj[i]));\n        return s.join(\"&\");\n    },\n    /**\r\n     * Returns a URL given a relative or absolute URL.\r\n     */ getUrl: function(url) {\n        if (url.indexOf(\"//\") !== -1) return url;\n        return this.apiUrl + url;\n    },\n    /**\r\n     * Appends a parameter to the URL.\r\n     */ appendParam: function(url, param) {\n        return url + (url.indexOf(\"?\") == -1 ? \"?\" : \"&\") + param;\n    },\n    /**\r\n     * Executes an API call to the URL stored in the `apiUrl` property. By default `httpMethod` is \"auto\", which will determine the best depending on the data to\r\n     * be sent. Any connection error will be reported to the `failure` callback, and similarly any success to the `success` callback. The `params` object can be\r\n     * a FormData object or just a regular object.\r\n     */ apiCall: function(params, success, failure, httpMethod = null, retries = null, relativeUrl = \"\") {\n        let url = this.getUrl(relativeUrl);\n        if (this.flags & $d584b999ce7bb535$var$Api.UNIQUE_STAMP) url = this.appendParam(url, \"_=\" + Date.now());\n        httpMethod = httpMethod ? httpMethod.toUpperCase() : null;\n        if (httpMethod != \"GET\" && httpMethod != \"POST\") httpMethod = \"auto\";\n        if (retries === null) retries = this.retries;\n        if (this._requestPackage && this.flags & $d584b999ce7bb535$var$Api.REQUEST_PACKAGE_SUPPORTED) {\n            if (!(params instanceof FormData)) params = {\n                ...params\n            };\n            this._packageData.push([\n                success,\n                failure,\n                params\n            ]);\n            return;\n        }\n        this._showProgress();\n        let data = params;\n        let options = {\n            mode: this.flags & $d584b999ce7bb535$var$Api.DISABLE_CORS ? \"no-cors\" : \"cors\",\n            headers: {\n                \"Accept\": \"text/html,application/xhtml+xml,application/xml,application/json;q=0.9\",\n                ...this.headers\n            },\n            method: httpMethod,\n            body: null,\n            multipart: false\n        };\n        if (this.flags & $d584b999ce7bb535$var$Api.INCLUDE_CREDENTIALS) options.credentials = \"include\";\n        if (typeof data !== \"string\" && !(data instanceof Blob)) {\n            if (!(data instanceof FormData)) {\n                data = new FormData();\n                for(let i in params)if (params[i] instanceof File || params[i] instanceof Blob) data.append(i, params[i], params[i].name);\n                else data.append(i, params[i]);\n            }\n            for (let i of data.entries())if (i[1] instanceof File || i[1] instanceof Blob) {\n                options.method = \"POST\";\n                options.multipart = true;\n                break;\n            }\n            if (this.useReq64 && this.flags & $d584b999ce7bb535$var$Api.REQ64_SUPPORTED && !options.multipart) {\n                let tmp = new FormData();\n                tmp.append(\"req64\", (0, $k7heJ$base64).encode(this.encodeParams(data)));\n                data = tmp;\n            }\n            if (options.method == \"auto\") {\n                let l = 0;\n                options.method = \"GET\";\n                for (let i of data.entries()){\n                    l += i[0].length + i[1].length + 2;\n                    if (l > 960) {\n                        options.method = \"POST\";\n                        break;\n                    }\n                }\n            }\n            if (options.method == \"GET\") url = this.appendParam(url, this.encodeParams(data));\n            else if (!options.multipart) {\n                options.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n                options.body = this.encodeParams(data);\n            } else options.body = data;\n        } else {\n            if (typeof data === \"string\") {\n                if (data[0] === \"<\") {\n                    if (data.endsWith(\"</soap:Envelope>\")) options.headers[\"Content-Type\"] = \"application/soap+xml\";\n                    else options.headers[\"Content-Type\"] = \"application/xml\";\n                } else if (data[0] === \"{\" || data[0] === \"[\") options.headers[\"Content-Type\"] = \"application/json\";\n                else options.headers[\"Content-Type\"] = \"application/octet-stream\";\n            } else options.headers[\"Content-Type\"] = data.type;\n            options.method = \"POST\";\n            options.body = data;\n        }\n        $parcel$global.fetch(url, options).then((result)=>this.decodeResult(result)).then((result)=>{\n            this._hideProgress();\n            if (!success) return;\n            if (this.responseFilter(result, params)) try {\n                success(result, params);\n            } catch (e) {}\n        }).catch((err)=>{\n            this._hideProgress();\n            if (retries == 0) {\n                if (failure) failure(err, params);\n            } else this.apiCall(data, success, failure, httpMethod, retries - 1, relativeUrl);\n        });\n    },\n    /**\r\n     * Decodes a result obtained using fetch into a usable object.\r\n     */ decodeResult: function(result) {\n        let type = result.headers.get(\"content-type\").split(\";\")[0].toLowerCase();\n        if (this.flags & $d584b999ce7bb535$var$Api.JSON_RESPONSE_SUPPORTED && type.indexOf(\"json\") !== -1) return result.json();\n        if (this.flags & $d584b999ce7bb535$var$Api.XML_RESPONSE_SUPPORTED && type.indexOf(\"xml\") !== -1) return new Promise((resolve, reject)=>{\n            result.text().then((data)=>{\n                data = (new DOMParser).parseFromString(data, \"text/xml\");\n                resolve(data);\n            }).catch(reject);\n        });\n        return result.blob();\n    },\n    /**\r\n     * Makes a blob with the specified data and type.\r\n     */ getBlob: function(data, type) {\n        return new Blob([\n            data\n        ], {\n            type: type\n        });\n    },\n    /**\r\n     * Provided access to the base64 module to encode/decode data.\r\n     */ base64: {\n        encode: function(value) {\n            return (0, $k7heJ$base64).encode(value);\n        },\n        decode: function(value) {\n            return (0, $k7heJ$base64).decode(value);\n        }\n    },\n    /**\r\n     * Executes an API request, returns a promise.\r\n     */ request: function(method, url, params = null) {\n        if (params === null) {\n            if (typeof url !== \"string\") {\n                params = url;\n                url = \"\";\n            }\n        }\n        return new Promise((resolve, reject)=>{\n            this.apiCall(params, resolve, reject, null, method, url);\n        });\n    },\n    /**\r\n     * Executes a POST API call.\r\n     */ post: function(params, success = null, failure = null) {\n        return this.apiCall(params, success, failure, \"POST\");\n    },\n    /**\r\n     * Executes a GET API call.\r\n     */ get: function(params, success = null, failure = null) {\n        return this.apiCall(params, success, failure, \"GET\");\n    },\n    /**\r\n     * Executes an automatic API call, returns a promise.\r\n     */ fetch: function(method, url = null, params = null) {\n        // fetch (method, relativePath, params)\n        // fetch (relativePath, params)\n        let shift = true;\n        if (typeof method === \"string\") {\n            let tmp = method.toUpperCase();\n            if (tmp === \"GET\" || tmp === \"POST\" || tmp === \"PUT\" || tmp === \"DELETE\" || tmp === \"PATCH\" || tmp === \"HEAD\" || tmp === \"OPTIONS\") shift = false;\n        }\n        if (shift) {\n            params = url;\n            url = method;\n            method = null;\n        }\n        if (params === null) {\n            if (typeof url !== \"string\") {\n                params = url;\n                url = \"\";\n            }\n        }\n        return new Promise((resolve, reject)=>{\n            this.apiCall(params, resolve, reject, method, null, url);\n        });\n    },\n    /**\r\n     * Builds a URL from the given data.\r\n     */ makeUrl: function(url, params = null) {\n        if (params === null) {\n            if (typeof url !== \"string\") {\n                params = url;\n                url = \"\";\n            }\n        }\n        return this.appendParam(this.getUrl(url), this.encodeParams(params));\n    }\n};\nvar $d584b999ce7bb535$export$2e2bcd8739ae039 = $d584b999ce7bb535$var$Api;\n\n\n\n\nvar /*\r\n**\tProvides several methods to quickly interface with a remote data-source as defined by Wind.\r\n*/ $fe13c50c6c3e66d8$export$2e2bcd8739ae039 = (0, $k7heJ$EventDispatcher).extend({\n    className: \"DataSource\",\n    debounceDelay: 250,\n    request: null,\n    includeCount: false,\n    includeEnum: false,\n    includeList: true,\n    eid: null,\n    count: 0,\n    list: null,\n    enum: null,\n    /*\r\n    **\tConstructs the data source with the specified optional `config` parameters, any of the properties of this object can be specified\r\n    **\tin the config. Uses the given basePath as prefix for the `f` parameter for subsequent API operations, a basePath of `candies` will\r\n    **\tresult in calls to `candies.list`, `candies.count`, etc.\r\n    */ __ctor: function(basePath, config) {\n        this._super.EventDispatcher.__ctor();\n        this.basePath = basePath;\n        if (config) Object.assign(this, config);\n        this.request = new (0, $k7heJ$Model)(this.request);\n        this.eid = Math.random().toString().substr(2);\n        this.count = 0;\n        this.list = new (0, $k7heJ$ModelList)();\n        this.list.dataSource = this;\n        this.enum = new (0, $k7heJ$ModelList)();\n        this.enum.dataSource = this;\n        this.request.addEventListener(this.eid + \":propertyChanged\", this.forwardRequestEvent, this);\n        this.list.addEventListener(this.eid + \":itemsCleared\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemsChanged\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemRemoved\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemChanged\", this.forwardListEvent, this);\n        this.list.addEventListener(this.eid + \":itemAdded\", this.forwardListEvent, this);\n        this.enum.addEventListener(this.eid + \":itemsCleared\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemsChanged\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemRemoved\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemChanged\", this.forwardEnumEvent, this);\n        this.enum.addEventListener(this.eid + \":itemAdded\", this.forwardEnumEvent, this);\n    },\n    forwardRequestEvent: function(evt, args) {\n        this.prepareEvent(\"request\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    forwardListEvent: function(evt, args) {\n        this.prepareEvent(\"list\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    forwardEnumEvent: function(evt, args) {\n        this.prepareEvent(\"enum\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    /*\r\n    **\tExecutes one or more API functions (depending on `includeCount`, `includeEnum` and `includeList` properties) to retrieve the\r\n    **\trequired data (uses debounce to prevent too-quick refreshes).\r\n    **\r\n    **\tRefresh mode can be: order, filter, range, enum or full. Setting `mode` to `true` will cause a full refresh without debouncing.\r\n    */ refresh: function(mode = \"full\", callback = null) {\n        if (typeof mode == \"function\") {\n            callback = mode;\n            mode = \"full\";\n        }\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = null;\n        }\n        const fn = ()=>{\n            this._timeout = null;\n            (0, $d584b999ce7bb535$export$2e2bcd8739ae039).packageBegin();\n            if (this.includeCount && (mode === \"full\" || mode === \"filter\")) this.fetchCount();\n            if (this.includeEnum && (mode === \"full\" || mode === \"enum\")) this.fetchEnum();\n            if (this.includeList && mode !== \"enum\") this.fetchList();\n            (0, $d584b999ce7bb535$export$2e2bcd8739ae039).packageEnd(callback);\n        };\n        if (mode === true) {\n            mode = \"full\";\n            fn();\n        } else this._timeout = setTimeout(fn, this.debounceDelay);\n    },\n    /*\r\n    **\tSearches for the item in `list` that matches the specified `fields` and sends it to the callback. If no item is found (or if `forced` is true),\r\n    **\ta call to API function `.get` will be executed with the fields as request parameters. Returns a promise.\r\n    */ fetch: function(fields, forced = false) {\n        return new Promise((resolve, reject)=>{\n            let item = forced == true ? null : this.list.find(fields, true);\n            if (!item) this.fetchOne(fields, (r)=>{\n                if (r && r.response == 200) {\n                    if (r.data.length > 0) resolve(r.data[0]);\n                    else reject(r);\n                } else reject(r);\n            });\n            else resolve(item.get());\n        });\n    },\n    /*\r\n    **\tRemoves an item from the remote data source by executing the `.delete` API function, passes the given `fields` as request\r\n    **\tparameters. Returns a promise.\r\n    */ delete: function(params) {\n        return new Promise((resolve, reject)=>{\n            this.fetchDelete(params, (r)=>{\n                if (r.response == 200) resolve(r);\n                else reject(r.error);\n            });\n        });\n    },\n    fetchList: function() {\n        let data = {\n            ...this.request.get()\n        };\n        data.f = this.basePath + \".list\";\n        this.dispatchEvent(\"listLoading\");\n        (0, $d584b999ce7bb535$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            this.list.setData(r.response == 200 ? r.data : null);\n            this.dispatchEvent(\"listLoaded\");\n            this.dispatchEvent(\"listChanged\");\n        });\n    },\n    fetchEnum: function() {\n        let data = {\n            ...this.request.get()\n        };\n        data.f = this.basePath + \".enum\";\n        this.dispatchEvent(\"enumLoading\");\n        (0, $d584b999ce7bb535$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            this.enum.setData(r.response == 200 ? r.data : null);\n            this.dispatchEvent(\"enumLoaded\");\n            this.dispatchEvent(\"enumChanged\");\n        });\n    },\n    fetchCount: function() {\n        let data = {\n            ...this.request.get()\n        };\n        data.f = this.basePath + \".count\";\n        this.dispatchEvent(\"countLoading\");\n        (0, $d584b999ce7bb535$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            this.count = r.response == 200 ? r.count : 0;\n            this.dispatchEvent(\"countLoaded\");\n            this.dispatchEvent(\"countChanged\");\n        });\n    },\n    fetchOne: function(params, callback) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        data.f = this.basePath + \".get\";\n        (0, $d584b999ce7bb535$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            callback(r);\n        });\n    },\n    fetchDelete: function(params, callback) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        data.f = this.basePath + \".delete\";\n        (0, $d584b999ce7bb535$export$2e2bcd8739ae039).fetch(data).then((r)=>{\n            callback(r);\n        });\n    },\n    fetchData: function(params) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        if (data.f[0] == \".\") data.f = this.basePath + data.f;\n        return (0, $d584b999ce7bb535$export$2e2bcd8739ae039).fetch(data);\n    },\n    makeUrl: function(params) {\n        let data = {\n            ...this.request.get(),\n            ...params\n        };\n        if (data.f[0] == \".\") data.f = this.basePath + data.f;\n        return (0, $d584b999ce7bb535$export$2e2bcd8739ae039).makeUrl(data);\n    }\n});\n\n\n\n\nvar /*\r\n**\tProvides an interface to connect with a listing API function.\r\n*/ $52a9c945778cbfd0$export$2e2bcd8739ae039 = (0, $k7heJ$ModelList).extend({\n    className: \"DataList\",\n    debounceDelay: 250,\n    request: null,\n    eid: null,\n    /*\r\n\t**\tConstructs the data list with the specified optional `config` parameters, any of the properties of this object can be specified\r\n\t**\tin the config. The given `f` parameter is passed directly as a request parameter to the API.\r\n\t*/ __ctor: function(f, config = null) {\n        this._super.ModelList.__ctor();\n        if (config !== null) Object.assign(this, config);\n        if (!this.request) this.request = {};\n        this.request.f = f;\n        this.request = new (0, $k7heJ$Model)(this.request);\n        this.eid = Math.random().toString().substr(2);\n        this.dataList = this;\n        this.request.addEventListener(this.eid + \":propertyChanged\", this.forwardRequestEvent, this);\n    },\n    forwardRequestEvent: function(evt, args) {\n        this.prepareEvent(\"request\" + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\n    },\n    /*\r\n\t**\tExecutes a request to retrieve the data for the list (uses debounce to prevent too-quick refreshes).\r\n\t*/ refresh: function(callback = null, _callback = null) {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = null;\n        }\n        if (callback === true) {\n            this.dispatchEvent(\"listLoading\");\n            (0, $d584b999ce7bb535$export$2e2bcd8739ae039).fetch(this.request.get()).then((r)=>{\n                this.setData(r.response == 200 ? r.data : null);\n                this.dispatchEvent(\"listLoaded\");\n                this.dispatchEvent(\"listChanged\");\n                if (_callback !== null) _callback();\n            });\n            return;\n        }\n        const fn = ()=>{\n            this.refresh(true, callback);\n        };\n        this._timeout = setTimeout(fn, this.debounceDelay);\n    }\n});\n\n\n/**\n**\tCollection of useful easing functions (imported from Cherry source code).\n*/ const $0a74aeaee0e1468a$var$Easing = {\n    /**\n\t**\tInterpolates numeric values between two objects (`src` and `dst`) using the specified `duration` (in seconds) and `easing` function. Note\n\t**\tthat all four parameters `src`, `dst`, `duration` and `easing` must be objects having the same number of values.\n\t*/ interpolate: function(src, dst, duration, easing, callback /* function(data, isFinished) */ ) {\n        let time = {};\n        let data = {};\n        let count = 0;\n        for(let x in src){\n            time[x] = 0.0;\n            data[x] = src[x];\n            count++;\n        }\n        let lastTime = Date.now() / 1000;\n        let dt = 0;\n        let interpolator = function() {\n            let curTime = Date.now() / 1000;\n            dt = curTime - lastTime;\n            lastTime = curTime;\n            for(let x in time){\n                if (time[x] == duration[x]) continue;\n                time[x] += dt;\n                if (time[x] >= duration[x]) {\n                    time[x] = duration[x];\n                    count--;\n                }\n                let t = easing[x](time[x] / duration[x]);\n                data[x] = (1 - t) * src[x] + t * dst[x];\n            }\n            callback(data, count == 0);\n            if (count != 0) requestAnimationFrame(interpolator);\n        };\n        interpolator();\n    },\n    /* ******************************************** */ Linear: {\n        IN: function(t) {\n            return t;\n        },\n        OUT: function(t) {\n            return t;\n        },\n        IN_OUT: function(t) {\n            return t;\n        }\n    },\n    /* ******************************************** */ Back: {\n        k: 1.70158,\n        IN: function(t, k) {\n            if (k === undefined) k = $0a74aeaee0e1468a$var$Easing.Back.k;\n            return t * t * ((k + 1) * t - k);\n        },\n        OUT: function(t, k) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Back.IN(1 - t, k);\n        },\n        IN_OUT: function(t, k) {\n            if (t < 0.5) return $0a74aeaee0e1468a$var$Easing.Back.IN(t * 2, k) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Back.OUT((t - 0.5) * 2, k) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Bounce: {\n        getConst: function(t) {\n            if (t < 1.0 / 2.75) return 7.5625 * t * t;\n            else if (t < 2.0 / 2.75) return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n            else if (t < 2.5 / 2.75) return 7.5625 * (t -= 2.250 / 2.75) * t + 0.9375;\n            return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n        },\n        IN: function(t) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Bounce.getConst(1 - t);\n        },\n        OUT: function(t) {\n            return $0a74aeaee0e1468a$var$Easing.Bounce.getConst(t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return (1 - $0a74aeaee0e1468a$var$Easing.Bounce.getConst(1 - 2 * t)) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Bounce.getConst((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Circ: {\n        IN: function(t) {\n            return 1 - Math.sqrt(1 - t * t);\n        },\n        OUT: function(t) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Circ.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $0a74aeaee0e1468a$var$Easing.Circ.IN(t * 2) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Circ.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Cubic: {\n        IN: function(t) {\n            return t * t * t;\n        },\n        OUT: function(t) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Cubic.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $0a74aeaee0e1468a$var$Easing.Cubic.IN(t * 2) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Cubic.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Expo: {\n        IN: function(t) {\n            return Math.pow(2, 12 * (t - 1));\n        },\n        OUT: function(t) {\n            return -Math.pow(2, -12 * t) + 1;\n        },\n        IN_OUT: function(t) {\n            if ((t *= 2) < 1) return Math.pow(2, 12 * (t - 1)) / 2;\n            else return (-Math.pow(2, -12 * (t - 1)) + 2) / 2;\n        }\n    },\n    /* ******************************************** */ Power: {\n        p: 12,\n        IN: function(t) {\n            return Math.pow(t, $0a74aeaee0e1468a$var$Easing.Power.p);\n        },\n        OUT: function(t) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Power.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $0a74aeaee0e1468a$var$Easing.Power.IN(t * 2) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Power.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Quad: {\n        IN: function(t) {\n            return t * t;\n        },\n        OUT: function(t) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Quad.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $0a74aeaee0e1468a$var$Easing.Quad.IN(t * 2) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Quad.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Quartic: {\n        IN: function(t) {\n            return t * t * t * t;\n        },\n        OUT: function(t) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Quartic.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $0a74aeaee0e1468a$var$Easing.Quartic.IN(t * 2) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Quartic.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Quintic: {\n        IN: function(t) {\n            return t * t * t * t * t;\n        },\n        OUT: function(t) {\n            return 1 - $0a74aeaee0e1468a$var$Easing.Quintic.IN(1 - t);\n        },\n        IN_OUT: function(t) {\n            if (t < 0.5) return $0a74aeaee0e1468a$var$Easing.Quintic.IN(t * 2) / 2;\n            else return $0a74aeaee0e1468a$var$Easing.Quintic.OUT((t - 0.5) * 2) / 2 + 0.5;\n        }\n    },\n    /* ******************************************** */ Sine: {\n        IN: function(t) {\n            return 1 - Math.sin(1.5708 * (1 - t));\n        },\n        OUT: function(t) {\n            return Math.sin(1.5708 * t);\n        },\n        IN_OUT: function(t) {\n            return (Math.cos(3.1416 * t) - 1) / -2;\n        }\n    },\n    /* ******************************************** */ Step: {\n        IN: function(t) {\n            return t != 1.0 ? 0 : 1.0;\n        },\n        OUT: function(t) {\n            return t != 1.0 ? 0 : 1.0;\n        },\n        IN_OUT: function(t) {\n            return t != 1.0 ? 0 : 1.0;\n        }\n    }\n};\nvar $0a74aeaee0e1468a$export$2e2bcd8739ae039 = $0a74aeaee0e1468a$var$Easing;\n\n\n\n/**\n**\tClass to animate properties using rules (imported from Cherry source code).\n*/ const $54865aa6b345efd5$var$Anim = (0, $k7heJ$Class).extend({\n    list: null,\n    initialData: null,\n    data: null,\n    stack: null,\n    block: null,\n    timeScale: 1,\n    time: 0,\n    blockTime: 0,\n    index: 0,\n    paused: false,\n    finished: false,\n    onFinishedCallback: null,\n    onUpdatedCallback: null,\n    __ctor: function() {\n        this.list = [];\n        this.initialData = {};\n        this.data = {};\n        this.stack = [];\n        this.block = this.list;\n        this.reset();\n    },\n    __dtor: function() {},\n    clone: function() {\n        let a = new $54865aa6b345efd5$var$Anim();\n        a.list = this.list;\n        a.initialData = this.initialData;\n        return a.reset();\n    },\n    onFinished: function(callback) {\n        this.onFinishedCallback = callback;\n        return this;\n    },\n    onUpdated: function(callback) {\n        this.onUpdatedCallback = callback;\n        return this;\n    },\n    // Resets the animation to its initial state.\n    reset: function() {\n        this.stack.length = 0;\n        this.blockTime = 0;\n        this.time = 0;\n        this.index = 0;\n        this.block = this.list;\n        this.paused = true;\n        this.finished = false;\n        this.handle = null;\n        for(let i in this.initialData)this.data[i] = this.initialData[i];\n        return this;\n    },\n    // Sets the initial data.\n    initial: function(data) {\n        this.initialData = data;\n        return this.reset();\n    },\n    // Sets the time scale (animation speed).\n    speed: function(value) {\n        this.timeScale = value > 0.0 ? value : 1.0;\n        return this;\n    },\n    // Sets the output data object.\n    setOutput: function(data) {\n        this.data = data;\n        return this;\n    },\n    // Pauses the animation.\n    pause: function() {\n        if (this.paused) return;\n        clearInterval(this.handle);\n        this.paused = true;\n    },\n    // Resumes the animation.\n    resume: function() {\n        if (!this.paused) return;\n        let lastTime = Date.now() / 1000;\n        this.handle = setInterval(()=>{\n            let curTime = Date.now() / 1000;\n            let dt = curTime - lastTime;\n            lastTime = curTime;\n            this.update(dt);\n            if (this.onUpdatedCallback) this.onUpdatedCallback(this.data, this);\n        }, 16);\n        if (this.onUpdatedCallback) this.onUpdatedCallback(this.data, this);\n        this.paused = false;\n    },\n    // Updates the animation by the specified delta time (seconds).\n    update: function(dt) {\n        if (this.paused) return false;\n        if (this.index >= this.block.length) return true;\n        let i = 0;\n        let _block;\n        let _index;\n        let _blockTime;\n        this.time += dt * this.timeScale;\n        while(this.index < this.block.length){\n            let cmd = this.block[this.index];\n            let duration;\n            switch(cmd.op){\n                case \"parallel\":\n                    if (cmd.started == false) {\n                        cmd.blocks.length = 0;\n                        cmd.started = true;\n                        for(i = 0; i < cmd.block.length; i++){\n                            cmd.blocks.push([\n                                cmd.block[i]\n                            ]);\n                            cmd.indices[i] = 0;\n                            cmd.blockTimes[i] = this.blockTime;\n                        }\n                    }\n                    _block = this.block;\n                    _index = this.index;\n                    _blockTime = this.blockTime;\n                    let n = 0;\n                    let blockTime = _blockTime;\n                    for(i = 0; i < cmd.blocks.length; i++){\n                        this.block = cmd.blocks[i];\n                        this.index = cmd.indices[i];\n                        this.blockTime = cmd.blockTimes[i];\n                        if (this.update(0) === true) n++;\n                        if (this.blockTime > blockTime) blockTime = this.blockTime;\n                        cmd.blockTimes[i] = this.blockTime;\n                        cmd.blocks[i] = this.block;\n                        cmd.indices[i] = this.index;\n                    }\n                    this.block = _block;\n                    this.index = _index;\n                    this.blockTime = _blockTime;\n                    if (cmd.fn) cmd.fn.call(this);\n                    if (n != cmd.blocks.length) return false;\n                    cmd.started = false;\n                    this.blockTime = blockTime;\n                    this.index++;\n                    break;\n                case \"serial\":\n                    if (cmd.started == false) {\n                        cmd._block = cmd.block;\n                        cmd._index = 0;\n                        cmd._blockTime = this.blockTime;\n                        cmd.started = true;\n                    }\n                    _block = this.block;\n                    _index = this.index;\n                    _blockTime = this.blockTime;\n                    this.block = cmd._block;\n                    this.index = cmd._index;\n                    this.blockTime = cmd._blockTime;\n                    i = this.update(0);\n                    cmd._block = this.block;\n                    cmd._index = this.index;\n                    cmd._blockTime = this.blockTime;\n                    this.block = _block;\n                    this.index = _index;\n                    this.blockTime = _blockTime;\n                    if (cmd.fn) cmd.fn.call(this);\n                    if (i !== true) return false;\n                    cmd.started = false;\n                    this.blockTime = cmd._blockTime;\n                    this.index++;\n                    break;\n                case \"repeat\":\n                    if (cmd.started == false) {\n                        cmd._block = cmd.block;\n                        cmd._index = 0;\n                        cmd._blockTime = this.blockTime;\n                        cmd._count = cmd.count;\n                        cmd.started = true;\n                    }\n                    _block = this.block;\n                    _index = this.index;\n                    _blockTime = this.blockTime;\n                    this.block = cmd._block;\n                    this.index = cmd._index;\n                    this.blockTime = cmd._blockTime;\n                    i = this.update(0);\n                    cmd._block = this.block;\n                    cmd._index = this.index;\n                    cmd._blockTime = this.blockTime;\n                    this.block = _block;\n                    this.index = _index;\n                    this.blockTime = _blockTime;\n                    if (cmd.fn) cmd.fn.call(this);\n                    if (i !== true) return false;\n                    if (cmd._count <= 1) {\n                        cmd.started = false;\n                        this.blockTime = cmd._blockTime;\n                        this.index++;\n                        return false;\n                    } else {\n                        cmd._index = 0;\n                        cmd._count--;\n                        return false;\n                    }\n                    break;\n                case \"set\":\n                    this.data[cmd.field] = cmd.value;\n                    this.index++;\n                    break;\n                case \"restart\":\n                    this.index = 0;\n                    break;\n                case \"wait\":\n                    duration = (0, $k7heJ$Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) return false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"range\":\n                    if (cmd.started == false) {\n                        if (cmd.startValue === null) cmd._startValue = this.data[cmd.field];\n                        else cmd._startValue = cmd.startValue;\n                        cmd._endValue = cmd.endValue;\n                        cmd.started = true;\n                    }\n                    duration = (0, $k7heJ$Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) dt = (this.time - this.blockTime) / duration;\n                    else dt = 1;\n                    if (cmd.easing && dt != 1.0) this.data[cmd.field] = cmd.easing(dt) * (cmd._endValue - cmd._startValue) + cmd._startValue;\n                    else this.data[cmd.field] = dt * (cmd._endValue - cmd._startValue) + cmd._startValue;\n                    if (dt != 1) return false;\n                    cmd.started = false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"rand\":\n                    if (cmd.started == false) {\n                        cmd.started = true;\n                        cmd.last = null;\n                    }\n                    duration = (0, $k7heJ$Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) dt = (this.time - this.blockTime) / duration;\n                    else dt = 1;\n                    if (cmd.easing && dt != 1) cmd.cur = ~~(cmd.easing(dt) * cmd.count);\n                    else cmd.cur = ~~(dt * cmd.count);\n                    if (cmd.cur != cmd.last) {\n                        while(true){\n                            i = ~~(Math.random() * (cmd.endValue - cmd.startValue + 1)) + cmd.startValue;\n                            if (i != this.data[cmd.field]) break;\n                        }\n                        this.data[cmd.field] = i;\n                        cmd.last = cmd.cur;\n                    }\n                    if (dt != 1) return false;\n                    cmd.started = false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"randt\":\n                    duration = (0, $k7heJ$Rinn).typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n                    if (this.time < this.blockTime + duration) dt = (this.time - this.blockTime) / duration;\n                    else dt = 1;\n                    if (cmd.easing && dt != 1) i = cmd.easing(dt) * (cmd.count - 1);\n                    else i = dt * (cmd.count - 1);\n                    this.data[cmd.field] = cmd.table[~~((i + cmd.count) % cmd.count)];\n                    if (dt != 1) return false;\n                    this.blockTime += duration;\n                    this.index++;\n                    break;\n                case \"play\":\n                    cmd.snd.play();\n                    this.index++;\n                    break;\n                case \"exec\":\n                    cmd.fn.call(this, this);\n                    this.index++;\n                    break;\n            }\n        }\n        if (this.block == this.list) {\n            if (!this.finished && this.onFinishedCallback != null) this.onFinishedCallback();\n            this.pause();\n            this.finished = true;\n        }\n        return true;\n    },\n    // Runs the subsequent commands in parallel. Should end the parallel block by calling end().\n    parallel: function() {\n        let block = [];\n        this.block.push({\n            op: \"parallel\",\n            started: false,\n            block: block,\n            blocks: [],\n            indices: [],\n            blockTimes: []\n        });\n        this.stack.push(this.block);\n        this.block = block;\n        return this;\n    },\n    // Runs the subsequent commands in series. Should end the serial block by calling end().\n    serial: function() {\n        let block = [];\n        this.block.push({\n            op: \"serial\",\n            started: false,\n            block: block\n        });\n        this.stack.push(this.block);\n        this.block = block;\n        return this;\n    },\n    // Repeats a block the specified number of times.\n    repeat: function(count) {\n        let block = [];\n        this.block.push({\n            op: \"repeat\",\n            started: false,\n            block: block,\n            count: count\n        });\n        this.stack.push(this.block);\n        this.block = block;\n        return this;\n    },\n    // Sets the callback of the current block.\n    callback: function(fn) {\n        let block = this.stack[this.stack.length - 1];\n        block[block.length - 1].fn = fn;\n        return this;\n    },\n    // Ends a parallel(), serial() or repeat() block.\n    end: function() {\n        this.block = this.stack.pop();\n        return this;\n    },\n    // Sets the value of a variable.\n    set: function(field, value) {\n        this.block.push({\n            op: \"set\",\n            field: field,\n            value: value\n        });\n        return this;\n    },\n    // Restarts the current block.\n    restart: function(duration) {\n        this.block.push({\n            op: \"restart\"\n        });\n        return this;\n    },\n    // Waits for the specified duration.\n    wait: function(duration) {\n        this.block.push({\n            op: \"wait\",\n            duration: duration\n        });\n        return this;\n    },\n    // Sets the range of a variable.\n    range: function(field, duration, startValue, endValue, easing) {\n        this.block.push({\n            op: \"range\",\n            started: false,\n            field: field,\n            duration: duration,\n            startValue: startValue,\n            endValue: endValue,\n            easing: easing ? easing : null\n        });\n        return this;\n    },\n    // Generates a certain amount of random numbers in the given range (inclusive).\n    rand: function(field, duration, count, startValue, endValue, easing) {\n        this.block.push({\n            op: \"rand\",\n            started: false,\n            field: field,\n            duration: duration,\n            count: count,\n            startValue: startValue,\n            endValue: endValue,\n            easing: easing ? easing : null\n        });\n        return this;\n    },\n    // Generates a certain amount of random numbers in the given range (inclusive). This uses a static random table to determine the next values.\n    randt: function(field, duration, count, startValue, endValue, easing) {\n        let table = [];\n        for(let i = 0; i < count; i++)table.push(i % (endValue - startValue + 1) + startValue);\n        for(let i = count >> 2; i > 0; i--){\n            let a = ~~(Math.random() * count);\n            let b = ~~(Math.random() * count);\n            let c = table[b];\n            table[b] = table[a];\n            table[a] = c;\n        }\n        this.block.push({\n            op: \"randt\",\n            field: field,\n            duration: duration,\n            count: count,\n            startValue: startValue,\n            endValue: endValue,\n            table: table,\n            easing: easing ? easing : null\n        });\n        return this;\n    },\n    // Plays a sound.\n    play: function(snd) {\n        this.block.push({\n            op: \"play\",\n            snd: snd\n        });\n        return this;\n    },\n    // Executes a function.\n    exec: function(fn) {\n        this.block.push({\n            op: \"exec\",\n            fn: fn\n        });\n        return this;\n    }\n});\nvar $54865aa6b345efd5$export$2e2bcd8739ae039 = $54865aa6b345efd5$var$Anim;\n\n\n/*\n    <r-tabs data-container=\"div.tab-container\" data-base-route=\"@\" data-initial=\"tab1\">\n        <a data-name=\"tab1\">Tab-1</a>\n        <a data-name=\"tab2\">Tab-2</a>\n        <a data-name=\"tab3\">Tab-3</a>\n    </r-tabs>\n\n    <div class=\"tab-container\">\n        <div data-name=\"tab1\">\n            This is tab-1.\n        </div>\n\n        <div data-name=\"tab2\">\n            This is tab-2.\n        </div>\n\n        <div data-name=\"tab3\">\n            This is tab-3.\n        </div>\n    </div>\n\n    .is-hidden {\n        display: none;\n    }\n\n    r-tabs [data-name].is-active {\n        font-weight: bold;\n    }\n*/ \n\nvar $4a9d88aa888e9f4d$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-tabs\", {\n    /**\n     * Container element for tab content.\n     */ container: null,\n    /**\n     * Active tab name.\n     */ activeTab: null,\n    /**\n    **\tElement events.\n    */ \"event click [data-name]\": function(evt) {\n        evt.continuePropagation = true;\n        if (this.dataset.baseRoute) {\n            location = \"#\" + (0, $7718a52dfca15325$export$2e2bcd8739ae039).realLocation(this.dataset.baseRoute.replace(\"@\", evt.source.dataset.name));\n            return;\n        }\n        this.selectTab(evt.source.dataset.name);\n    },\n    /**\n    **\tInitializes the Tabs element.\n    */ init: function() {\n        this._routeHandler = (evt, args)=>{\n            if ((0, $7718a52dfca15325$export$2e2bcd8739ae039).location != \"\") this.querySelectorAll(\"[href]\").forEach((link)=>{\n                if (!link.href) return;\n                if ((0, $7718a52dfca15325$export$2e2bcd8739ae039).location.startsWith(link.href.substr(link.href.indexOf(\"#\") + 1))) {\n                    link.classList.add(\"is-active\");\n                    link.classList.remove(\"is-inactive\");\n                } else {\n                    link.classList.add(\"is-inactive\");\n                    link.classList.remove(\"is-active\");\n                }\n                link.classList.remove(\"anim-ended\");\n                link.onanimationend = ()=>{\n                    link.onanimationend = null;\n                    link.classList.add(\"anim-ended\");\n                };\n            });\n            if (!args.route.changed) return;\n            this.showTab(args.tabName);\n        };\n    },\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ ready: function() {\n        if (\"container\" in this.dataset) {\n            if (this.dataset.container == \":previousElement\") this.container = this.previousElementSibling;\n            else if (this.dataset.container == \":nextElement\") this.container = this.nextElementSibling;\n            else if (this.dataset.container == \":none\") this.container = null;\n            else this.container = document.querySelector(this.dataset.container);\n        } else this.container = this.nextElementSibling;\n        this._hideTabsExcept(this.dataset.initial);\n    },\n    /**\n    **\tAdds a handler to Router if the data-base-route attribute was set.\n    */ onConnected: function() {\n        if (this.dataset.baseRoute) (0, $7718a52dfca15325$export$2e2bcd8739ae039).addRoute(this.dataset.baseRoute.replace(\"@\", \":tabName\"), this._routeHandler);\n    },\n    /**\n    **\tRemoves a handler previously added to Router if the data-base-route attribute was set.\n    */ onDisconnected: function() {\n        if (this.dataset.baseRoute) (0, $7718a52dfca15325$export$2e2bcd8739ae039).removeRoute(this.dataset.baseRoute.replace(\"@\", \":tabName\"), this._routeHandler);\n    },\n    /**\n    **\tHides all tabs except the one with the specified exceptName, if none specified then all tabs will be hidden (adds `.is-hidden` CSS class),\n    **\tadditionally the respective link item in the tab definition will have class `.is-active`.\n    */ _hideTabsExcept: function(exceptName) {\n        if (!exceptName) exceptName = \"\";\n        if (this.container != null) this.container.querySelectorAll(\":scope > [data-name]\").forEach((i)=>{\n            if (i.dataset.name === exceptName) {\n                i.classList.remove(\"is-hidden\");\n                this.dispatch(\"tabShown\", {\n                    name: i.dataset.name,\n                    el: i\n                });\n            } else {\n                i.classList.add(\"is-hidden\");\n                this.dispatch(\"tabHidden\", {\n                    name: i.dataset.name,\n                    el: i\n                });\n            }\n        });\n        this.querySelectorAll(\"[data-name]\").forEach((link)=>{\n            if (link.dataset.name === exceptName) {\n                link.classList.add(\"is-active\");\n                link.classList.remove(\"is-inactive\");\n            } else {\n                link.classList.add(\"is-inactive\");\n                link.classList.remove(\"is-active\");\n            }\n            link.classList.remove(\"anim-ended\");\n            link.onanimationend = ()=>{\n                link.onanimationend = null;\n                link.classList.add(\"anim-ended\");\n            };\n        });\n        this.activeTab = exceptName;\n        this.dispatch(\"tabChanged\", {\n            name: exceptName,\n            el: this\n        });\n    },\n    /**\n    **\tShows the tab with the specified name, ignores `data-base-route` and current route as well.\n    */ showTab: function(name) {\n        return this._hideTabsExcept(name);\n    },\n    /**\n    **\tShows a tab given its name. The route will be changed automatically if `data-base-route` is enabled.\n    */ selectTab: function(name) {\n        if (this.dataset.baseRoute) {\n            const hash = \"#\" + (0, $7718a52dfca15325$export$2e2bcd8739ae039).realLocation(this.dataset.baseRoute.replace(\"@\", name));\n            if (location.hash != hash) {\n                location = hash;\n                return;\n            }\n        }\n        this.showTab(name);\n    }\n});\n\n\n/*\n<r-form data-form-action=\"api-function-name\" [data-strict=\"true|false\"] [data-errors-at=\"\"] [data-method=\"post\"]>\n    <input type=\"text\" data-field=\"username\"/>\n</r-form>\n\nr-form .message.is-hidden {\n    display: none;\n}\n\nr-form span.field-error {\n    display: block;\n    color: red;\n}\n*/ \n\n\nvar $ec74230761e3bde8$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-form\", {\n    isRoot: true,\n    /**\n     * Initial form model.\n     */ model: {},\n    /**\n     * Element events.\n     */ events: {\n        \"change [data-field]\": \"_fieldChanged\",\n        \"click input[type=reset]\": \"reset\",\n        \"click .reset\": \"reset\",\n        \"click input[type=submit]\": \"submit\",\n        \"click button[type=submit]\": \"submit\",\n        \"click .submit\": \"submit\",\n        \"submit form\": \"submit\"\n    },\n    /**\n     * Executed when the children of the element are ready.\n     */ ready: function() {\n        let formElement = document.createElement(\"form\");\n        formElement.append(...this.childNodes);\n        this.append(formElement);\n        let def = {};\n        let names = this.model.get();\n        this.querySelectorAll(\"[data-field]\").forEach((i)=>{\n            i.name = i.dataset.field;\n            names[i.name] = i.type;\n            let val = i.dataset.default;\n            if (val == undefined) switch(i.type){\n                case \"radio\":\n                    if (!i.checked) return;\n                    val = i.value;\n                    break;\n                case \"checkbox\":\n                    val = i.checked ? \"1\" : \"0\";\n                    break;\n                case \"field\":\n                    val = i.getValue();\n                    break;\n                case \"file\":\n                    val = \"\";\n                    break;\n                default:\n                    val = \"\";\n                    break;\n            }\n            def[i.dataset.field] = val;\n        });\n        for(let name in names)if (name in def) names[name] = def[name];\n        else names[name] = \"\";\n        def = names;\n        this.model.defaults = def;\n        this.model.reset();\n        this.clearMarkers();\n    },\n    /**\n     * Transforms an string returned by the server to a local representation.\n     */ filterString: function(str, r) {\n        if (!str || !(\"messages\" in $parcel$global)) return str;\n        if (str.startsWith(\"@messages.\")) {\n            if (str.substr(10) in $parcel$global.messages) str = (0, $k7heJ$Template).eval($parcel$global.messages[str.substr(10)], r);\n        }\n        return str;\n    },\n    _change: function(elem) {\n        if (\"createEvent\" in document) {\n            let evt = document.createEvent(\"HTMLEvents\");\n            evt.initEvent(\"change\", false, true);\n            elem.dispatchEvent(evt);\n        } else elem.fireEvent(\"onchange\");\n    },\n    _setField: function(f, value, silent) {\n        if (!f) return;\n        for (f of this.querySelectorAll('[data-field=\"' + f + '\"]'))switch(f.type || f.tagName.toLowerCase()){\n            case \"select\":\n                f.val = f.dataset.value = f.multiple ? value ? value.split(\",\") : value : value;\n                f.value = f.val = f.dataset.value;\n                if (silent !== true) this._change(f);\n                break;\n            case \"checkbox\":\n                f.checked = parseInt(value) ? true : false;\n                break;\n            case \"radio\":\n                f.checked = value == f.value;\n                break;\n            case \"field\":\n                f.val = f.dataset.value = value;\n                f.setValue(value);\n                break;\n            case \"file\":\n                if (value instanceof File || value instanceof Blob) {\n                    f.val = value;\n                    f.dataset.value = value;\n                } else if (value instanceof FileList) {\n                    f.val = value;\n                    f.dataset.value = value;\n                } else {\n                    f.val = f.dataset.value = \"\";\n                    f.value = \"\";\n                }\n                break;\n            default:\n                f.val = f.dataset.value = value;\n                f.value = value;\n                if (silent !== true) this._change(f);\n                break;\n        }\n    },\n    _getField: function(f, _value = null, fromFileFields = false) {\n        if (!f) return null;\n        if (typeof f != \"string\") {\n            let value = f.value == null ? f.val : f.value;\n            if (value === null) value = _value;\n            switch(f.type || f.tagName.toLowerCase()){\n                case \"select\":\n                    _value = f.multiple ? value ? value.join(\",\") : value : value;\n                    break;\n                case \"checkbox\":\n                    _value = f.checked ? \"1\" : \"0\";\n                    break;\n                case \"radio\":\n                    if (f.checked) _value = f.value;\n                    break;\n                case \"field\":\n                    _value = f.getValue();\n                    break;\n                case \"file\":\n                    _value = fromFileFields ? f.files && f.files.length ? f.multiple ? f.files : f.files[0] : null : f.val;\n                    break;\n                default:\n                    _value = value;\n                    break;\n            }\n            return _value === null ? \"\" : _value;\n        }\n        _value = null;\n        for (f of this.querySelectorAll('[data-field=\"' + f + '\"]'))_value = this._getField(f, _value);\n        return _value === null ? \"\" : _value;\n    },\n    getField: function(name) {\n        return this._getField(name);\n    },\n    clearMarkers: function() {\n        this.classList.remove(\"busy\");\n        this.querySelectorAll(\".message\").forEach((i)=>i.classList.add(\"is-hidden\"));\n        this.querySelectorAll(\"span.field-error\").forEach((i)=>i.remove());\n        this.querySelectorAll(\".field-error\").forEach((i)=>{\n            i.classList.remove(\"field-error\");\n            i.classList.remove(\"is-invalid\");\n        });\n        this.querySelectorAll(\".field-passed\").forEach((i)=>i.classList.remove(\"field-passed\"));\n    },\n    _fieldChanged: function(evt) {\n        let f = evt.source;\n        if (f.type == \"file\") this.model.set(f.dataset.field, this._getField(f, null, true), true);\n        else this.model.set(f.dataset.field, this._getField(f));\n        evt.continuePropagation = true;\n    },\n    onModelPropertyChanged: function(evt, args) {\n        this._setField(args.name, args.value);\n    },\n    _onSuccess: function(r) {\n        this.classList.remove(\"busy\");\n        this.clearMarkers();\n        let tmp;\n        this.dispatch(\"formSuccess\", r);\n        if (r.message && (tmp = this.querySelector(\".message.success\")) != null) {\n            tmp.innerHTML = this.filterString(r.message, r).replace(/\\n/g, \"<br/>\");\n            tmp.classList.remove(\"is-hidden\");\n            tmp.onanimationend = ()=>tmp.classList.add(\"is-hidden\");\n        }\n    },\n    _onFailure: function(r) {\n        this.classList.remove(\"busy\");\n        this.clearMarkers();\n        let tmp;\n        this.dispatch(\"formError\", r);\n        if (r.fields) {\n            for(let i in r.fields){\n                let f = this.querySelector('[data-field-container=\"' + i + '\"]');\n                if (!f) {\n                    f = this.querySelector('[data-field=\"' + i + '\"]');\n                    if (!f) continue;\n                }\n                let tmp = document.createElement(\"span\");\n                tmp.classList.add(\"field-error\");\n                tmp.innerHTML = this.filterString(r.fields[i], r).replace(/\\n/g, \"<br/>\");\n                f.classList.add(\"field-error\");\n                f.classList.add(\"is-invalid\");\n                if (this.dataset.errorsAt == \"bottom\") f.parentElement.append(tmp);\n                else if (this.dataset.errorsAt == \"top\") f.parentElement.prepend(tmp);\n                else f.parentElement.insertBefore(tmp, f.nextElementSibling);\n                setTimeout(function(tmp) {\n                    return function() {\n                        tmp.classList.add(\"active\");\n                    };\n                }(tmp), 25);\n            }\n            if (r.error && (tmp = this.querySelector(\".message.error\")) != null) {\n                tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, \"<br/>\");\n                tmp.classList.remove(\"is-hidden\");\n                tmp.onanimationend = ()=>tmp.classList.add(\"is-hidden\");\n            }\n        } else if ((tmp = this.querySelector(\".message.error\")) != null) {\n            tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, \"<br/>\") || \"Error: \" + r.response;\n            tmp.classList.remove(\"is-hidden\");\n            tmp.onanimationend = ()=>tmp.classList.add(\"is-hidden\");\n        }\n    },\n    reset: function(nsilent) {\n        this.model.reset(nsilent);\n        this.clearMarkers();\n        if (nsilent === false) for(var i in this.model.data)this._setField(i, this.model.data[i], true);\n        return false;\n    },\n    submit: function() {\n        if (this.classList.contains(\"busy\")) return;\n        let data = {};\n        if (this.dataset.strict == \"false\") Object.assign(data, this.model.get());\n        let list = {};\n        this.querySelectorAll(\"[data-field]\").forEach((e)=>list[e.dataset.field] = true);\n        Object.keys(list).forEach((f)=>data[f] = this._getField(f));\n        this.dispatch(\"beforeSubmit\", data);\n        this.model.set(data);\n        let f = this.dataset.formAction || this.formAction;\n        if (!f) return;\n        this.classList.add(\"busy\");\n        if (typeof f != \"function\") {\n            data.f = f;\n            (0, $d584b999ce7bb535$export$2e2bcd8739ae039).apiCall(data, (r)=>this[r.response == 200 ? \"_onSuccess\" : \"_onFailure\"](r), (r)=>this._onFailure({\n                    error: \"Unable to execute request.\"\n                }), this.dataset.method ?? \"POST\");\n        } else f(data, (r)=>this[r.response == 200 ? \"_onSuccess\" : \"_onFailure\"](r));\n    }\n});\n\n\n/*\n    <r-panel data-route=\"name\">\n    </r-panel>\n\n    r-panel {\n        display: block;\n    }\n\n    r-panel:not(.is-active) {\n        display: none;\n    }\n\n    r-panel.is-inactive {\n    }\n\n    r-panel.is-active {\n    }\n*/ \n\nvar $9c0636c07ff6144e$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-panel\", {\n    /**\n     * Route object used by this element.\n     */ route: null,\n    /**\n     * Initializes the element.\n     */ init: function() {\n        this.style.display = \"\";\n        // Executed then the panel route is activated.\n        this._onActivate = (evt, args)=>{\n            if (!args.route.changed) return;\n            this.show(true);\n        };\n        // Executed then the panel route is deactivated.\n        this._onDeactivate = (evt, args)=>{\n            this.hide();\n        };\n        this.hide();\n    },\n    /**\n     * Adds a handler to Router if the data-route attribute was set.\n     */ onConnected: function() {\n        if (this.dataset.route) {\n            this.route = (0, $7718a52dfca15325$export$2e2bcd8739ae039).addRoute(this.dataset.route, this._onActivate, this._onDeactivate);\n            this.classList.remove(\"is-active\");\n            this.classList.add(\"is-inactive\");\n        } else {\n            this.classList.add(\"is-active\");\n            this.classList.remove(\"is-inactive\");\n        }\n        this.classList.add(\"anim-ended\");\n    },\n    /**\n     * Removes a handler previously added to Router if the data-route attribute was set.\n     */ onDisconnected: function() {\n        if (this.dataset.route) (0, $7718a52dfca15325$export$2e2bcd8739ae039).removeRoute(this.dataset.route, this._onActivate, this._onDeactivate);\n    },\n    /**\n     * Hides the panel by removing the `is-active` and adding `is-inactive` class to the element. Fires `panelHidden` event.\n     */ hide: function() {\n        this.dispatch(\"panelHidden\", this.route ? this.route.args : {});\n        this.classList.remove(\"anim-ended\");\n        this.classList.remove(\"is-active\");\n        this.classList.add(\"is-inactive\");\n        this.onanimationend = ()=>{\n            this.classList.add(\"anim-ended\");\n            this.onanimationend = null;\n        };\n    },\n    /**\n     * Shows the panel visible by adding `is-active` and removing `is-inactive` class from the element. If `silent` is true and `data-route` enabled,\n     * the current route will not be updated. Fires `panelShown` event.\n     * @param {boolean} silent \n     */ show: function(silent = false) {\n        if (this.dataset.route && !silent) {\n            let hash = \"#\" + this.dataset.route;\n            if (window.location.hash.substr(0, hash.length) != hash) {\n                window.location = hash;\n                return;\n            }\n        }\n        this.dispatch(\"panelShown\", this.route ? this.route.args : {});\n        this.classList.remove(\"anim-ended\");\n        this.classList.remove(\"is-inactive\");\n        this.classList.add(\"is-active\");\n        this.onanimationend = ()=>{\n            this.classList.add(\"anim-ended\");\n            this.onanimationend = null;\n        };\n    },\n    /**\n     * Toggles the visibility of the panel. If `silent` is true and `data-route` enabled, the current route will not be updated.\n     */ toggleVisibility: function(silent = false) {\n        if (this.classList.contains(\"is-active\")) this.hide();\n        else this.show(silent);\n    }\n});\n\n\n/*\n    <r-list data-list=\"window.dataList1\" data-container=\".x-data\" data-wrap=\"true|false\">\n\n        <template data-mode=\"static|dynamic\">\n        </template>\n\n        <div class=\"x-empty\">\n            Nothing to show.\n        </div>\n\n        <div class=\"x-data\">\n        </div>\n\n    </r-list>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n    Modifiers:\n        .x-empty-null\t\tVisible when the list is in undefined state (before first load).\n        .x-empty\t\t\tVisible when there is no data in the list.\n        .x-not-empty \t\tVisible when there is data in the list.\n        .is-loading \t\tVisible when the list is loading.\n*/ \n\nvar /*\n**\tConnects to a ModelList and renders its contents using a template. When using \"dynamic\" template, the contents can be other custom elements, and\n**\tthe model of each item can be accessed by using data-model=\":list-item\", which will cause the item model to be added to the element.\n**\n**\tAdditionally root attribute data-wrap can be set to 'true' to wrap the template contents inside a div with a data-iid representing the ID of the\n**\titem, this will cause any changes to items to affect only the specific item in question.\n*/ $a4fb830b2d507403$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-list\", {\n    list: null,\n    container: null,\n    template: null,\n    isEmpty: false,\n    isDynamicTemplate: false,\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ ready: function() {\n        this.container = this.querySelector(this.dataset.container || \".x-data\");\n        if (!this.container) {\n            this.container = document.createElement(\"div\");\n            this.container.className = \"x-data\";\n            this.appendChild(this.container);\n        }\n        let tmp = this.template_elem = this.querySelector(\"template\");\n        if (tmp) {\n            if (tmp.dataset.mode != \"dynamic\") this.template = (0, $k7heJ$Template).compile(tmp.innerHTML);\n            else {\n                this.template = ()=>tmp.innerHTML;\n                this.isDynamicTemplate = true;\n            }\n            tmp.remove();\n        } else this.template = ()=>\"\";\n        this.container.textContent = \" \";\n        this.setEmpty(null);\n        this.setLoading(null);\n    },\n    /**\n    **\tExecuted when the children of the element are ready.\n    */ rready: function() {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error(\"data-list not found: \" + this.dataset.list);\n            return;\n        }\n        this.setList(list);\n    },\n    /*\n    **\tIndicates if the list is empty. Elements having x-empty, x-not-empty and x-empty-null will be updated.\n    */ setEmpty: function(value) {\n        if (this.isEmpty === value) return;\n        if (value === true) {\n            this.querySelectorAll(\".x-empty\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-empty-null\").forEach((i)=>i.classList.add(\"is-hidden\"));\n        } else if (value === false) {\n            this.querySelectorAll(\".x-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n            this.querySelectorAll(\".x-empty-null\").forEach((i)=>i.classList.add(\"is-hidden\"));\n        } else {\n            this.querySelectorAll(\".x-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i)=>i.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-empty-null\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n        }\n        this.isEmpty = value;\n    },\n    /*\n    **\tIndicates if the list is loading. Elements having is-loading will be updated.\n    */ setLoading: function(value) {\n        if (value === true) this.querySelectorAll(\".is-loading\").forEach((i)=>i.classList.remove(\"is-hidden\"));\n        else this.querySelectorAll(\".is-loading\").forEach((i)=>i.classList.add(\"is-hidden\"));\n    },\n    /**\n    **\tSets the list model-list of the element.\n    */ setList: function(list) {\n        if (!list || !(0, $k7heJ$Rinn).isInstanceOf(list, (0, $k7heJ$ModelList)) || this.list === list) return;\n        if (this.list != null) {\n            if (this.list.dataSource) this.list.dataSource.removeEventListener(this.eid + \":*\");\n            if (this.list.dataList) this.list.dataList.removeEventListener(this.eid + \":*\");\n            this.list.removeEventListener(this.eid + \":*\");\n        }\n        this.list = list;\n        if (this.list.dataSource) {\n            this.list.dataSource.addEventListener(this.eid + \":listLoading\", this.onLoading, this);\n            this.list.dataSource.addEventListener(this.eid + \":listLoaded\", this.onLoaded, this);\n        }\n        if (this.list.dataList) {\n            this.list.dataList.addEventListener(this.eid + \":listLoading\", this.onLoading, this);\n            this.list.dataList.addEventListener(this.eid + \":listLoaded\", this.onLoaded, this);\n        }\n        this.list.addEventListener(this.eid + \":itemsCleared\", this.onItemsCleared, this);\n        this.list.addEventListener(this.eid + \":itemsChanged\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemRemoved\", this.onItemRemoved, this);\n        this.list.addEventListener(this.eid + \":itemChanged\", this.onItemChanged, this);\n        this.list.addEventListener(this.eid + \":itemAdded\", this.onItemAdded, this);\n    },\n    /*\n    **\tBuilds an item (inside a div) to be added to the container.\n    */ buildItem: function(iid, data, asHtml = false) {\n        if (this.content) {\n            let elem = this.content(data.get(), data);\n            elem.dataset.iid = iid;\n            return elem;\n        }\n        if (this.container.content) {\n            let elem = this.container.content(data.get(), data);\n            elem.dataset.iid = iid;\n            return elem;\n        }\n        let html = this.template(data.get());\n        if (asHtml) return html;\n        let elem = document.createElement(\"div\");\n        elem.dataset.iid = iid;\n        elem.innerHTML = html;\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach((i)=>{\n            i.model = data;\n            i.dataset.model = \"this.model\";\n        });\n        for (let attr of this.template_elem.attributes){\n            if (attr.nodeName.startsWith(\"data-_\") || attr.nodeName == \"data-mode\") continue;\n            elem.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        return elem;\n    },\n    /*\n    **\tExecuted when the list is loading.\n    */ onLoading: function() {\n        this.setLoading(true);\n    },\n    /*\n    **\tExecuted when the list finished loading.\n    */ onLoaded: function() {\n        this.setLoading(false);\n    },\n    /*\n    **\tExecuted when the list is cleared.\n    */ onItemsCleared: function() {\n        this.container._timeout = setTimeout(()=>{\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = \"\";\n        }, 300);\n    },\n    /*\n    **\tExecuted when the items of the list changed.\n    */ onItemsChanged: function() {\n        if (this.list.length() == 0) return;\n        if (this.container._timeout) clearTimeout(this.container._timeout);\n        this.container._timeout = null;\n        this.container.textContent = \"\";\n        let i = 0;\n        for (let data of this.list.getData())if (this.dataset.wrap != \"false\") this.container.append(this.buildItem(this.list.itemId[i++], data));\n        else this.container.innerHTML += this.buildItem(this.list.itemId[i++], data, true);\n        this.setEmpty(i == 0);\n    },\n    /*\n    **\tExecuted when an item is removed from the list.\n    */ onItemRemoved: function(evt, args) {\n        if (this.dataset.wrap == \"false\") {\n            this.onItemsChanged();\n            return;\n        }\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        elem.remove();\n        this.setEmpty(this.list.length() == 0);\n    },\n    /*\n    **\tExecuted when an item changes.\n    */ onItemChanged: function(evt, args) {\n        if (this.isDynamicTemplate) return;\n        if (this.dataset.wrap == \"false\") {\n            this.onItemsChanged();\n            return;\n        }\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        elem.innerHTML = this.template(args.item);\n    },\n    /*\n    **\tExecuted when an item is added to the list.\n    */ onItemAdded: function(evt, args) {\n        if (args.position == \"head\") {\n            if (this.dataset.wrap != \"false\") this.container.prepend(this.buildItem(args.id, args.item));\n            else this.container.innerHTML = this.buildItem(args.id, args.item, true) + this.container.innerHTML;\n        } else if (this.dataset.wrap != \"false\") this.container.append(this.buildItem(args.id, args.item));\n        else this.container.innerHTML += this.buildItem(args.id, args.item, true);\n        this.setEmpty(false);\n    },\n    /**\n     * \tForces re-rendering of the element.\n     */ refresh: function() {\n        this.onItemsChanged();\n    }\n});\n\n\n/*\n    <r-item data-model=\"window.model1\">\n    </r-item>\n*/ \nvar $7061e6454a23ef4a$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-item\", {\n    isRoot: true,\n    /**\n     * Initializes the element.\n     */ init: function() {},\n    /**\n     * Executed when the children and root are ready.\n     */ rready: function() {\n        let model = this.dataModel ?? this.getFieldByPath(this.dataset.model);\n        if (!model) model = {};\n        this.setModel(model);\n    }\n});\n\n\n/*\n    <r-paginator data-source=\"window.dataSource1\" data-page-size=\"25\">\n        <span data-watch=\"count\">Showing [offsetStart] to [offsetEnd] out of [count]</span>\n\n        <button data-action=\"firstPage\">First</button>\n        <button data-action=\"prevPage\">&laquo;</button>\n        <button data-action=\"nextPage\">&raquo;</button>\n        <button data-action=\"lastPage\">Last</button>\n        <button data-action=\"refresh\">Refresh</button>\n\n        <input type=\"text\" data-property=\"pageSize\" />\n    </r-paginator>\n*/ \n\n\nvar /*\n**\tConnects to a data source to provide pagination features.\n*/ $8586bcf20c2e54e9$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-paginator\", {\n    isRoot: true,\n    source: null,\n    template: null,\n    /**\n    **\tInitializes the element.\n    */ init: function() {\n        this.setModel({\n            offsetStart: 0,\n            offsetEnd: 0,\n            count: 0,\n            offset: 0,\n            currentPageSize: this.dataset.pageSize || 25,\n            pageSize: this.dataset.pageSize || 25\n        });\n        this.listen(\"propertyChanged.pageSize\", (evt, args)=>{\n            if (this.model.get(\"currentPageSize\") == args.value) return;\n            this.model.set(\"currentPageSize\", args.value);\n            this.updateOffset(\"range\");\n        });\n    },\n    rready: function() {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error(\"data-source not found: \" + this.dataset.source);\n            return;\n        }\n        this.setSource(source);\n    },\n    /**\n    **\tSets the source model-list of the paginator.\n    */ setSource: function(source) {\n        if (!source || !(0, $k7heJ$Rinn).isInstanceOf(source, (0, $fe13c50c6c3e66d8$export$2e2bcd8739ae039)) || this.source === source) return;\n        if (this.source != null) {\n            this.source.removeEventListener(this.eid + \":*\");\n            this.source.includeCount = false;\n        }\n        this.source = source;\n        this.source.includeCount = true;\n        this.updateOffset();\n        this.source.addEventListener(this.eid + \":requestPropertyChanged\", this.onRequestPropertyChanged, this);\n        this.source.addEventListener(this.eid + \":countChanged\", this.onCountChanged, this);\n        this.source.addEventListener(this.eid + \":listItemRemoved\", this.onItemRemoved, this);\n        this.source.addEventListener(this.eid + \":listItemAdded\", this.onItemAdded, this);\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n    /*\n    **\tUpdates several offset related fields in the paginator model. Optionally refreshes the data source with the specified mode.\n    */ updateOffset: function(mode = null) {\n        this.model.set(\"offsetStart\", this.model.get(\"count\") != 0 ? this.model.get(\"offset\") + 1 : 0);\n        this.model.set(\"offsetEnd\", Math.min(this.model.get(\"count\"), this.model.get(\"offsetStart\") + this.model.getInt(\"pageSize\") - 1));\n        this.model.update(\"count\");\n        let _count = this.source.request.get(\"count\");\n        let _offset = this.source.request.get(\"offset\");\n        this.source.request.set(\"count\", this.model.getInt(\"pageSize\"));\n        this.source.request.set(\"offset\", this.model.get(\"offset\"));\n        if (mode && (_count != this.source.request.get(\"count\") || _offset != this.source.request.get(\"offset\"))) this.source.refresh(mode);\n    },\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */ onRequestPropertyChanged: function(evt, args) {\n        if (args.name == \"count\" || args.name == \"offset\") return;\n        this.model.set(args.name, args.value);\n    },\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */ onModelPropertyChanged: function(evt, args) {\n        let ignored = [\n            \"offsetStart\",\n            \"offsetEnd\",\n            \"count\",\n            \"offset\",\n            \"currentPageSize\",\n            \"pageSize\"\n        ];\n        if (ignored.indexOf(args.name) != -1) return;\n        if (this.source.request.get(args.name) == args.value) return;\n        this.source.request.set(args.name, args.value);\n        this.source.refresh(\"filter\");\n    },\n    /*\n    **\tExecuted when the remote count changes.\n    */ onCountChanged: function(evt, args) {\n        this.model.set(\"count\", evt.source.count, false);\n        this.updateOffset();\n    },\n    /*\n    **\tExecuted when an item is removed from the list.\n    */ onItemRemoved: function(evt, args) {\n        this.model.set(\"count\", this.model.getInt(\"count\") - 1, false);\n        this.updateOffset();\n    },\n    /*\n    **\tExecuted when an item is added to the list.\n    */ onItemAdded: function(evt, args) {\n        this.model.set(\"count\", this.model.getInt(\"count\") + 1, false);\n        this.updateOffset();\n    },\n    /*\n    **\tMoves to the previous page.\n    */ prevPage: function() {\n        if (this.model.get(\"offset\") <= 0) return;\n        let offs = this.model.get(\"offset\") - this.model.getInt(\"pageSize\");\n        if (offs < 0) offs = 0;\n        this.model.set(\"offset\", offs);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tMoves to the next page.\n    */ nextPage: function() {\n        let offs = this.model.get(\"offset\") + this.model.getInt(\"pageSize\");\n        if (offs >= this.model.get(\"count\")) return;\n        this.model.set(\"offset\", offs);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tMoves to the first page.\n    */ firstPage: function() {\n        this.model.set(\"offset\", 0);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tMoves to the last page.\n    */ lastPage: function() {\n        let offs = this.model.get(\"count\") - this.model.getInt(\"pageSize\");\n        if (offs < 0) offs = 0;\n        this.model.set(\"offset\", offs);\n        this.updateOffset(\"range\");\n    },\n    /*\n    **\tRefreshes the data source.\n    */ refresh: function() {\n        this.source.refresh(\"full\");\n    },\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */ clear: function(args) {\n        for(let i = 0; i < args.length; i++)this.model.set(args[i], \"\");\n    }\n});\n\n\n/*\n    <r-table data-source=\"window.dataSource1\">\n        <table>\n            <thead>\n                <tr>\n                    <th>A</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"x-data\">\n                <tr>\n                    <td>[a]</td>\n                    <td>[b]</td>\n                </tr>\n            </tbody>\n        </table>\n    </r-table>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n        th[data-sort] {\n            cursor: pointer; text-decoration: underline;\n        }\n\n        th[data-sort][data-order=\"asc\"]:before {\n            content: \"\\25B2\";\n        }\n\n        th[data-sort][data-order=\"desc\"]:before {\n            content: \"\\25BC\";\n        }\n\n    Modifiers:\n        .x-empty\t\t\tAdd to elements that should be shown only when there is no data in the data source.\n        .x-not-empty \t\tAdd to elements that should be shown only when there is data in the data source.\n        [data-sort]\t\t\tAdded to th/td elements in thead, marks the column as sortable.\n*/ \n\n\nvar /**\n * Connects to a DataSource and renders its contents as a table.\n */ $a1b0099052e4f8e1$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-table\", {\n    isRoot: true,\n    source: null,\n    template: null,\n    container: null,\n    isEmpty: null,\n    /**\n     * Initializes the element.\n     */ init: function() {\n        this.setModel({});\n    },\n    /**\n     * Executed when the children of the element are ready.\n     */ ready: function() {\n        this.container = this.querySelector(this.dataset.container || \"tbody.x-data\");\n        if (!this.container) throw new Error(\"r-table requires a container\");\n        if (this.container.dataset.mode != \"dynamic\") this.template = (0, $k7heJ$Template).compile(this.container.innerHTML);\n        else this.template = ()=>this.container.innerHTML;\n        this.temporalBody = document.createElement(\"tbody\");\n        this.container.textContent = \" \";\n        this.setEmpty(true);\n    },\n    /**\n     * Executed when the children and root elements are ready.\n     */ rready: function() {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error(\"data-source not found: \" + this.dataset.source);\n            return;\n        }\n        this.setSource(source);\n    },\n    /*\n    **\tIndicates if the table is empty. Elements having .x-not-empty will be hidden.\n    */ setEmpty: function(value) {\n        if (this.isEmpty === value) return;\n        if (value) {\n            this.querySelectorAll(\".x-empty\").forEach((i1)=>i1.classList.remove(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i1)=>i1.classList.add(\"is-hidden\"));\n        } else {\n            this.querySelectorAll(\".x-empty\").forEach((i1)=>i1.classList.add(\"is-hidden\"));\n            this.querySelectorAll(\".x-not-empty\").forEach((i1)=>i1.classList.remove(\"is-hidden\"));\n        }\n        this.isEmpty = value;\n    },\n    /**\n    **\tSets the data source of the element.\n    */ setSource: function(source) {\n        if (!source || !(0, $k7heJ$Rinn).isInstanceOf(source, (0, $fe13c50c6c3e66d8$export$2e2bcd8739ae039)) || this.source === source) return;\n        if (this.source != null) this.source.removeEventListener(this.eid + \":*\");\n        this.source = source;\n        this.source.addEventListener(this.eid + \":requestPropertyChanged\", this.onRequestPropertyChanged, this);\n        this.source.addEventListener(this.eid + \":listItemsCleared\", this.onItemsCleared, this);\n        this.source.addEventListener(this.eid + \":listItemsChanged\", this.onItemsChanged, this);\n        this.source.addEventListener(this.eid + \":listItemRemoved\", this.onItemRemoved, this);\n        this.source.addEventListener(this.eid + \":listItemChanged\", this.onItemChanged, this);\n        this.source.addEventListener(this.eid + \":listItemAdded\", this.onItemAdded, this);\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */ onRequestPropertyChanged: function(evt, args) {\n        this.model.set(args.name, args.value);\n        if (args.name == \"sort\") this.querySelectorAll(\"thead [data-sort]\").forEach((i1)=>i1.dataset.order = \"\");\n        else if (args.name == \"order\") {\n            let elem = this.querySelector('thead [data-sort=\"' + evt.source.get(\"sort\") + '\"]');\n            if (elem) elem.dataset.order = args.value;\n        }\n    },\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */ onModelPropertyChanged: function(evt, args) {\n        if (this.source.request.get(args.name) == args.value) return;\n        this.source.request.set(args.name, args.value);\n        let ignored = [\n            \"count\",\n            \"offset\"\n        ];\n        if (ignored.indexOf(args.name) != -1) return;\n        this.source.refresh(\"filter\");\n    },\n    /*\n    **\tEvent handler invoked when a property of the model is removed.\n    */ onModelPropertyRemoved: function(evt, args) {\n        if (typeof args.fields == \"string\") this.source.request.remove(i);\n        else args.fields.forEach((i1)=>this.source.request.remove(i1));\n        this.source.refresh(\"filter\");\n    },\n    /*\n    **\tBuilds an item to be added to the container.\n    */ buildItem: function(iid, data) {\n        if (this.container.content) {\n            let elem = this.container.content(data.get(), data);\n            elem.dataset.iid = iid;\n            return elem;\n        }\n        let elem = this.temporalBody;\n        elem.innerHTML = this.template(data.get());\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach((i1)=>{\n            i1.model = data;\n            i1.dataset.model = \"this.model\";\n        });\n        elem = elem.firstElementChild;\n        elem.dataset.iid = iid;\n        return elem;\n    },\n    /*\n    **\tExecuted when the list is cleared.\n    */ onItemsCleared: function(evt, args) {\n        this.container._timeout = setTimeout(()=>{\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = \"\";\n        }, 300);\n    },\n    /*\n    **\tExecuted when the items of the list changed.\n    */ onItemsChanged: function(evt, args) {\n        if (this.source.list.length() == 0) return;\n        if (this.container._timeout) clearTimeout(this.container._timeout);\n        this.container._timeout = null;\n        this.container.textContent = \"\";\n        let i1 = 0;\n        for (let data of this.source.list.getData())this.container.append(this.buildItem(this.source.list.itemId[i1++], data));\n        this.setEmpty(i1 == 0);\n    },\n    /*\n    **\tExecuted when an item is removed from the list.\n    */ onItemRemoved: function(evt, args) {\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        elem.remove();\n        this.setEmpty(this.source.list.length() == 0);\n    },\n    /*\n    **\tExecuted when an item changes.\n    */ onItemChanged: function(evt, args) {\n        let elem = this.container.querySelector('[data-iid=\"' + args.id + '\"]');\n        if (!elem) return;\n        let _elem = this.buildItem(args.id, args.item);\n        this.container.replaceChild(_elem, elem);\n    },\n    /*\n    **\tExecuted when an item is added to the list.\n    */ onItemAdded: function(evt, args) {\n        if (args.position == \"head\") this.container.prepend(this.buildItem(args.id, args.item));\n        else this.container.append(this.buildItem(args.id, args.item));\n        this.setEmpty(false);\n    },\n    /*\n    **\tHandles clicks to data-sort elements.\n    */ \"event click thead [data-sort]\": function(evt, args) {\n        if (this.source.request.get(\"sort\") == evt.source.dataset.sort) {\n            this.source.request.set(\"order\", this.source.request.get(\"order\") == \"asc\" ? \"desc\" : \"asc\");\n            this.source.refresh(\"order\");\n        } else {\n            this.source.request.set(\"sort\", evt.source.dataset.sort);\n            this.source.request.set(\"order\", \"asc\", true);\n            this.source.refresh(\"order\");\n        }\n    },\n    /*\n    **\tRefreshes the data source.\n    */ refresh: function() {\n        this.source.refresh(\"full\");\n    },\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */ clear: function(args) {\n        for(let i1 = 0; i1 < args.length; i1++)this.model.set(args[i1], \"\");\n    }\n});\n\n\n/*\n    <r-select data-list=\"window.dataList1\" data-blank=\"\"></r-select>\n*/ \n\nvar /*\n**\tConnects to a ModelList and renders its contents as a <select> element.\n*/ $e668322859586774$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-select\", {\n    list: null,\n    container: null,\n    value: \"\",\n    /**\n    **\tInitializes the element.\n    */ init: function() {\n        this.container = document.createElement(\"select\");\n        this.parentElement.insertBefore(this.container, this);\n        let list = [];\n        for (let attr of this.attributes){\n            if (attr.nodeName.startsWith(\"data-_\") || attr.nodeName == \"data-list\" || attr.nodeName == \"data-blank\") continue;\n            this.container.setAttribute(attr.nodeName, attr.nodeValue);\n            list.push(attr.nodeName);\n        }\n        if (this.disabled) this.container.disabled = this.disabled;\n        list.forEach((i)=>this.removeAttribute(i));\n        this.textContent = \" \";\n        this.style.display = \"none\";\n    },\n    /**\n    **\tExecuted when the children and parent of the element are ready.\n    */ rready: function() {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error(\"data-list not found: \" + this.dataset.list);\n            return;\n        }\n        this.setList(list);\n        if (this.parentElement.lastElementChild !== this) this.parentElement.append(this);\n    },\n    /**\n    **\tSets the list model-list of the element.\n    */ setList: function(list) {\n        if (!list || !(0, $k7heJ$Rinn).isInstanceOf(list, (0, $k7heJ$ModelList)) || this.list === list) return;\n        if (this.list != null) this.list.removeEventListener(this.eid + \":*\");\n        this.list = list;\n        if (this.list.dataSource) this.list.dataSource.includeEnum = true;\n        this.list.addEventListener(this.eid + \":itemsCleared\", this.onItemsCleared, this);\n        this.list.addEventListener(this.eid + \":itemsChanged\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemRemoved\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemChanged\", this.onItemsChanged, this);\n        this.list.addEventListener(this.eid + \":itemAdded\", this.onItemsChanged, this);\n        this.onItemsChanged();\n    },\n    /*\n    **\tExecuted when the list is cleared.\n    */ onItemsCleared: function(evt, args) {\n        this.container.textContent = \"\";\n    },\n    /*\n    **\tExecuted when the items of the list changed.\n    */ onItemsChanged: function(evt, args) {\n        if (this.list.length() == 0) return;\n        let list = this.list.getData();\n        let value, label, s = \"\";\n        if (list[0].has(\"value\")) value = \"value\";\n        else if (list[0].has(\"id\")) value = \"id\";\n        if (list[0].has(\"label\")) label = \"label\";\n        else if (list[0].has(\"name\")) label = \"name\";\n        if (\"blank\" in this.dataset) s += '<option value=\"\">' + this.dataset.blank + \"</option>\";\n        if (list[0].has(\"group\")) {\n            let groups = {};\n            list.forEach((i)=>groups[i.get(\"group\")] = null);\n            for(let i in groups)groups[i] = {\n                name: i,\n                list: []\n            };\n            list.forEach((i)=>groups[i.get(\"group\")].list.push(i));\n            groups = Object.values(groups);\n            groups.forEach((g)=>{\n                s += '<optgroup label=\"' + g.name + '\">';\n                g.list.forEach((i)=>s += '<option value=\"' + i.get(value) + '\">' + i.get(label) + \"</option>\");\n                s += \"</optgroup>\";\n            });\n        } else list.forEach((i)=>s += '<option value=\"' + i.get(value) + '\">' + i.get(label) + \"</option>\");\n        this.container.innerHTML = s;\n        this.container.value = this.container.dataset.value;\n    },\n    /**\n     * \tForces re-rendering of the element.\n     */ refresh: function() {\n        this.onItemsChanged();\n    }\n});\n\n\n/*\n    <r-image-cropper>\n    </r-image-cropper>\n*/ \nconst $a86ae7da7dd6c514$var$Utils = {\n    /**\n     * Forces the browser to show a download dialog.\n     * @param {string} filename\n     * @param {string} url\n     */ showDownload: function(filename, url) {\n        let link = document.createElement(\"a\");\n        link.href = url;\n        link.style.display = \"none\";\n        link.download = filename;\n        link.target = \"_blank\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    },\n    /**\n     * Forces the browser to show a file selection dialog.\n     * @param {boolean} allowMultiple\n     * @param {string} accept \n     * @param {function(File[])} callback \n     */ showFilePicker: function(allowMultiple, accept, callback) {\n        let input = document.createElement(\"input\");\n        input.type = \"file\";\n        input.accept = accept;\n        input.style.display = \"none\";\n        input.multiple = allowMultiple;\n        document.body.appendChild(input);\n        input.onchange = function() {\n            callback(input.files);\n        };\n        document.body.onfocus = function() {\n            document.body.onfocus = null;\n            document.body.removeChild(input);\n        };\n        input.click();\n    },\n    /**\n     * Loads a file or blob and returns the content as a dataURL.\n     * @param {File|Blob} file\n     * @param {function(string)} callback\n     */ loadAsDataUrl: function(file, callback) {\n        let reader = new FileReader();\n        reader.onload = function(e) {\n            callback(e.target.result, null);\n        };\n        reader.onerror = function(e) {\n            callback(null, e);\n        };\n        reader.readAsDataURL(file);\n    },\n    /**\n     * Loads a file or blob and returns the content as text.\n     * @param {File|Blob} file\n     * @param {function(string)} callback\n     */ loadAsText: function(file, callback) {\n        let reader = new FileReader();\n        reader.onload = function(e) {\n            callback(e.target.result);\n        };\n        reader.readAsText(file);\n    },\n    /**\n     * Loads a file or blob and returns the content as array buffer.\n     * @param {File|Blob} file\n     * @param {function(ArrayBuffer)} callback\n     */ loadAsArrayBuffer: function(file, callback) {\n        let reader = new FileReader();\n        reader.onload = function(e) {\n            callback(e.target.result);\n        };\n        reader.readAsArrayBuffer(file);\n    },\n    /**\n     * Loads a list of files or blobs and returns the content as dataURLs.\n     * @param {Array<File|Blob>} fileList\n     * @param {function([{ name:string, size:number, url:string }])} callback\n     */ loadAllAsDataUrl: function(fileList, callback) {\n        let result = [];\n        if (!fileList || !fileList.length) {\n            callback(result);\n            return;\n        }\n        let loadNext = function(i) {\n            if (i == fileList.length) {\n                callback(result);\n                return;\n            }\n            $a86ae7da7dd6c514$var$Utils.loadAsDataUrl(fileList[i], function(url, err) {\n                if (!err) result.push({\n                    name: fileList[i].name,\n                    size: fileList[i].size,\n                    url: url\n                });\n                loadNext(i + 1);\n            });\n        };\n        loadNext(0);\n    },\n    /**\n     * Loads an image from a url and returns it as an Image object.\n     * @param {string} url\n     * @param {function(Image)} callback\n     */ loadImageFromUrl: function(url, callback) {\n        let image = new Image();\n        image.onload = ()=>callback(image);\n        image.onerror = ()=>callback(null);\n        image.src = url;\n    }\n};\nvar $a86ae7da7dd6c514$export$2e2bcd8739ae039 = $a86ae7da7dd6c514$var$Utils;\n\n\nvar $183fe4f5f56cd7be$export$2e2bcd8739ae039 = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039).register(\"r-image-cropper\", {\n    /*\n    **\tDefault aspect ratio.\n    */ aspectRatio: 1,\n    /*\n    **\tCurrent image scale.\n    */ imageScale0: 0,\n    imageScale: 1,\n    /*\n    **\tImage translation offsets.\n    */ imageOffsX: 0,\n    imageOffsY: 0,\n    /*\n    **\tPointer contexts.\n    */ pointerA: null,\n    pointerB: null,\n    /*\n    **\tClient bounding box.\n    */ bounds: null,\n    /*\n    **\tInitializes the element.\n    */ init: function() {\n        this.canvas = document.createElement(\"canvas\");\n        this.appendChild(this.canvas);\n        this.g = this.canvas.getContext(\"2d\");\n        this.pointerA = {\n            id: null,\n            active: false,\n            sx: 0,\n            sy: 0,\n            cx: 0,\n            cy: 0,\n            ix: 0,\n            iy: 0\n        };\n        this.pointerB = {\n            id: null,\n            active: false,\n            sx: 0,\n            sy: 0,\n            cx: 0,\n            cy: 0,\n            ix: 0,\n            iy: 0\n        };\n        this.log = document.createElement(\"div\");\n        this.appendChild(this.log);\n    },\n    /*\n    **\tSets the image for the cropper from an image URL.\n    */ setImageUrl: function(url) {\n        (0, $a86ae7da7dd6c514$export$2e2bcd8739ae039).loadImageFromUrl(url, (image)=>{\n            this.setImage(image);\n        });\n    },\n    /*\n    **\tSets the image for the cropper from an HTML File object.\n    */ setImageFile: function(file) {\n        (0, $a86ae7da7dd6c514$export$2e2bcd8739ae039).loadAsDataUrl(file, (url)=>{\n            (0, $a86ae7da7dd6c514$export$2e2bcd8739ae039).loadImageFromUrl(url, (image)=>{\n                this.setImage(image);\n            });\n        });\n    },\n    /*\n    **\tSets the cropper image from an HTML Image element.\n    */ setImage: function(image) {\n        this.image = image;\n        this.reset();\n        this.imageScale = Math.max(this.canvas.width / this.image.width, this.canvas.height / this.image.height);\n        this.imageOffsX = (this.canvas.width - this.imageScale * this.image.width) * 0.5;\n        this.imageOffsY = (this.canvas.height - this.imageScale * this.image.height) * 0.5;\n        this.render();\n    },\n    /*\n    **\tReturns the blob and URL representing the current canvas state.\n    */ getBlobAndUrl: function(callback, type = \"image/png\", quality = 0.9) {\n        this.canvas.toBlob((blob)=>{\n            callback(blob, URL.createObjectURL(blob));\n        }, type, quality);\n    },\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained.\n    */ reset: function() {\n        this.bounds = this.getBoundingClientRect();\n        this.canvas.width = this.bounds.width;\n        this.canvas.height = this.bounds.width / this.aspectRatio;\n    },\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained and renders the image.\n    */ render: function() {\n        this.canvas.width = this.canvas.width;\n        this.g.fillStyle = \"#000\";\n        this.g.beginPath();\n        this.g.rect(0, 0, this.canvas.width, this.canvas.height);\n        this.g.fill();\n        this.g.translate(this.imageOffsX, this.imageOffsY);\n        this.g.scale(this.imageScale, this.imageScale);\n        this.g.drawImage(this.image, 0, 0);\n    },\n    /*\n    **\tTranslates the image by the given offsets.\n    */ translateImage: function(offsX, offsY) {\n        this.imageOffsX += offsX;\n        this.imageOffsY += offsY;\n        this.render(true);\n    },\n    /*\n    **\tHandle mouse events on the canvas.\n    */ \"event mousemove canvas\": function(evt) {\n        if (this.pointerA.active) {\n            this.pointerA.cx = evt.clientX;\n            this.pointerA.cy = evt.clientY;\n            this.translateImage(this.pointerA.cx - this.pointerA.sx, this.pointerA.cy - this.pointerA.sy);\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n        }\n        this.pointerA.ix = (evt.clientX - this.bounds.left - this.imageOffsX) / this.imageScale;\n        this.pointerA.iy = (evt.clientY - this.bounds.top - this.imageOffsY) / this.imageScale;\n    },\n    \"event mousedown canvas\": function(evt) {\n        this.pointerA.active = true;\n        this.pointerA.sx = evt.clientX;\n        this.pointerA.sy = evt.clientY;\n    },\n    \"event mouseup canvas\": function(evt) {\n        this.pointerA.active = false;\n    },\n    \"event wheel canvas\": function(evt) {\n        if (evt.deltaY > 0) this.imageScale -= 0.045;\n        else this.imageScale += 0.045;\n        if (this.imageScale < 0.1) this.imageScale = 0.1;\n        this.imageOffsX += -this.pointerA.ix * this.imageScale + (evt.clientX - this.bounds.left) - this.imageOffsX;\n        this.imageOffsY += -this.pointerA.iy * this.imageScale + (evt.clientY - this.bounds.top) - this.imageOffsY;\n        this.render();\n    },\n    /*\n    **\tHandle touch events on the canvas.\n    */ \"event touchmove canvas\": function(evt) {\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id == i.identifier) {\n                this.pointerA.cx = i.clientX;\n                this.pointerA.cy = i.clientY;\n            } else if (this.pointerB.id == i.identifier) {\n                this.pointerB.cx = i.clientX;\n                this.pointerB.cy = i.clientY;\n            }\n        }\n        if (this.pointerA.active && this.pointerB.active) {\n            let d0 = Math.sqrt(Math.pow(this.pointerA.sx - this.pointerB.sx, 2) + Math.pow(this.pointerA.sy - this.pointerB.sy, 2));\n            let d1 = Math.sqrt(Math.pow(this.pointerA.cx - this.pointerB.cx, 2) + Math.pow(this.pointerA.cy - this.pointerB.cy, 2));\n            let d = d1 - d0;\n            this.imageScale += d / 10 * 0.025;\n            if (this.imageScale < 0.1) this.imageScale = 0.1;\n            this.imageOffsX += -this.pointerA.ix * this.imageScale + (this.pointerA.cx - this.bounds.left) - this.imageOffsX;\n            this.imageOffsY += -this.pointerA.iy * this.imageScale + (this.pointerA.cy - this.bounds.top) - this.imageOffsY;\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n            this.pointerB.sx = this.pointerB.cx;\n            this.pointerB.sy = this.pointerB.cy;\n            this.render();\n        } else {\n            let p = this.pointerA.active ? this.pointerA : this.pointerB.active ? this.pointerB : null;\n            if (!p) return;\n            this.translateImage(p.cx - p.sx, p.cy - p.sy);\n            p.sx = p.cx;\n            p.sy = p.cy;\n        }\n    },\n    \"event touchstart canvas\": function(evt) {\n        this.imageScale0 = this.imageScale;\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id === null) {\n                this.pointerA.id = i.identifier;\n                this.pointerA.active = true;\n                this.pointerA.sx = i.clientX;\n                this.pointerA.sy = i.clientY;\n                this.pointerA.ix = (i.clientX - this.bounds.left - this.imageOffsX) / this.imageScale;\n                this.pointerA.iy = (i.clientY - this.bounds.top - this.imageOffsY) / this.imageScale;\n            } else if (this.pointerB.id === null) {\n                this.pointerB.id = i.identifier;\n                this.pointerB.active = true;\n                this.pointerB.sx = i.clientX;\n                this.pointerB.sy = i.clientY;\n                this.pointerB.ix = (i.clientX - this.bounds.left - this.imageOffsX) / this.imageScale;\n                this.pointerB.iy = (i.clientY - this.bounds.top - this.imageOffsY) / this.imageScale;\n            }\n        }\n    },\n    \"event touchend canvas\": function(evt) {\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id == i.identifier) {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            } else if (this.pointerB.id == i.identifier) {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    },\n    \"event touchcancel canvas\": function(evt) {\n        for (let i of evt.changedTouches){\n            if (this.pointerA.id == i.identifier) {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            } else if (this.pointerB.id == i.identifier) {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    }\n});\n\n\nvar $5c1b3a60e2432554$export$2e2bcd8739ae039 = {\n    Tabs: (0, $4a9d88aa888e9f4d$export$2e2bcd8739ae039),\n    Form: (0, $ec74230761e3bde8$export$2e2bcd8739ae039),\n    Panel: (0, $9c0636c07ff6144e$export$2e2bcd8739ae039),\n    List: (0, $a4fb830b2d507403$export$2e2bcd8739ae039),\n    Item: (0, $7061e6454a23ef4a$export$2e2bcd8739ae039),\n    Paginator: (0, $8586bcf20c2e54e9$export$2e2bcd8739ae039),\n    Table: (0, $a1b0099052e4f8e1$export$2e2bcd8739ae039),\n    Select: (0, $e668322859586774$export$2e2bcd8739ae039),\n    ImageCropper: (0, $183fe4f5f56cd7be$export$2e2bcd8739ae039)\n};\n\n\n\n\nvar //!class db\n$5c284bd1d2bc0d7d$export$2e2bcd8739ae039 //!/class\n = {\n    /**\n\t * Database connection.\n\t */ db: null,\n    /**\n\t * Initializes the database connection.\n\t * @param {string} dbName\n\t * @param {number} version\n\t * @param {(db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void} upgradeCallback\n\t * @returns {Promise<void>}\n\t * !static init (dbName: string, version: number, upgradeCallback: (db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void) : Promise<void>;\n\t */ init: function(dbName, version, upgradeCallback) {\n        return new Promise((resolve, reject)=>{\n            if (!$parcel$global.indexedDB) {\n                reject(\"IndexedDB is not available in your system.\");\n                return;\n            }\n            let req = indexedDB.open(dbName, version);\n            req.onerror = (evt)=>{\n                let err = evt.target.error + \"\";\n                if (err.indexOf(\"AbortError\") !== -1) err = \"\\n\" + req.message;\n                reject(\"Unable to open database: \" + err);\n                return;\n            };\n            req.onupgradeneeded = async (evt)=>{\n                try {\n                    const db = evt.target.result;\n                    const txn = evt.target.transaction;\n                    if (evt.oldVersion < 1) db.createObjectStore(\"system\", {\n                        keyPath: [\n                            \"name\"\n                        ]\n                    });\n                    await upgradeCallback(db, txn, evt.oldVersion);\n                } catch (e) {\n                    req.message = e.message;\n                    req.transaction.abort();\n                }\n            };\n            req.onsuccess = async (evt)=>{\n                this.db = evt.target.result;\n                resolve();\n            };\n        });\n    },\n    /**\n\t * Ensures the database is ready to be used, or throws an exception.\n\t */ ensureConnected: function() {\n        if (!this.db) alert(\"Error: Database not initialized.\");\n    },\n    /**\n\t * Returns an index object for later use with methods that accept an IDBIndex in the `storeName` parameter.\n\t * @param {string} storeName\n\t * @param {string} indexName\n\t * @returns {IDBIndex}\n\t * !static index (storeName: string, indexName: string) : IDBIndex;\n\t */ index: function(storeName, indexName) {\n        this.ensureConnected();\n        let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n        let index = store.index(indexName);\n        if (!index) throw new Error(\"Unable to find index `\" + indexName + \"` in store \" + storeName);\n        return index;\n    },\n    /**\n\t * Runs a callback for each record in a data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} id\n\t * @param { (value:object, cursor:IDBCursor) => Promise<boolean> } callback\n\t * @returns {Promise<void>}\n\t * !static forEach (storeName: string|IDBIndex|IDBObjectStore, id: string, callback: (value:object, cursor:IDBCursor) => Promise<boolean>) : Promise<void>;\n\t */ forEach: function(storeName, id, callback) {\n        this.ensureConnected();\n        if (typeof id === \"function\") {\n            callback = id;\n            id = null;\n        }\n        return new Promise(async (resolve, reject)=>{\n            let request, store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            else store = storeName;\n            if (id === null) request = store.openCursor();\n            else request = store.openCursor(id);\n            request.onsuccess = async (event)=>{\n                let cursor = event.target.result;\n                if (!cursor) {\n                    resolve();\n                    return;\n                }\n                let result = await callback(cursor.value, cursor);\n                if (result === false) {\n                    resolve();\n                    return;\n                }\n                cursor.continue();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns the count of all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @returns {Promise<number>}\n\t * !static count (storeName: string|IDBIndex|IDBObjectStore) : Promise<number>;\n\t */ count: function(storeName) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.count();\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<object>>}\n\t * !static getAll (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */ getAll: function(storeName, filter = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.getAll(filter);\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns all keys from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<string|number|Array<string|number>>>}\n\t * !static getAllKeys (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */ getAllKeys: function(storeName, filter = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.getAllKeys(filter);\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Loads a list of records having unique values from the specified data store and returns the entire object or just the specified field.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} [field]\n\t * @returns {Promise<Array<number|string|object>>}\n\t * !static getAllUnique (storeName: string|IDBIndex|IDBObjectStore) : Promise<Array<number|string|object>>;\n\t */ getAllUnique: function(storeName, fieldName = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.openCursor(null, \"nextunique\");\n            let list = [];\n            request.onsuccess = (event)=>{\n                let cursor = event.target.result;\n                if (!cursor) {\n                    resolve(list);\n                    return;\n                }\n                list.push(fieldName ? cursor.value[fieldName] : cursor.value);\n                cursor.continue();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns a single record from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<object>}\n\t * !static get (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<object>;\n\t */ get: function(storeName, id) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.get(id);\n            request.onsuccess = (evt)=>{\n                resolve(evt.target.result || null);\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Adds or overwrites a record in the specified data store (data must include the primary key).\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static put (storeName: string, data: object) : Promise<void>;\n\t */ put: function(storeName, data) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            let request = store.put(data);\n            request.onsuccess = (evt)=>{\n                resolve();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Returns a variable from the system table.\n\t * @param {string} name - Name of the property to read.\n\t * @param {boolean} full - When `true` the entire object will be returned.\n\t * @returns {any}\n\t * !static sysGet (name: string, full?: boolean) : any;\n\t */ sysGet: async function(name, full = false) {\n        let data = await this.get(\"system\", [\n            name\n        ]);\n        return data ? full ? data : data.value : null;\n    },\n    /**\n\t * Writes a variable to the system table.\n\t * @param {string} name - Name of the property to write.\n\t * @param {any} value - Value to write.\n\t * @param {boolean} full - When `true` the entire value will be written as-is.\n\t * @returns {void}\n\t * !static sysPut (name: string, value: any, full?: boolean) : void;\n\t */ sysPut: async function(name, value, full = false) {\n        if (full) {\n            value.name = name;\n            await this.put(\"system\", value);\n        } else await this.put(\"system\", {\n            name: name,\n            value: value\n        });\n    },\n    /**\n\t * Returns a single record from the specified data store that matches the `partial` object and does NOT match the `notPartial` object.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {object} [partial]\n\t * @param {object} [notPartial]\n\t * @returns {Promise<object>}\n\t * !static findOne (storeName: string|IDBIndex|IDBObjectStore, partial?: object, notPartial?: object) : Promise<object>;\n\t */ findOne: function(storeName, partial = null, notPartial = null) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store;\n            if (typeof storeName === \"string\") store = this.db.transaction(storeName, \"readonly\").objectStore(storeName);\n            else store = storeName;\n            let request = store.openCursor();\n            request.onsuccess = (event)=>{\n                let cursor = event.target.result;\n                if (!cursor) {\n                    resolve(null);\n                    return;\n                }\n                if (partial === null || (0, $k7heJ$Rinn).partialCompare(cursor.value, partial)) {\n                    if (notPartial !== null) {\n                        if ((0, $k7heJ$Rinn).partialCompare(cursor.value, notPartial)) {\n                            cursor.continue();\n                            return;\n                        }\n                    }\n                    resolve(cursor.value);\n                    return;\n                }\n                cursor.continue();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Deletes a record from the specified data store.\n\t * @param {string} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static delete (storeName: string, id: string|number|Array<string|number>) : Promise<void>;\n\t */ delete: function(storeName, id) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            let request = store.delete(id);\n            request.onsuccess = (evt)=>{\n                resolve();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    },\n    /**\n\t * Deletes all items in the specified store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static deleteAll (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<void>;\n\t */ deleteAll: function(storeName, id = null) {\n        return this.forEach(storeName, id, async (value, cursor)=>{\n            await cursor.delete();\n        });\n    },\n    /**\n\t * Inserts a new record in the specified data store.\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static insert (storeName: string, data: object) : Promise<void>;\n\t */ insert: function(storeName, data) {\n        this.ensureConnected();\n        return new Promise((resolve, reject)=>{\n            let store = this.db.transaction(storeName, \"readwrite\").objectStore(storeName);\n            let request = store.add(data);\n            request.onsuccess = (evt)=>{\n                resolve();\n            };\n            request.onerror = (evt)=>{\n                reject(evt.target.error);\n            };\n        });\n    }\n};\n\n\n//!class geo\nconst $873d1f4710ba462f$var$geo = {\n    E_NONE: 0x0000,\n    E_PERMISSION_DENIED: 0x8001,\n    E_POSITION_UNAVAILABLE: 0x8002,\n    E_TIMEOUT: 0x8003,\n    E_UNSUPPORTED: 0x8004,\n    E_UNKNOWN: 0x8009,\n    supported: null,\n    status: null,\n    indicatorOn: function() {\n        $parcel$global.document.documentElement.classList.add(\"busy-geo\");\n    },\n    indicatorOff: function() {\n        $parcel$global.document.documentElement.classList.remove(\"busy-geo\");\n    },\n    /**\n     * Initializes the geolocation interface. Returns boolean indicating whether geolocation\n     * is supported on the device.\n     * @returns {boolean}\n     * !static init() : boolean;\n     */ init: function() {\n        this.supported = navigator.geolocation ? true : false;\n        return this.supported;\n    },\n    /**\n     * Single-shot positioning operation. While the geolocation operation is in progress, the `.busy-geo` CSS class\n     * will be set in the `html` element. You can use this to display a spinner or other indicator.\n     * @returns {Promise<GeolocationPosition>}\n     * !static getCurrentPosition() : Promise<GeolocationPosition>;\n     */ getCurrentPosition: function() {\n        if (this.supported === null) this.init();\n        let status = this.status = {\n            cancelled: false\n        };\n        return new Promise(async (resolve, reject)=>{\n            this.indicatorOn();\n            if (!this.supported) {\n                if (this.status === status) this.status = null;\n                if (!status.cancelled) this.indicatorOff();\n                reject({\n                    status: status,\n                    code: $873d1f4710ba462f$var$geo.E_UNSUPPORTED,\n                    message: \"Geolocation is not supported on this device.\"\n                });\n                return;\n            }\n            navigator.geolocation.getCurrentPosition((data)=>{\n                if (this.status === status) this.status = null;\n                if (!status.cancelled) this.indicatorOff();\n                data.status = status;\n                resolve(data);\n            }, (err)=>{\n                if (this.status === status) this.status = null;\n                if (!status.cancelled) this.indicatorOff();\n                let code;\n                switch(err.code){\n                    case 0x01:\n                        code = $873d1f4710ba462f$var$geo.E_PERMISSION_DENIED;\n                        break;\n                    case 0x02:\n                        code = $873d1f4710ba462f$var$geo.E_POSITION_UNAVAILABLE;\n                        break;\n                    case 0x03:\n                        code = $873d1f4710ba462f$var$geo.E_TIMEOUT;\n                        break;\n                    default:\n                        code = $873d1f4710ba462f$var$geo.E_UNKNOWN;\n                        err.message = \"Unable to get the current location.\";\n                        break;\n                }\n                reject({\n                    status: status,\n                    code: code,\n                    message: err.message\n                });\n            }, {\n                enableHighAccuracy: true\n            });\n        });\n    },\n    /**\n     * Cancels the active positioning operation (if any).\n     * !static cancel() : void;\n     */ cancel: function() {\n        if (this.status === null) return;\n        if (!this.status.cancelled) this.indicatorOff();\n        this.status.cancelled = true;\n        this.status = null;\n    }\n};\nvar //!/class\n$873d1f4710ba462f$export$2e2bcd8739ae039 = $873d1f4710ba462f$var$geo;\n\n\n\n\nconst $09e89c15f3c11137$export$8210dfe1863c478 = $k7heJ$Signal;\nconst $09e89c15f3c11137$export$e2ef10f86a8d60e8 = $k7heJ$signal;\nconst $09e89c15f3c11137$export$dce8637ca0d755f = $k7heJ$expr;\nconst $09e89c15f3c11137$export$3db5d71bdb2d5499 = $k7heJ$watch;\nconst $09e89c15f3c11137$export$956325f45c5d174a = $k7heJ$validator;\nconst $09e89c15f3c11137$export$cbfd4c4104bf5a27 = {\n    /**\n     * Special object to tag dynamic attributes.\n     */ DYNAMIC: {},\n    /**\n     * Sets the value of a property inside an object.\n     * @param {Element|Text} root\n     * @param {string[]} path\n     * @param {number} lastIndex\n     * @param {object} value\n     */ setValue: function(root, path, lastIndex, value) {\n        // Rename properties `class`, `classList` to `className`.\n        if (path[0] === \"class\" || path[0] === \"classList\") path[0] = \"className\";\n        if (path.length > 1 && path[0] === \"trait\") {\n            switch(path[1]){\n                case \"value\":\n                    root.onchange = (e)=>value.set(e.currentTarget.value);\n                    $09e89c15f3c11137$export$3db5d71bdb2d5499([\n                        value\n                    ], (value)=>root.value = value);\n                    break;\n                case \"input\":\n                    root.oninput = (e)=>value.set(e.currentTarget.value);\n                    $09e89c15f3c11137$export$3db5d71bdb2d5499([\n                        value\n                    ], (value)=>root.value = value);\n                    break;\n                case \"checked\":\n                    root.onchange = (e)=>value.set(e.currentTarget.checked);\n                    $09e89c15f3c11137$export$3db5d71bdb2d5499([\n                        value\n                    ], (value)=>root.checked = value);\n                    break;\n                case \"selected\":\n                    root.onchange = (e)=>value.set(e.currentTarget.selected);\n                    $09e89c15f3c11137$export$3db5d71bdb2d5499([\n                        value\n                    ], (value)=>root.selected = value);\n                    break;\n                default:\n                    console.error(\"Unknown trait: \" + path[1]);\n                    break;\n            }\n            return;\n        }\n        // Object used to set `style` or `class` attribute.\n        if (path.length === 1 && typeof value === \"object\") switch(path[0]){\n            case \"style\":\n                for(let i in value)$09e89c15f3c11137$export$3db5d71bdb2d5499([\n                    i,\n                    value[i]\n                ], (i, value)=>root.style[i] = value);\n                return;\n            case \"className\":\n                if (value instanceof Array) $09e89c15f3c11137$export$3db5d71bdb2d5499([\n                    value\n                ], (value)=>{\n                    root.className = \"\";\n                    for(let i in value)root.classList.add(value[i]);\n                });\n                else for(let i in value)$09e89c15f3c11137$export$3db5d71bdb2d5499([\n                    i,\n                    value[i]\n                ], (i, value)=>root.classList[value == true ? \"add\" : \"remove\"](i));\n                return;\n        }\n        // Specific CSS class such as `class:hidden`.\n        if (path.length === 2 && path[0] === \"className\") {\n            $09e89c15f3c11137$export$3db5d71bdb2d5499([\n                path[1],\n                value\n            ], (i, value)=>root.classList[value == true ? \"add\" : \"remove\"](i));\n            return;\n        }\n        // Any other attribute/property.\n        for(let i = 0; i < lastIndex && root; i++)root = root[path[i]];\n        if (!root) return;\n        let name = path[lastIndex];\n        if (name.startsWith(\"on\")) name = name.toLowerCase();\n        $09e89c15f3c11137$export$3db5d71bdb2d5499([\n            name,\n            value\n        ], (name, value)=>root[name] = value);\n    },\n    /**\n     * Creates a setter for a specified path inside an object.\n     * @param {string[]} path \n     * @returns {(root: Element|Text, value: object) => void}\n     */ createSetter: function(path) {\n        const n = path.length - 1;\n        return function(root, value) {\n            $09e89c15f3c11137$export$cbfd4c4104bf5a27.setValue(root, path, n, value);\n        };\n    },\n    /**\n     * Copies the event listeners and custom properties from `node` to `newNode`.\n     * @param {Element} node\n     * @param {Element} newNode\n     * @returns {Element}\n     */ copyProps: function(node, newNode) {\n        // Copy property event listeners.\n        for(let propName in node){\n            if (!propName.startsWith(\"on\") || propName.startsWith(\"onmoz\") || !node[propName]) continue;\n            newNode[propName] = node[propName];\n        }\n        // Copy custom properties.\n        for (let propName of Object.getOwnPropertyNames(node)){\n            if (~~propName == propName) continue;\n            newNode[propName] = node[propName];\n        }\n        return newNode;\n    },\n    /**\n     * Clones an element node and ensures certain properties are copied over.\n     * @param {Element} node\n     * @param {boolean} [deep=false]\n     */ cloneNode: function(node, deep = false) {\n        if (!deep && node.isCustom === true) throw new Error(\"cloneNode only available as deep clone for custom elements.\");\n        if (deep && node.isCustom === true) return node.cloneNodeCustom();\n        let newNode = node.cloneNode();\n        if (deep) for (let childNode of node.childNodes)newNode.appendChild($09e89c15f3c11137$export$cbfd4c4104bf5a27.cloneNode(childNode, true));\n        // Copy handlers and properties.\n        $09e89c15f3c11137$export$cbfd4c4104bf5a27.copyProps(node, newNode);\n        // Execute `oncreated` handler.\n        if (\"oncreated\" in newNode) newNode.oncreated(newNode);\n        return newNode;\n    },\n    /**\n     * Ensures the provided value is a node or a node-compatible (such as an array of nodes).\n     * @param {Node|Array<Node|string>|string} value\n     * @param {boolean} [cloneNode=false]\n     * @returns {Node|Array<Node>}\n     */ ensureNode: function(value, cloneNode = false) {\n        if (value instanceof Array) {\n            for(let i = 0; i < value.length; i++)value[i] = $09e89c15f3c11137$export$cbfd4c4104bf5a27.ensureNode(value[i], cloneNode);\n            return value;\n        }\n        if (!(value instanceof Node)) return document.createTextNode(value);\n        return cloneNode ? $09e89c15f3c11137$export$cbfd4c4104bf5a27.cloneNode(value, true) : value;\n    },\n    /**\n     * Replaces the specified refNode by a newNode and returns the new reference node.\n     * @param {Node} parent\n     * @param {Node|Array<Node>} refNode\n     * @param {Node|Array<Node>} newNode\n     * @returns {Node|Array<Node>}\n     */ replaceNode: function(parent, refNode, newNode, appendChild = false) {\n        // When refNode is an array, remove all those nodes but leave just one for reference.\n        if (refNode instanceof Array) {\n            while(refNode.length > 1){\n                let tmp = refNode.shift();\n                if (tmp.parentElement === parent) tmp.remove();\n            }\n            refNode = refNode.shift();\n        }\n        let newRefNode = newNode;\n        let firstNode = newNode;\n        // When newNode is an array, create a document fragment for faster append of all children.\n        if (newNode instanceof Array) {\n            let frag = document.createDocumentFragment();\n            newRefNode = [];\n            if (newNode.length == 0) newNode = [\n                document.createTextNode(\"\")\n            ];\n            for(let i = 0; i < newNode.length; i++){\n                newRefNode.push(newNode[i]);\n                frag.appendChild(newNode[i]);\n            }\n            firstNode = newNode[0];\n            newNode = frag;\n        }\n        if (appendChild === false) {\n            refNode.replaceWith(newNode);\n            let tmpNode = document.createComment(\"\");\n            firstNode.parentElement.insertBefore(tmpNode, firstNode);\n            if (!(newRefNode instanceof Array)) newRefNode = [\n                newRefNode\n            ];\n            newRefNode.push(tmpNode);\n        } else refNode.appendChild(newNode);\n        return newRefNode;\n    },\n    /**\n     * Creates a DOM node replacer.\n     * @param {Element|Text|Array<Element|Text>} refNode\n     * @returns {(root: Element|Text, newNode: any) => void}\n     */ createReplacer: function(refNode) {\n        return function(root, newNode) {\n            refNode = $09e89c15f3c11137$export$cbfd4c4104bf5a27.replaceNode(root, refNode, $09e89c15f3c11137$export$cbfd4c4104bf5a27.ensureNode(newNode));\n        };\n    },\n    /**\n     * Creates a function that builds an element.\n     * @param {string} tagName - Tag of the element to create.\n     * @param {array} attributes - Array of name-value pairs. When dynamic attributes are present use the helpers.DYNAMIC as value placeholder.\n     * @param {Array<Element|Text|string|null>} children - When dynamic children are present use the placeholder `null`.\n     * @returns { (runtimeAttributeValues: Array<string>, runtimeChildren: Array<Element|Text|Array<Element|Text>>) => HTMLElement }\n     */ create: function(tagName, attributes, children) {\n        // Attach static attributes.\n        let baseElement = document.createElement(tagName);\n        let dynamicAttributes = [];\n        for(let i = 0; i < attributes.length; i += 2){\n            let path = null;\n            if (attributes[i].indexOf(\":\") !== -1) path = attributes[i].split(\":\");\n            else path = [\n                attributes[i]\n            ];\n            if (attributes[i + 1] !== $09e89c15f3c11137$export$cbfd4c4104bf5a27.DYNAMIC) {\n                $09e89c15f3c11137$export$cbfd4c4104bf5a27.setValue(baseElement, path, path.length - 1, attributes[i + 1]);\n                continue;\n            }\n            dynamicAttributes.push($09e89c15f3c11137$export$cbfd4c4104bf5a27.createSetter(path));\n        }\n        // Attach static children.\n        let dynamicChildrenIndices = [];\n        let dynamicBuild = false;\n        let firstBuild = true;\n        // Get indices of dynamic children and detect if any child is a custom element.\n        for(let i in children){\n            if (children[i].isCustom === true) dynamicBuild = true;\n            if (children[i] === $09e89c15f3c11137$export$cbfd4c4104bf5a27.DYNAMIC) dynamicChildrenIndices.push(i);\n        }\n        // Create and return the element builder fuction.\n        const N = dynamicAttributes.length;\n        const M = dynamicChildrenIndices.length;\n        return function(runtimeDynamicAttributes, runtimeChildren, spreadAttributes = null) {\n            const getElement = (runtimeChildren, originalElement = null)=>{\n                let elem = null;\n                if (firstBuild || dynamicBuild) {\n                    let target = dynamicBuild ? $09e89c15f3c11137$export$cbfd4c4104bf5a27.cloneNode(baseElement) : baseElement;\n                    for(let i in children){\n                        if (children[i] instanceof Array) throw new Error(\"Document fragments not fully supported!\");\n                        $09e89c15f3c11137$export$cbfd4c4104bf5a27.replaceNode(target, target, $09e89c15f3c11137$export$cbfd4c4104bf5a27.ensureNode(children[i], true), true);\n                    }\n                    if (dynamicBuild) elem = target;\n                    firstBuild = false;\n                }\n                if (elem === null) elem = $09e89c15f3c11137$export$cbfd4c4104bf5a27.cloneNode(baseElement, true);\n                const hadOnCreated = \"oncreated\" in elem;\n                const dynamicChildren = dynamicChildrenIndices.map((idx)=>$09e89c15f3c11137$export$cbfd4c4104bf5a27.createReplacer(elem.childNodes[idx]));\n                for(let i = 0; i < N; i++)dynamicAttributes[i](elem, runtimeDynamicAttributes[i]);\n                for(let i = 0; i < M; i++)$09e89c15f3c11137$export$3db5d71bdb2d5499([\n                    runtimeChildren[i],\n                    i\n                ], (val, i)=>dynamicChildren[i](elem, val));\n                if (spreadAttributes !== null) {\n                    for (let attributes of spreadAttributes)for(let i in attributes){\n                        let path = null;\n                        if (i.indexOf(\":\") !== -1) path = i.split(\":\");\n                        else path = [\n                            i\n                        ];\n                        $09e89c15f3c11137$export$cbfd4c4104bf5a27.setValue(elem, path, path.length - 1, attributes[i]);\n                    }\n                }\n                if (originalElement !== null) $09e89c15f3c11137$export$cbfd4c4104bf5a27.copyProps(originalElement, elem);\n                if (!hadOnCreated && \"oncreated\" in elem) elem.oncreated(elem);\n                elem.isCustom = true;\n                elem.cloneNode = ()=>{\n                    throw new Error(\"Use of cloneNode is forbidden in custom elements, use cloneNodeCustom instead.\");\n                };\n                elem.cloneNodeCustom = ()=>{\n                    return getElement(runtimeChildren.map((e)=>e instanceof Node && e.isCustom === true ? e.cloneNodeCustom() : e), elem);\n                };\n                return elem;\n            };\n            return getElement(runtimeChildren);\n        };\n    }\n};\n\n\nconst $9ffb7151b8b2d038$export$55185c17a0fcbe46 = (0, $7718a52dfca15325$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$db77ccec0bb4ccac = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$9864de54bd63ed8a = (0, $5808f050ebbd5b77$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$bf71da7aebe9ddc1 = (0, $d584b999ce7bb535$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$accd73d198d77d2f = (0, $fe13c50c6c3e66d8$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$d3568da47c78d35c = (0, $52a9c945778cbfd0$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$cea96571ebbff9dd = (0, $0a74aeaee0e1468a$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$deefd61317ad2797 = (0, $54865aa6b345efd5$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$3abb4be70fa2c84e = (0, $5c1b3a60e2432554$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$d2ca453b913dcdea = (0, $a86ae7da7dd6c514$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$f932f06c7eb6abeb = (0, $5c284bd1d2bc0d7d$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$9388fcd1771be726 = (0, $873d1f4710ba462f$export$2e2bcd8739ae039);\nconst $9ffb7151b8b2d038$export$eefcfe56efaaa57d = $k7heJ$Rinn;\nconst $9ffb7151b8b2d038$export$4c85e640eb41c31b = $k7heJ$Class;\nconst $9ffb7151b8b2d038$export$d61e24a684f9e51 = $k7heJ$Event;\nconst $9ffb7151b8b2d038$export$ec8b666c5fe2c75a = $k7heJ$EventDispatcher;\nconst $9ffb7151b8b2d038$export$a1edc412be3e1841 = $k7heJ$Model;\nconst $9ffb7151b8b2d038$export$59eced47f477f85a = $k7heJ$ModelList;\nconst $9ffb7151b8b2d038$export$19342e026b58ebb7 = $k7heJ$Schema;\nconst $9ffb7151b8b2d038$export$3a9581c9ade29768 = $k7heJ$Flattenable;\nconst $9ffb7151b8b2d038$export$fb8073518f34e6ec = $k7heJ$Collection;\nconst $9ffb7151b8b2d038$export$14416b8d99d47caa = $k7heJ$Template;\n\n\nexport {$9ffb7151b8b2d038$export$55185c17a0fcbe46 as Router, $9ffb7151b8b2d038$export$db77ccec0bb4ccac as Element, $9ffb7151b8b2d038$export$9864de54bd63ed8a as CElement, $9ffb7151b8b2d038$export$bf71da7aebe9ddc1 as Api, $9ffb7151b8b2d038$export$accd73d198d77d2f as DataSource, $9ffb7151b8b2d038$export$d3568da47c78d35c as DataList, $9ffb7151b8b2d038$export$cea96571ebbff9dd as Easing, $9ffb7151b8b2d038$export$deefd61317ad2797 as Anim, $9ffb7151b8b2d038$export$3abb4be70fa2c84e as Elements, $9ffb7151b8b2d038$export$d2ca453b913dcdea as Utils, $9ffb7151b8b2d038$export$f932f06c7eb6abeb as db, $9ffb7151b8b2d038$export$9388fcd1771be726 as geo, $9ffb7151b8b2d038$export$eefcfe56efaaa57d as Rinn, $9ffb7151b8b2d038$export$4c85e640eb41c31b as Class, $9ffb7151b8b2d038$export$d61e24a684f9e51 as Event, $9ffb7151b8b2d038$export$ec8b666c5fe2c75a as EventDispatcher, $9ffb7151b8b2d038$export$a1edc412be3e1841 as Model, $9ffb7151b8b2d038$export$59eced47f477f85a as ModelList, $9ffb7151b8b2d038$export$19342e026b58ebb7 as Schema, $9ffb7151b8b2d038$export$3a9581c9ade29768 as Flattenable, $9ffb7151b8b2d038$export$fb8073518f34e6ec as Collection, $9ffb7151b8b2d038$export$14416b8d99d47caa as Template, $09e89c15f3c11137$export$e2ef10f86a8d60e8 as signal, $09e89c15f3c11137$export$dce8637ca0d755f as expr, $09e89c15f3c11137$export$3db5d71bdb2d5499 as watch, $09e89c15f3c11137$export$956325f45c5d174a as validator, $09e89c15f3c11137$export$cbfd4c4104bf5a27 as helpers};\n//# sourceMappingURL=riza.m.js.map\n","\nimport _Router from './router.js'; export const Router = _Router;\n//![import \"./router\"]\nimport _Element from './element.js'; export const Element = _Element; export const CElement = _Element;\n//![import \"./element\"]\nimport _Api from './api.js'; export const Api = _Api;\n//![import \"./api\"]\nimport _DataSource from './data-source.js'; export const DataSource = _DataSource;\n//![import \"./data-source\"]\nimport _DataList from './data-list.js'; export const DataList = _DataList;\n//![import \"./data-list\"]\nimport _Easing from './easing.js'; export const Easing = _Easing;\n//![import \"./easing\"]\nimport _Anim from './anim.js'; export const Anim = _Anim;\n//![import \"./anim\"]\nimport _Elements from './elements.js'; export const Elements = _Elements;\n//![import \"./elements\"]\nimport _Utils from './utils.js'; export const Utils = _Utils;\n//![import \"./utils\"]\n\nimport _db from './db.js'; export const db = _db;\n//![import \"./db\"]\nimport _geo from './geo.js'; export const geo = _geo;\n//![import \"./geo\"]\n\nimport * as _Rinn from 'rinn';\nexport const Rinn = _Rinn.Rinn;\nexport const Class = _Rinn.Class;\nexport const Event = _Rinn.Event;\nexport const EventDispatcher = _Rinn.EventDispatcher;\nexport const Model = _Rinn.Model;\nexport const ModelList = _Rinn.ModelList;\nexport const Schema = _Rinn.Schema;\nexport const Flattenable = _Rinn.Flattenable;\nexport const Collection = _Rinn.Collection;\nexport const Template = _Rinn.Template;\n\nexport { signal, expr, watch, validator, helpers } from './runtime-jsx';\n","\r\nimport { EventDispatcher } from 'rinn';\r\n\r\n/*\r\n**\tThe Router is a special module that detects local URL changes (when a hash-change occurs) and\r\n**\tforwards events to the appropriate handlers.\r\n*/\r\n\r\nconst _Router =\r\n{\r\n    Route: EventDispatcher.extend\r\n    ({\r\n        /*\r\n        **\tRegular expression for the route. This is generated from a simpler expression provided\r\n        **\tin the constructor.\r\n        */\r\n        routeRegex: null,\r\n\r\n        /*\r\n        **\tOriginal route string value.\r\n        */\r\n        value: null,\r\n\r\n        /*\r\n        **\tMap with the indices and the names of each paremeter obtained from the route expression.\r\n        */\r\n        params: null,\r\n\r\n        /*\r\n        **\tArguments obtained from the current route (uses `params` to determine name of arguments).\r\n        */\r\n        args: null,\r\n\r\n        /*\r\n        **\tArguments string obtained from the last route dispatch. Used to check if the arguments changed.\r\n        */\r\n        s_args: null,\r\n\r\n        /*\r\n        **\tIndicates if the route is active because of a past positive dispatch.\r\n        */\r\n        active: false,\r\n\r\n        /*\r\n        **\tIndicates if the params have changed since last event. Transition from inactive to active route will always set this value to true.\r\n        */\r\n        changed: false,\r\n\r\n        /*\r\n        **\tConstructor of the route, the specified argument is a route expression.\r\n        **\r\n        **\t>> void __ctor (string route);\r\n        */\r\n        __ctor: function (route)\r\n        {\r\n            this._super.EventDispatcher.__ctor();\r\n            this._compileRoute (this.value = route);\r\n        },\r\n\r\n        /*\r\n        **\tTransforms the specified route expression into a regular expression and a set of parameter\r\n        **\tnames and stores them in the 'param' array.\r\n        **\r\n        **\t>> void _compileRoute (string route);\r\n        */\r\n        _compileRoute: function (route)\r\n        {\r\n            this.params = [];\r\n\r\n            route = route.replace(/\\/\\*\\//g, '/.+/');\r\n\r\n            while (true)\r\n            {\r\n                var m = /:([!@A-Za-z0-9_-]+)/.exec(route);\r\n                if (!m) break;\r\n    \r\n                route = route.replace(m[0], '([^/]+)');\r\n                this.params.push (m[1]);\r\n            }\r\n\r\n            this.routeRegex = '^' + route.replace(/##/g, '');\r\n        },\r\n\r\n        /*\r\n        **\tAdds a handler to the route dispatcher. The handler can be removed later using removeHandler and\r\n        **\tspecifying the same parameters. If unrouted boolean is specified the event to listen to will be\r\n        **\tthe unrouted event (when the route changes and the route is not activated).\r\n        **\r\n        **\tvoid addHandler (handler: function, unrouted: bool, context:object=null);\r\n        */\r\n        addHandler: function (handler, unrouted=false, context=null)\r\n        {\r\n            this.addEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, context);\r\n        },\r\n\r\n        /*\r\n        **\tRemoves a handler from the route dispatcher.\r\n        **\r\n        **\tvoid removeHandler (handler: function, unrouted: bool, context: object=null);\r\n        */\r\n        removeHandler: function (handler, unrouted=false, context=null)\r\n        {\r\n            this.removeEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, context);\r\n        },\r\n\r\n        /*\r\n        **\tVerifies if the specified route matches the internal route and if so dispatches a (depends on doUnroute parameter) \"routed\" or \"unrouted\" event with the\r\n        **\tparameters obtained from the location to all attached handlers.\r\n        **\r\n        **\tvoid dispatch (route:string, doUnroute:bool);\r\n        */\r\n        dispatch: function (route)\r\n        {\r\n            var matches = route.match(this.routeRegex);\r\n            if (!matches)\r\n            {\r\n                this.s_args = null;\r\n\r\n                if (this.active)\r\n                    this.dispatchEvent ('unrouted', { route: this });\r\n\r\n                this.active = false;\r\n                return;\r\n            }\r\n\r\n            var args = { route: this };\r\n            var str = '';\r\n\r\n            for (var i = 0; i < this.params.length; i++)\r\n            {\r\n                args[this.params[i]] = matches[i+1];\r\n                str += '_' + matches[i+1];\r\n            }\r\n\r\n            this.changed = str != this.s_args;\r\n            this.s_args = str;\r\n\r\n            this.dispatchEvent ('routed', this.args = args);\r\n            this.active = true;\r\n        }\r\n    }),\r\n\r\n    /*\r\n    **\tMap with route objects. The key of the map is the route and the value a handler.\r\n    */\r\n    routes: { },\r\n\r\n    /*\r\n    **\tSorted list of routes. Smaller routes are processed first than larger ones. This array stores\r\n    **\tonly the keys to the Router.routes map.\r\n    */\r\n    sortedRoutes: [ ],\r\n\r\n    /*\r\n    **\tIndicates the number of times the onLocationChanged handler should ignore the hash change event.\r\n    */\r\n    ignoreHashChangeEvent: 0,\r\n\r\n    /*\r\n    **\tCurrent relative location (everything after the location hash symbol).\r\n    */\r\n    location: '',\r\n\r\n    /*\r\n    **\tCurrent relative location as an array of elements (obtained by splitting the location by slash).\r\n    */\r\n    args: [],\r\n\r\n    /*\r\n    **\tInitializes the router module. Ensure to call `refresh` once to force a hashchange when the page loads.\r\n    */\r\n    init: function ()\r\n    {\r\n        if (this.alreadyAttached)\r\n            return;\r\n\r\n        this.alreadyAttached = true;\r\n\r\n        if ('onhashchange' in globalThis) {\r\n            globalThis.onhashchange = this.onLocationChanged.bind(this);\r\n\r\n            this.location = globalThis.location.hash.substring(1);\r\n            this.args = this.location.split ('/');\r\n        }\r\n    },\r\n\r\n    /*\r\n    **\tRefreshes the current route by forcing a hashchange event.\r\n    */\r\n    refresh: function () {\r\n        this.onLocationChanged();\r\n    },\r\n\r\n    /*\r\n    **\tChanges the current location and optionally prevents a trigger of the hashchange event.\r\n    */\r\n    setRoute: function (route, silent)\r\n    {\r\n        var location = this.realLocation (route);\r\n        if (location == this.location) return;\r\n\r\n        if (silent) this.ignoreHashChangeEvent++;\r\n        globalThis.location.hash = location;\r\n    },\r\n\r\n    /*\r\n    **\tAdds the specified route to the routing map. When the specified route is detected, the `onRoute` handler will be called, and then\r\n    **\twhen the route exits `onUnroute` will be called.\r\n    */\r\n    addRoute: function (route, onRoute, onUnroute=null)\r\n    {\r\n        if (!this.routes[route]) {\r\n            this.routes[route] = new this.Route (route);\r\n            this.sortedRoutes.push (route);\r\n\r\n            this.sortedRoutes.sort ((a, b) => {\r\n                return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n            });\r\n        }\r\n\r\n        if (onUnroute !== null) {\r\n            this.routes[route].addHandler (onRoute, false);\r\n            this.routes[route].addHandler (onUnroute, true);\r\n        }\r\n        else\r\n            this.routes[route].addHandler (onRoute, false);\r\n\r\n        return this.routes[route];\r\n    },\r\n\r\n    /*\r\n    **\tReturns the Route object for the specified route.\r\n    */\r\n    getRoute: function (route)\r\n    {\r\n        if (!this.routes[route])\r\n        {\r\n            this.routes[route] = new this.Route (route);\r\n            this.sortedRoutes.push (route);\r\n\r\n            this.sortedRoutes.sort ((a, b) => {\r\n                return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n            });\r\n        }\r\n\r\n        return this.routes[route];\r\n    },\r\n\r\n    /*\r\n    **\tAdds the specified routes to the routing map. The routes map should contain the route expression\r\n    **\tin the key of the map and a handler function in the value.\r\n    */\r\n    addRoutes: function (routes)\r\n    {\r\n        for (var i in routes)\r\n        {\r\n            if (!this.routes[i]) {\r\n                this.routes[i] = new this.Route (i);\r\n                this.sortedRoutes.push (i);\r\n            }\r\n\r\n            this.routes[i].addHandler (routes[i], false);\r\n        }\r\n\r\n        this.sortedRoutes.sort ((a, b) => {\r\n            return this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n        });\r\n    },\r\n\r\n    /*\r\n    **\tRemoves the specified route from the routing map.\r\n    */\r\n    removeRoute: function (route, onRoute, onUnroute)\r\n    {\r\n        if (!this.routes[route]) return;\r\n\r\n        if (onUnroute !== undefined) {\r\n            this.routes[route].removeHandler (onRoute, false);\r\n            this.routes[route].removeHandler (onUnroute, true);\r\n        }\r\n        else\r\n            this.routes[route].removeHandler (onRoute);\r\n    },\r\n\r\n    /*\r\n    **\tRemoves the specified routes from the routing map. The routes map should contain the route\r\n    **\texpression in the key of the map and a handler function in the value.\r\n    */\r\n    removeRoutes: function (routes)\r\n    {\r\n        for (var i in routes)\r\n        {\r\n            if (!this.routes[i]) continue;\r\n            this.routes[i].removeHandler (routes[i]);\r\n        }\r\n    },\r\n\r\n    /*\r\n    **\tGiven a formatted location and a previous one it will return the correct real location.\r\n    */\r\n    realLocation: function (cLocation, pLocation)\r\n    {\r\n        if (!pLocation) pLocation = this.location;\r\n        if (!pLocation) pLocation = ' ';\r\n\r\n        var state = 0, i = 0, j = 0, k;\r\n        var rLocation = '';\r\n\r\n        while (state != -1 && i < cLocation.length && j < pLocation.length)\r\n        {\r\n            switch (state)\r\n            {\r\n                case 0:\r\n                    if (cLocation.substr(i++, 1) == '*') {\r\n                        state = 1;\r\n                        break;\r\n                    }\r\n\r\n                    if (cLocation.substr(i-1, 1) != pLocation.substr(j++, 1)) {\r\n                        rLocation += cLocation.substr(i-1);\r\n                        state = -1;\r\n                        break;\r\n                    }\r\n\r\n                    rLocation += pLocation.substr(j-1, 1);\r\n                    break;\r\n\r\n                case 1:\r\n                    if (cLocation.substr(i, 1) == '*') {\r\n                        state = 3;\r\n                        i++;\r\n                        break;\r\n                    }\r\n\r\n                    state = 2;\r\n                    break;\r\n\r\n                case 2:\r\n                    k = pLocation.indexOf(cLocation.substr(i, 1), j);\r\n                    if (k == -1) {\r\n                        rLocation += pLocation.substr(j) + cLocation.substr(i);\r\n                        state = -1;\r\n                        break;\r\n                    }\r\n\r\n                    rLocation += pLocation.substr(j, k-j);\r\n\r\n                    state = 0;\r\n                    j = k;\r\n                    break;\r\n\r\n                case 3:\r\n                    k = pLocation.lastIndexOf(cLocation.substr(i, 1));\r\n                    if (k == -1) {\r\n                        rLocation += cLocation.substr(i);\r\n                        state = -1;\r\n                        break;\r\n                    }\r\n\r\n                    rLocation += pLocation.substr(j, k-j);\r\n\r\n                    state = 0;\r\n                    j = k;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (state != -1)\r\n            rLocation += cLocation.substr(i);\r\n\r\n        return rLocation.trim();\r\n    },\r\n\r\n    /*\r\n    **\tEvent handler called when the location hash changes.\r\n    */\r\n    onLocationChanged: function ()\r\n    {\r\n        var cLocation = globalThis.location.hash.substring(1);\r\n        var rLocation = this.realLocation(cLocation);\r\n\r\n        if (cLocation !== rLocation) {\r\n            globalThis.location.replace('#' + rLocation);\r\n            return;\r\n        }\r\n\r\n        this.location = cLocation;\r\n        this.args = this.location.split ('/');\r\n\r\n        if (this.ignoreHashChangeEvent > 0) {\r\n            this.ignoreHashChangeEvent--;\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < this.sortedRoutes.length; i++)\r\n            this.routes[this.sortedRoutes[i]].dispatch (this.location);\r\n    },\r\n\r\n    /*\r\n    **\tNavigates to the given hash-based URL.\r\n    */\r\n    navigate: function (location, replace=false)\r\n    {\r\n        location = this.realLocation(location);\r\n\r\n        if (globalThis.location.hash == '#'+location) {\r\n            this.refresh();\r\n            return;\r\n        }\r\n\r\n        if (replace)\r\n            globalThis.location.replace('#'+location);\r\n        else\r\n            globalThis.location.hash = location;\r\n    }\r\n};\r\n\r\n_Router.init();\r\nexport default _Router;\r\n","\nimport { Rinn, Model, Template } from 'rinn';\nimport Router from './router.js';\n\n/**\n * Map containing the original prototypes for all registered elements.\n */\nconst elementPrototypes = { };\n\n/**\n * Map containing the final classes for all registered elements.\n */\nconst elementClasses = { };\n\n/**\n * Base class for custom elements. Provides support for model-triggered events, easy definition of handlers for events originated in\n * self or child-elements, and several utility methods.\n */\n\nconst Element = \n{\n    /**\n     * Internal element ID. Added as namespace to model events. Ensures that certain model events are run locally only, not affecting other event handlers.\n     */\n    eid: null,\n\n    /**\n     * Indicates if the element is a root element, that is, the target element to attach child elements having `data-ref` attribute.\n     */\n    isRoot: false,\n\n    /**\n     * Root element to which this element is attached (when applicable).\n     */\n    root: null,\n\n    /**\n     * Indicates ready-state of the element. Possible values are: 0: \"Not ready\", 1: \"Children Initialized\", and 2: \"Parent Ready\".\n     */\n    isReady: 0,\n    readyReenter: 0,\n    readyLocked: 0,\n\n    /**\n     * Model type (class) for the element's model.\n     */\n    modelt: Model,\n\n    /**\n     * Data model related to the element.\n     */\n    model: null,\n\n    /**\n     * Contents of the element. When set, the innerHTML will be set to this value.\n     */\n    contents: null,\n\n    /**\n     * \tEvents map.\n     */\n    events:\n    {\n        'mousedown [data-long-press]': function (evt)\n        {\n            evt.continuePropagation = true;\n            if (evt.source._long_press) return;\n\n            let elem = evt.source;\n\n            elem._long_press = setTimeout(() =>\n            {\n                let dx = elem._pos_fx - elem._pos_sx;\n                let dy = elem._pos_fy - elem._pos_sy;\n\n                elem._long_press = null;\n\n                let d = Math.sqrt(dx*dx + dy*dy);\n                if (d < 5) {\n                    elem._long_press = false;\n                    this.dispatchOn (elem, 'long-press');\n                }\n            },\n            500);\n\n            elem._pos_sx = evt.clientX;\n            elem._pos_sy = evt.clientY;\n\n            elem._pos_fx = evt.clientX;\n            elem._pos_fy = evt.clientY;\n        },\n\n        'mousemove [data-long-press]': function (evt)\n        {\n            evt.continuePropagation = true;\n            if (!evt.source._long_press) return;\n\n            evt.source._pos_fx = evt.clientX;\n            evt.source._pos_fy = evt.clientY;\n        },\n\n        'touchstart [data-long-press]': function (evt)\n        {\n            evt.continuePropagation = true;\n            if (evt.source._long_press) return;\n\n            let elem = evt.source;\n\n            elem._long_press = setTimeout(() => {\n                let dx = elem._pos_fx - elem._pos_sx;\n                let dy = elem._pos_fy - elem._pos_sy;\n\n                elem._long_press = null;\n\n                let d = Math.sqrt(dx*dx + dy*dy);\n                if (d < 5) {\n                    elem._long_press = false;\n                    this.dispatchOn (elem, 'long-press');\n                }\n            }, 500);\n\n            elem._pos_sx = evt.touches[0].clientX;\n            elem._pos_sy = evt.touches[0].clientY;\n\n            elem._pos_fx = evt.touches[0].clientX;\n            elem._pos_fy = evt.touches[0].clientY;\n        },\n\n        'touchmove [data-long-press]': function (evt)\n        {\n            evt.continuePropagation = true;\n            if (!evt.source._long_press) return;\n\n            evt.source._pos_fx = evt.touches[0].clientX;\n            evt.source._pos_fy = evt.touches[0].clientY;\n        },\n\n        'mouseup [data-long-press]': function (evt)\n        {\n            if (evt.source._long_press === false)\n                return;\n\n            if (evt.source._long_press) {\n                clearTimeout(evt.source._long_press);\n                evt.source._long_press = null;\n            }\n    \n            evt.continuePropagation = true;\n        },\n    \n        'touchend [data-long-press]': function (evt)\n        {\n            if (evt.source._long_press === false)\n                return;\n    \n            if (evt.source._long_press) {\n                clearTimeout(evt.source._long_press);\n                evt.source._long_press = null;\n            }\n    \n            evt.continuePropagation = true;\n        },\n\n        'click [data-action]': function(evt)\n        {\n            if (evt.source._long_press === false)\n                return;\n\n            let opts = evt.source.dataset.action.split(' ');\n\n            if (opts[0] in this)\n                this[opts[0]] ({ ...evt.params, ...evt.source.dataset, ...opts, length: opts.length }, evt);\n            else\n                evt.continuePropagation = true;\n        },\n\n        'long-press [data-long-press]': function(evt)\n        {\n            let opts = evt.source.dataset.longPress.split(' ');\n\n            if (opts[0] in this)\n                this[opts[0]] ({ ...evt.params, ...evt.source.dataset, ...opts, length: opts.length }, evt);\n            else\n                evt.continuePropagation = true;\n        },\n\n        'keyup(13) input[data-enter]': function(evt)\n        {\n            let opts = evt.source.dataset.enter.split(' ');\n\n            if (opts[0] in this)\n                this[opts[0]] ({ ...evt.params, ...evt.source.dataset, ...opts, length: opts.length }, evt);\n            else\n                evt.continuePropagation = true;\n        }\n    },\n\n    /**\n     * Internal routes map, set by `bindRoutes`.\n     */\n    routes: null,\n\n    /**\n     * \tElement constructor.\n     */\n    __ctor: function()\n    {\n        this._list_watch = [];\n        this._list_visible = [];\n        this._list_attr = [];\n        this._list_property = [];\n\n        if ('root' in this.dataset)\n            this.isRoot = this.dataset.root === 'true';\n\n        this.style.display = 'block';\n\n        this.eid = Math.random().toString().substr(2);\n\n        if (this.model != null)\n        {\n            let tmp = this.model;\n            this.model = null;\n            this.setModel (tmp, false);\n        }\n\n        Object.keys(this._super).reverse().forEach(i =>\n        {\n            if ('init' in this._super[i])\n                this._super[i].init();\n        });\n\n        if (Element.debug)\n            console.log('>> ' + this.tagName + ' INIT ON ' + this.parentElement.tagName);\n\n        this.init();\n\n        if (this.events)\n            this.bindEvents (this.events);\n\n        if (this.contents)\n            this.setInnerHTML(this.contents);\n\n        setTimeout(() => {\n            if (this.tagName.toLowerCase() !== 'r-dom-probe')\n                this.appendChild(document.createElement('r-dom-probe'));\n            else\n                this.markReady();\n        }, 0);\n    },\n\n    /**\n     * \tInitializes the element. Called after construction of the instance.\n     */\n    init: function()\n    {\n    },\n\n    /**\n     * \tExecuted when the children of the element are ready.\n     */\n    ready: function()\n    {\n    },\n\n    /**\n     * \tExecuted after ready and after the root is also ready.\n     */\n    rready: function()\n    {\n    },\n\n    /**\n     * \tMarks the element as ready.\n     */\n    markReady: function (list=null)\n    {\n        this.readyLocked++;\n\n        if (!this.isReady)\n        {\n            this.isReady = 1;\n\n            // Set model is `model` property was set in the element.\n            if ('model' in this.dataset)\n            {\n                let ref = this.getFieldByPath(this.dataset.model);\n                if (ref) this.setModel(ref);\n            }\n\n            // Run ready methods in class hierarchy.\n            Object.keys(this._super).reverse().forEach(i =>\n            {\n                if ('ready' in this._super[i])\n                    this._super[i].ready();\n            });\n\n            if (Element.debug)\n                console.log('>> ' + this.tagName + ' READY');\n\n            this.ready();\n            if (this.onready) this.onready(this);\n\n            this.collectWatchers();\n        }\n        else\n            this.collectWatchers();\n\n        let root = this.findCustomParent(this);\n\n        if (Element.debug)\n            console.log(this.tagName + ' ROOT IS ' + (root ? root.tagName : 'NULL'));\n\n        if (root && root.isReady === 0 && this.isReady != 0)\n            root.checkReady();\n\n        let rootReady = false;\n\n        if (root && root.isReady === 2 && this.isReady !== 2)\n        {\n            this.getRoot();\n\n            if (this.root && this.dataset.ref)\n            {\n                if (Element.debug)\n                    console.log(this.tagName + ' REF AS `' + this.dataset.ref + '` ON ' + this.root.tagName);\n\n                this.root[this.dataset.ref] = this;\n                this.root.onRefAdded (this.dataset.ref, this);\n            }\n\n            rootReady = true;\n        }\n\n        if (!root && this.isReady !== 2)\n        {\n            rootReady = true;\n        }\n\n        if (rootReady)\n        {\n            this.isReady = 2;\n\n            if (list !== null) {\n                for (let elem of list)\n                    elem.checkReady();\n            }\n\n            if (Element.debug)\n                console.log('>> ' + this.tagName + ' RREADY');\n\n            Object.keys(this._super).reverse().forEach(i =>\n            {\n                if ('rready' in this._super[i])\n                    this._super[i].rready();\n            });\n\n            this.rready();\n            if (this.onrootready) this.onrootready(this);\n        }\n\n        this.readyLocked--;\n\n        if (this.readyReenter && !this.readyLocked)\n        {\n            this.readyReenter = false;\n            this.checkReady();\n        }\n\n        if (this.tagName.toLowerCase() === 'r-dom-probe')\n            this.remove();\n    },\n\n    /**\n     *\tChecks if all children are ready and fires the appropriate function (`ready` and/or `rready`).\n     */\n    checkReady: function()\n    {\n        if (this.childNodes.length == 0)\n            return;\n\n        if (this.readyLocked)\n        {\n            this.readyReenter = true;\n            return;\n        }\n\n        let isReady = true;\n        let list = [];\n\n        let result = document.evaluate(\".//*[contains(name(),'-')]\", this, null, XPathResult.ANY_TYPE, null);\n\n        if (Element.debug)\n            console.log('# CHECKING ' + this.tagName);\n\n        while (true)\n        {\n            let elem = result.iterateNext();\n            if (!elem) break;\n\n            if (elem === this)\n                continue;\n\n            let root = this.findCustomParent(elem);\n            if (root !== this) continue;\n\n            if (Element.debug)\n                console.log('   ' + elem.tagName + ' = ' + elem.isReady);\n\n            if (!elem.isReady)\n                isReady = false;\n\n            list.push(elem);\n        }\n\n        if (!isReady) return;\n\n        this.markReady(list);\n    },\n\n    /**\n     * \tReturns the value of a field given its path. Starts from `global`, unless the first item in the path is `this`, in which case it will start from the element.\n     */\n    getFieldByPath: function(path)\n    {\n        if (!path) return null;\n\n        if (typeof(path) !== 'string')\n            return path;\n\n        let tmp = path.split('.');\n        let ref = global;\n\n        if (tmp.length && tmp[0] == 'this')\n        {\n            ref = this;\n            tmp.shift();\n        }\n\n        if (tmp.length && tmp[0] == 'root')\n        {\n            ref = this.getRoot();\n            tmp.shift();\n        }\n\n        while (ref != null && tmp.length != 0)\n            ref = ref[tmp.shift()];\n\n        return ref;\n    },\n\n    /**\n     * \tReturns the root of the element (that is, the `root` property). If not set it will attempt to find the root first.\n     */\n    getRoot: function() {\n        return this.root ? this.root : (this.root = this.findRoot());\n    },\n\n    /**\n     * \tSets the model of the element and executes the `modelChanged` event handler (unless `update` is set to false).\n     */\n    setModel: function (model, update=true)\n    {\n        if (!model) return this;\n\n        model = Rinn.ensureTypeOf(this.modelt, model);\n\n        if (this.model !== model)\n        {\n            if (this.model != null)\n            {\n                this.model.removeEventListener (this.eid+':modelChanged', this.onModelPreChanged, this);\n                this.model.removeEventListener (this.eid+':propertyChanging', this.onModelPropertyChanging, this);\n                this.model.removeEventListener (this.eid+':propertyChanged', this.onModelPropertyPreChanged, this);\n                this.model.removeEventListener (this.eid+':propertyRemoved', this.onModelPropertyRemoved, this);\n            }\n\n            this.model = model;\n\n            this.model.addEventListener (this.eid+':modelChanged', this.onModelPreChanged, this);\n            this.model.addEventListener (this.eid+':propertyChanging', this.onModelPropertyChanging, this);\n            this.model.addEventListener (this.eid+':propertyChanged', this.onModelPropertyPreChanged, this);\n            this.model.addEventListener (this.eid+':propertyRemoved', this.onModelPropertyRemoved, this);\n        }\n\n        if (update !== false)\n            this.model.setNamespace(this.eid).update(true).setNamespace(null);\n\n        return this;\n    },\n\n    /**\n     * \tReturns the model of the element. Added for symmetry only, exactly the same as accesing public property `model` of this class.\n     */\n    getModel: function ()\n    {\n        return this.model;\n    },\n\n    /**\n     * \tAdds one or more CSS classes (separated by space) to the element.\n     */\n    addClass: function (classString)\n    {\n        if (!classString) return this;\n\n        classString.split(' ').forEach(i =>\n        {\n            i = i.trim();\n            if (!i) return;\n\n            if (i[0] == '-' || i[0] == '+')\n                this.classList[i[0] == '-' ? 'remove' : 'add'](i.substr(1));\n            else\n                this.classList.add(i);\n        });\n\n        return this;\n    },\n\n    /**\n     * \tRemoves one or more CSS classes (separated by space) from the element.\n     */\n    removeClass: function (classString)\n    {\n        if (!classString) return this;\n\n        classString.split(' ').forEach(i =>\n        {\n            i = i.trim();\n            if (!i) return;\n\n            if (i[0] == '-' || i[0] == '+')\n                this.classList[i[0] == '-' ? 'remove' : 'add'](i.substr(1));\n            else\n                this.classList.remove(i);\n        });\n\n        return this;\n    },\n\n    /**\n     * \tSets one or more style properties to the element (separated by semi-colon).\n     */\n    setStyle: function (styleString)\n    {\n        if (!styleString) return this;\n\n        styleString.split(';').forEach(i => {\n            let j = (i = i.trim()).indexOf(':');\n            if (j == -1) return;\n\n            let name = i.substr(0, j).trim();\n            for (let k = name.indexOf('-'); k != -1; k = name.indexOf('-')) {\n                name = name.substr(0, k) + name.substr(k+1, 1).toUpperCase() + name.substr(k+2);\n            }\n\n            this.style[name] = i.substr(j+1).trim();\n        });\n\n        return this;\n    },\n\n    /**\n     * \tReturns the width of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n     */\n    getWidth: function (elem=null)\n    {\n        return (elem || this).getBoundingClientRect().width;\n    },\n\n    /**\n     * \tReturns the height of the specified element (or of itself it none provided), uses `getBoundingClientRect`.\n     */\n    getHeight: function (elem=null)\n    {\n        return (elem || this).getBoundingClientRect().height;\n    },\n\n    /**\n    **\tBinds all events in the specified map to the element, the events map can have one of the following forms:\n    **\n    **\t\t\"click .button\": \"doSomething\",\t\t(Delegated Event)\n    **\t\t\"click .button\": function() { },\t(Delegated Event)\n    **\t\t\"myevt &this\": \"...\",\t\t\t\t(Self Event)\n    **\t\t\"myevt\": \"...\",\t\t\t\t\t\t(Element Event)\n    **\t\t\"myevt @objName\": \"...\",\t\t\t(EventDispatcher Event)\n    **\t\t\"#propname\": \"...\",\t\t\t\t\t(Property Changed Event)\n    **\t\t\"keyup(10) .input\": \"...\"\t\t\t(Delegated Event with Parameters)\n    **\n    **\t>> Element bindEvents (object events);\n    */\n    bindEvents: function (events)\n    {\n        for (let evtstr in events)\n        {\n            let hdl = events[evtstr];\n\n            if (Rinn.typeOf(hdl) == 'string')\n                hdl = this[hdl];\n\n            hdl = hdl.bind(this);\n\n            var i = evtstr.indexOf(' ');\n\n            var name = i == -1 ? evtstr : evtstr.substr(0, i);\n            var selector = i == -1 ? '' : evtstr.substr(i + 1);\n\n            let args = null;\n\n            var j = name.indexOf('(');\n            if (j != -1)\n            {\n                args = name.substr(j+1, name.length-j-2).split(',');\n                name = name.substr(0, j);\n            }\n\n            if (selector[0] == '@')\n            {\n                if (selector != '@this')\n                {\n                    this[selector.substr(1)].addEventListener(name, hdl);\n                    continue;\n                }\n\n                selector = this;\n            }\n            else if (selector[0] == '&')\n            {\n                if (selector != '&this')\n                    selector = \"[data-ref='\"+selector.substr(1)+\"']\";\n                else\n                    selector = this;\n            }\n\n            if (name.substr(0, 1) == '#')\n            {\n                this.listen('propertyChanged.'+name.substr(1), this, hdl);\n                continue;\n            }\n\n            if (args != null)\n            {\n                switch (name)\n                {\n                    case 'keyup': case 'keydown':\n                        this.listen (name, selector, function (evt)\n                        {\n                            if (Rinn.indexOf(args, evt.keyCode.toString()) != -1)\n                                return hdl (evt, args);\n\n                            evt.continuePropagation = true;\n                        });\n\n                        continue;\n                }\n            }\n\n            this.listen (name, selector, hdl);\n        }\n\n        return this;\n    },\n\n    /**\n    **\tBinds all routes in the specified map to the Router object.\n    **\n    **\t\t\"route-path\": \"doSomething\"\t\t\t\t\t\tOn-Route\n    **\t\t\"route-path\": function (evt, args) { }\t\t\tOn-Route\n    **\t\t\"!route-path\": \"doSomething\"\t\t\t\t\tOn-UnRoute\n    **\t\t\"!route-path\": function (evt, args) { }\t\t\tOn-UnRoute\n    **\n    **\t>> Element bindRoutes ();\n    */\n    bindRoutes: function ()\n    {\n        if (!this.routes)\n            return;\n\n        for (let routeStr in this.routes)\n        {\n            let route = routeStr[0] === '!' ? Router.getRoute(routeStr.substr(1)) : Router.getRoute(routeStr);\n            let handler = this.routes[routeStr];\n\n            if (Rinn.typeOf(handler) === 'string')\n                handler = this[handler];\n\n            if (routeStr[0] === '!')\n                route.addHandler(handler, true, this);\n            else\n                route.addHandler(handler, false, this);\n        }\n    },\n\n    /**\n     * Unbinds all routes added by bindRoutes.\n     */\n    unbindRoutes: function ()\n    {\n        if (!this.routes)\n            return;\n\n        for (let routeStr in this.routes)\n        {\n            let route = routeStr[0] === '!' ? Router.getRoute(routeStr.substr(1)) : Router.getRoute(routeStr);\n            let handler = this.routes[routeStr];\n\n            if (Rinn.typeOf(handler) === 'string')\n                handler = this[handler];\n\n            if (routeStr[0] === '!')\n                route.removeHandler(handler, true, this);\n            else\n                route.removeHandler(handler, false, this);\n        }\n    },\n\n    /**\n    **\tExecutes the underlying event handler given an event and a selector. Called internally by listen().\n    **\n    **\t>> void _eventHandler (event evt, string selector, function handler);\n    */\n    _eventHandler: function (evt, selector, handler)\n    {\n        if (evt.continuePropagation === false)\n            return;\n\n        evt.continuePropagation = true;\n        evt.source = evt.target;\n\n        if (selector && selector instanceof HTMLElement)\n        {\n            if (evt.source === selector)\n            {\n                evt.continuePropagation = false;\n\n                if (handler.call (this, evt, evt.detail) === true)\n                    evt.continuePropagation = true;\n            }\n        }\n        else if (selector && selector != '*')\n        {\n            let elems = this.querySelectorAll(selector);\n\n            while (evt.source !== this)\n            {\n                let i = Rinn.indexOf (elems, evt.source, true);\n                if (i !== -1)\n                {\n                    evt.continuePropagation = false;\n\n                    if (handler.call (this, evt, evt.detail) === true)\n                        evt.continuePropagation = true;\n\n                    break;\n                }\n                else\n                {\n                    evt.source = evt.source.parentElement;\n                }\n            }\n        }\n        else\n        {\n            evt.continuePropagation = false;\n\n            if (handler.call (this, evt, evt.detail) === true)\n                evt.continuePropagation = true;\n        }\n\n        if (evt.continuePropagation === false)\n        {\n            evt.preventDefault();\n            evt.stopPropagation();\n        }\n    },\n\n    /**\n    **\tListens for an event on elements matching the specified selector, returns an object with a single method `remove` used\n    **\tto remove the listener when it is no longer needed.\n    **\n    **\t>> object listen (string eventName, string selector, function handler);\n    **\t>> object listen (string eventName, function handler);\n    */\n    listen: function (eventName, selector, handler)\n    {\n        let eventCatcher = false;\n        let eventImmediate = false;\n\n        if (Rinn.typeOf(selector) == 'function')\n        {\n            handler = selector;\n            selector = null;\n        }\n\n        if (eventName[eventName.length-1] == '!')\n        {\n            eventName = eventName.substr(0, eventName.length-1);\n            eventCatcher = true;\n        }\n\n        if (eventName[0] == '!')\n        {\n            eventName = eventName.substr(1);\n            eventImmediate = true;\n        }\n\n        let callback0 = null;\n        let callback1 = null;\n        let self = this;\n\n        this.addEventListener (eventName, callback0 = (evt) =>\n        {\n            if (evt.continuePropagation === false)\n                return;\n\n            if (!evt.firstCapture)\n            {\n                evt.firstCapture = this;\n                evt.firstCaptureCount = 0;\n                evt.queue = [];\n            }\n\n            if (evt.firstCapture === this)\n                evt.firstCaptureCount++;\n\n            if (eventCatcher == true)\n                evt.queue.push([this, selector, handler]);\n\n            if (eventImmediate == true)\n                this._eventHandler(evt, selector, handler);\n        },\n        true);\n\n        this.addEventListener (eventName, callback1 = (evt) =>\n        {\n            if (evt.continuePropagation === false)\n                return;\n\n            if (eventCatcher != true && eventImmediate != true)\n                this._eventHandler(evt, selector, handler);\n\n            if (evt.firstCapture === this && evt.continuePropagation !== false)\n            {\n                if (--evt.firstCaptureCount == 0)\n                {\n                    while (evt.queue.length)\n                    {\n                        let q = evt.queue.pop();\n                        q[0]._eventHandler(evt, q[1], q[2]);\n                    }\n\n                    evt.continuePropagation = false;\n                }\n            }\n        },\n        false);\n\n        return {\n            removed: false,\n            remove: function() {\n                if (this.removed) return;\n                this.removed = true;\n                self.removeEventListener(eventName, callback0, true);\n                self.removeEventListener(eventName, callback1, false);\n            }\n        };\n    },\n\n    /**\n    **\tCreates an event object for later dispatch.\n    */\n    createEventObject: function(eventName, args, bubbles)\n    {\n        let evt;\n\n        if (eventName == 'click')\n            evt = new MouseEvent(eventName, { bubbles: bubbles, detail: args });\n        else\n            evt = new CustomEvent (eventName, { bubbles: bubbles, detail: args });\n\n        return evt;\n    },\n\n    /**\n    **\tDispatches a new event with the specified name and the given arguments.\n    */\n    dispatch: function (eventName, args=null, bubbles=true)\n    {\n        let propName = 'on' + eventName.toLowerCase();\n        if (propName in this) {\n            this[propName] (args, this);\n            return this;\n        }\n\n        this.dispatchEvent (this.createEventObject(eventName, args, bubbles));\n        return this;\n    },\n\n    /**\n    **\tDispatches a new event on the specified element with the given name and arguments (uses `CustomEvent`).\n    */\n    dispatchOn: function (elem, eventName, args=null, bubbles=true) {\n        elem.dispatchEvent (this.createEventObject(eventName, args, bubbles));\n        return this;\n    },\n\n    /**\n    **\tSets the innerHTML property of the element and runs some post set-content tasks.\n    */\n    setInnerHTML: function (value)\n    {\n        this.readyLocked++;\n        this.innerHTML = value;\n        this.readyLocked--;\n        return this;\n    },\n\n    /**\n    **\tCollects all watchers (data-watch, data-visible, data-attr, data-property), that depend on the model, should be invoked when the\n    **  structure of the element changed (added/removed children). This is automatically called when the setInnerHTML method is called.\n    **\n    **\tNote that for 3rd party libs that add children to this element (which could probably have a watcher) will possibly result in\n    **\tduplication of the added elements when compiling the innerHTML template. To prevent this add the 'pseudo' CSS class to any\n    **\telement that should not be added to the HTML template.\n    **\n    **\t>> void collectWatchers ();\n    */\n    collectWatchers: function ()\n    {\n        let self = this;\n        let modified = false;\n        let list;\n\n        if (!this.isRoot) return;\n\n        let _list_watch_length = this._list_watch.length;\n        let _list_visible_length = this._list_visible.length;\n        let _list_attr_length = this._list_attr.length;\n        let _list_property_length = this._list_property.length;\n\n        /* *** */\n        list = this.querySelectorAll('[data-watch]');\n        for (let i = 0; i < list.length; i++)\n        {\n            for (let j of list[i].querySelectorAll('.pseudo'))\n                j.remove();\n\n            list[i]._template = Template.compile(list[i].innerHTML);\n            list[i]._watch = new RegExp('^(' + list[i].dataset.watch + ')$');\n            list[i].innerHTML = '';\n\n            list[i].removeAttribute('data-watch');\n            this._list_watch.push(list[i]);\n        }\n\n        if ('selfWatch' in this.dataset)\n        {\n            for (let j of this.querySelectorAll('.pseudo'))\n                j.remove();\n\n            this._template = Template.compile(this.innerHTML);\n            this._watch = new RegExp('^(' + this.dataset.selfWatch + ')$');\n            this.innerHTML = '';\n\n            this.removeAttribute('data-self-watch');\n            this._list_watch.push(this);\n        }\n\n        /* *** */\n        list = this.querySelectorAll('[data-visible]');\n        for (let i = 0; i < list.length; i++)\n        {\n            list[i]._visible = Template.compile(list[i].dataset.visible);\n\n            list[i].removeAttribute('data-visible');\n            this._list_visible.push(list[i]);\n        }\n\n        if ('selfVisible' in this.dataset)\n        {\n            this._visible = Template.compile(this.dataset.selfVisible);\n\n            this.removeAttribute('data-self-visible');\n            this._list_visible.push(this);\n        }\n\n        /* *** */\n        list = this.querySelectorAll('[data-attr]');\n        for (let i = 0; i < list.length; i++)\n        {\n            list[i]._attr = [];\n\n            for (let j of list[i].dataset.attr.split(';'))\n            {\n                j = j.split(':');\n                if (j.length != 2) continue;\n\n                list[i]._attr.push({\n                    name: j[0].trim(),\n                    value: Template.compile(j[1].trim())\n                });\n            }\n\n            list[i].removeAttribute('data-attr');\n            this._list_attr.push(list[i]);\n        }\n\n        if ('selfAttr' in this.dataset)\n        {\n            this._attr = [];\n\n            for (let j of this.dataset.selfAttr.split(';'))\n            {\n                j = j.split(':');\n                if (j.length != 2) continue;\n\n                this._attr.push({\n                    name: j[0].trim(),\n                    value: Template.compile(j[1].trim())\n                });\n            }\n\n            this.removeAttribute('data-self-attr');\n            this._list_attr.push(this);\n        }\n\n        /* *** */\n        list = this.querySelectorAll('[data-property]');\n        for (let i = 0; i < list.length; i++)\n        {\n            list[i].onchange = list[i].onblur = function()\n            {\n                switch (this.type)\n                {\n                    case 'radio':\n                        if (this.checked) self.getModel().set(this.name, this.value);\n                        break;\n\n                    case 'checkbox':\n                        self.getModel().set(this.name, this.checked ? '1' : '0');\n                        break;\n\n                    case 'field':\n                        self.getModel().set(this.name, this.getValue());\n                        break;\n\n                    default:\n                        self.getModel().set(this.name, this.value);\n                        break;\n                }\n            };\n\n            if (list[i].tagName == 'SELECT')\n            {\n                list[i].onmouseup = function()\n                {\n                    self.getModel().set(this.name, this.value);\n                };\n            }\n\n            list[i].name = list[i].dataset.property;\n\n            list[i].removeAttribute('data-property');\n            this._list_property.push(list[i]);\n        }\n\n        if ('selfProperty' in this.dataset)\n        {\n            this.onchange = this.onblur = function()\n            {\n                switch (this.type)\n                {\n                    case 'radio':\n                        if (this.checked) self.getModel().set(this.name, this.value);\n                        break;\n\n                    case 'checkbox':\n                        self.getModel().set(this.name, this.checked ? '1' : '0');\n                        break;\n\n                    case 'field':\n                        self.getModel().set(this.name, this.getValue());\n                        break;\n\n                    default:\n                        self.getModel().set(this.name, this.value);\n                        break;\n                }\n            };\n\n            if (this.tagName == 'SELECT')\n            {\n                this.onmouseup = function()\n                {\n                    self.getModel().set(this.name, this.value);\n                };\n            }\n\n            this.name = this.dataset.selfProperty;\n\n            this.removeAttribute('data-self-property');\n            this._list_property.push(this);\n        }\n\n        /* *** */\n        this._list_watch = this._list_watch.filter(i => i.parentElement != null);\n        if (_list_watch_length != this._list_watch.length) modified = true;\n\n        this._list_visible = this._list_visible.filter(i => i.parentElement != null);\n        if (_list_visible_length != this._list_visible.length) modified = true;\n\n        this._list_attr = this._list_attr.filter(i => i.parentElement != null);\n        if (_list_attr_length != this._list_attr.length) modified = true;\n\n        this._list_property = this._list_property.filter(i => i.parentElement != null);\n        if (_list_property_length != this._list_property.length) modified = true;\n\n        if (this.model != null && modified)\n            this.model.setNamespace(this.eid).update(true).setNamespace(null);\n    },\n\n    /**\n    **\tExecuted when the element is created and yet not attached to the DOM tree.\n    */\n    onCreated: function()\n    {\n    },\n\n    /**\n     * Executed when the element is attached to the DOM tree.\n     */\n    elementConnected: function()\n    {\n        this.bindRoutes();\n        this.onConnected();\n    },\n\n    /**\n     * Executed when the element is no longer a part of the DOM tree.\n     */\n    elementDisconnected: function()\n    {\n        this.unbindRoutes();\n    },\n\n    /**\n    **\tExecuted when the element is attached to the DOM tree.\n    */\n    onConnected: function()\n    {\n        if (this.onconnected) this.onconnected(this);\n    },\n\n    /**\n    **\tExecuted when the element is no longer a part of the DOM tree.\n    */\n    onDisconnected: function()\n    {\n        if (this.ondisconnected) this.ondisconnected(this);\n    },\n\n    /**\n    **\tExecuted on the root element when a child element has `data-ref` attribute and it was added to it.\n    */\n    onRefAdded: function (name, element)\n    {\n    },\n\n    /**\n    **\tExecuted on the root element when a child element has `data-ref` attribute and it was removed from it.\n    */\n    onRefRemoved: function (name, element)\n    {\n    },\n\n    /**\n    **\tEvent handler invoked when the model has changed, executed before onModelChanged() to update internal dependencies,\n    **\tshould not be overriden or elements watching the model will not be updated.\n    **\n    **\t>> void onModelPreChanged (evt, args);\n    */\n    onModelPreChanged: function (evt, args)\n    {\n        let data = this.getModel().get();\n\n        for (let i = 0; i < this._list_watch.length; i++)\n        {\n            for (let j of args.fields)\n            {\n                if (!this._list_watch[i]._watch.test(j))\n                    continue;\n\n                this._list_watch[i].innerHTML = this._list_watch[i]._template(data);\n                break;\n            }\n        }\n\n        for (let i = 0; i < this._list_visible.length; i++)\n        {\n            if (!!this._list_visible[i]._visible(data, 'arg'))\n                this._list_visible[i].style.removeProperty('display');\n            else\n                this._list_visible[i].style.setProperty('display', 'none', 'important');\n        }\n\n        for (let i = 0; i < this._list_attr.length; i++)\n        {\n            for (let j of this._list_attr[i]._attr)\n                this._list_attr[i][j.name] = j.value(data, 'arg');\n        }\n\n        this.onModelChanged(evt, args);\n    },\n\n    /**\n    **\tEvent handler invoked when the model has changed.\n    */\n    onModelChanged: function (evt, args) // @override\n    {\n    },\n\n    /**\n    **\tEvent handler invoked when a property of the model is changing. Fields `name` and `value` can be found in the `args` object.\n    */\n    onModelPropertyChanging: function (evt, args) // @override\n    {\n    },\n\n    /**\n    **\tEvent handler invoked when a property of the model has changed, executed before onModelPropertyChanged() to update internal\n    **\tdependencies. Automatically triggers internal events named `propertyChanged.<propertyName>` and `propertyChanged`.\n    **\tShould not be overriden or elements depending on the property will not be updated.\n    */\n    onModelPropertyPreChanged: function (evt, args)\n    {\n        for (let i = 0; i < this._list_property.length; i++)\n        {\n            if (this._list_property[i].name == args.name)\n            {\n                let trigger = true;\n\n                switch (this._list_property[i].type)\n                {\n                    case 'radio':\n                        if (this._list_property[i].value != args.value)\n                        {\n                            this._list_property[i].parentElement.classList.remove('active');\n                            continue;\n                        }\n\n                        this._list_property[i].checked = true;\n                        this._list_property[i].parentElement.classList.add('active');\n                        break;\n\n                    case 'checkbox':\n                        if (~~args.value)\n                        {\n                            this._list_property[i].checked = true;\n                            this._list_property[i].parentElement.classList.add('active');\n                        }\n                        else\n                        {\n                            this._list_property[i].checked = false;\n                            this._list_property[i].parentElement.classList.remove('active');\n                        }\n\n                        break;\n\n                    case 'field':\n                        this._list_property[i].val = this._list_property[i].dataset.value = args.value;\t\n                        this._list_property[i].setValue (args.value);\n                        trigger = false;\n                        break;\n\n                    default:\n                        this._list_property[i].value = args.value;\n                        this._list_property[i].val = this._list_property[i].dataset.value = args.value;\t\n\n                        if (this._list_property[i].value != args.value)\n                            trigger = false;\n\n                        break;\n                }\n\n                if (trigger && this._list_property[i].onchange)\n                    this._list_property[i].onchange();\n            }\n        }\n\n        this.dispatch ('propertyChanged.' + args.name, args, false);\n        this.dispatch ('propertyChanged', args, false);\n\n        this.onModelPropertyChanged(evt, args);\n    },\n\n    /**\n    **\tEvent handler invoked when a property of the model has changed.\n    */\n    onModelPropertyChanged: function (evt, args) // @override\n    {\n    },\n\n    /**\n    **\tEvent handler invoked when a property of the model is removed. Field `name` can be found in the `args` object.\n    */\n    onModelPropertyRemoved: function (evt, args) // @override\n    {\n    },\n\n    /*\n    **\tRuns the following preparation procedures on the specified prototype:\n    **\t\t- All functions named 'event <event-name> [event-selector]' will be moved to the 'events' map.\n    **\t\t- All functions named 'route <route-path>' will be moved to the 'routes' map.\n    **\n    **\t>> void preparePrototype (object proto);\n    */\n    preparePrototype: function (proto)\n    {\n        if (proto.__prototypePrepared === true)\n            return;\n\n        proto.__prototypePrepared = true;\n\n        if (!proto.hasOwnProperty('events') || !proto.events)\n            proto.events = { };\n\n        if (!proto.hasOwnProperty('routes') || !proto.routes)\n            proto.routes = { };\n\n        for (let i in proto)\n        {\n            if (i.startsWith('event '))\n            {\n                proto.events[i.substr(6)] = proto[i];\n                delete proto[i];\n            }\n            else if (i.startsWith('route '))\n            {\n                proto.routes[i.substr(6)] = proto[i];\n                delete proto[i];\n            }\n        }\n    },\n\n    /*\n    **\tRegisters a new custom element with the specified name. Extra functionality can be added with one or more prototypes, by default\n    **\tall elements also get the `Element` prototype. Note that the final prototypes of all registered elements are stored, and if you want\n    **\tto inherit another element's prototype just provide its name (string) in the protos argument list.\n    **\n    **\t>> class register (string name, ...(object|string) protos);\n    */\n    register: function (name, ...protos)\n    {\n        const newElement = class extends HTMLElement\n        {\n            constructor()\n            {\n                super();\n                this.invokeConstructor = true;\n\n                if (Element.debug)\n                    console.log('CREATED ' + this.tagName);\n\n                this._super = { };\n\n                for (let i of Object.entries(this.constructor.prototype._super))\n                {\n                    this._super[i[0]] = { };\n\n                    for (let j of Object.entries(i[1])) {\n                        this._super[i[0]][j[0]] = j[1].bind(this);\n                    }\n                }\n\n                this.onCreated();\n            }\n\n            findRoot (srcElement=null)\n            {\n                let elem = srcElement ? srcElement : this.parentElement;\n\n                while (elem != null)\n                {\n                    if ('isRoot' in elem && elem.isRoot === true)\n                        return elem;\n\n                    elem = elem.parentElement;\n                }\n\n                return null;\n            }\n\n            findCustomParent (srcElement=null)\n            {\n                let elem = srcElement ? srcElement.parentElement : this.parentElement;\n\n                while (elem != null)\n                {\n                    if (elem.tagName.indexOf('-') !== -1)\n                        return elem;\n\n                    elem = elem.parentElement;\n                }\n\n                return null;\n            }\n\n            connectReference (root=null, flags=255)\n            {\n                if (!this.root && (flags & 1) == 1)\n                {\n                    if (root == null) root = this.findRoot();\n                    if (root != null)\n                    {\n                        if (this.dataset.ref)\n                            root[this.dataset.ref] = this;\n\n                        this.root = root;\n                    }\n                }\n            }\n\n            connectedCallback ()\n            {\n                this.connectReference(null, 1);\n\n                if (this.invokeConstructor)\n                {\n                    this.invokeConstructor = false;\n                    this.__ctor();\n                }\n\n                this.connectReference(null, 2);\n                this.elementConnected();\n\n                if (this.dataset.xref)\n                    globalThis[this.dataset.xref] = this;\n            }\n\n            disconnectedCallback()\n            {\n                if (this.root)\n                {\n                    if (this.dataset.ref)\n                    {\n                        this.root.onRefRemoved (this.dataset.ref, this);\n\n                        delete this.root[this.dataset.ref];\n                    }\n\n                    this.root = null;\n                }\n\n                this.elementDisconnected();\n\n                if (this.dataset.xref)\n                    delete globalThis[this.dataset.xref];\n            }\n        };\n\n        Rinn.override (newElement.prototype, Element);\n\n        const proto = { };\n        const _super = { };\n        const events = Rinn.clone(Element.events);\n\n        let __init = true;\n        let __ready = true;\n        let __rready = true;\n        let __check;\n\n        for (let i = 0; i < protos.length; i++)\n        {\n            if (!protos[i]) continue;\n\n            if (Rinn.typeOf(protos[i]) == 'string')\n            {\n                const name = protos[i];\n\n                protos[i] = elementPrototypes[name];\n                if (!protos[i]) continue;\n\n                _super[name] = { };\n\n                for (let f in protos[i])\n                {\n                    if (Rinn.typeOf(protos[i][f]) != 'function')\n                        continue;\n\n                    _super[name][f] = protos[i][f];\n                }\n\n                __init = false;\n                __ready = false;\n                __rready = false;\n                __check = false;\n            }\n            else\n            {\n                Element.preparePrototype(protos[i]);\n                __check = true;\n            }\n\n            if ('_super' in protos[i])\n                Rinn.override (_super, protos[i]._super);\n\n            if ('events' in protos[i])\n                Rinn.override (events, protos[i].events);\n\n            Rinn.override (newElement.prototype, protos[i]);\n            Rinn.override (proto, protos[i]);\n\n            if (__check)\n            {\n                if (!__init && 'init' in protos[i]) __init = true;\n                if (!__ready && 'ready' in protos[i]) __ready = true;\n                if (!__rready && 'rready' in protos[i]) __rready = true;\n            }\n        }\n\n        let dummy = function(){};\n\n        if (!__init)\n        {\n            newElement.prototype.init = dummy;\n            proto.init = dummy;\n        }\n\n        if (!__ready)\n        {\n            newElement.prototype.ready = dummy;\n            proto.ready = dummy;\n        }\n\n        if (!__rready)\n        {\n            newElement.prototype.rready = dummy;\n            proto.rready = dummy;\n        }\n\n        newElement.prototype._super = _super;\n        newElement.prototype.events = events;\n\n        proto._super = _super;\n        proto.events = events;\n\n        customElements.define (name, newElement);\n\n        elementPrototypes[name] = proto;\n        elementClasses[name] = newElement;\n\n        return newElement;\n    },\n\n    /*\n    **\tExpands an already created custom element with the specified prototype(s).\n    **\n    **\t>> void expand (string elementName, ...object protos);\n    */\n    expand: function (name, ...protos)\n    {\n        if (!(name in elementPrototypes))\n            return;\n\n        const self = elementPrototypes[name];\n        const elem = elementClasses[name];\n\n        const _super = self._super;\n        const events = self.events;\n\n        for (let proto of protos)\n        {\n            Element.preparePrototype(proto);\n\n            if ('_super' in proto)\n                Rinn.override (_super, proto._super);\n\n            if ('events' in proto)\n                Rinn.override (events, proto.events);\n\n            Rinn.override (elem.prototype, proto);\n            Rinn.override (self, proto);\n        }\n\n        elem.prototype._super = _super;\n        elem.prototype.events = events;\n\n        self._super = _super;\n        self.events = events;\n    },\n\n    /*\n    **\tAppends a hook to a function of a custom element.\n    */\n    hookAppend: function (name, functionName, newFunction)\n    {\n        if (!(name in elementPrototypes))\n            return;\n\n        let hook1 = Rinn.hookAppend(elementPrototypes[name], functionName, newFunction);\n        let hook2 = Rinn.hookAppend(elementClasses[name].prototype, functionName, newFunction);\n\n        return { \n            unhook: function() {\n                hook1.unhook();\n                hook2.unhook();\n            }\n        };\n    },\n\n    /*\n    **\tPrepends a hook to a function of a custom element.\n    */\n    hookPrepend: function (name, functionName, newFunction)\n    {\n        if (!(name in elementPrototypes))\n            return;\n\n        let hook1 = Rinn.hookPrepend(elementPrototypes[name], functionName, newFunction);\n        let hook2 = Rinn.hookPrepend(elementClasses[name].prototype, functionName, newFunction);\n\n        return { \n            unhook: function() {\n                hook1.unhook();\n                hook2.unhook();\n            }\n        };\n    },\n\n    /**\n    **\tBuilt-in action handlers.\n    */\n\n    /**\n    **\t:toggleClass <className> [<selector>]\n    **\n    **\tToggles a CSS class on the element.\n    */\n    ':toggleClass': function (args, evt)\n    {\n        let elem = evt.source;\n\n        if ('2' in args)\n            elem = document.querySelector(args[2]);\n\n        if (!elem) return;\n\n        if (elem.classList.contains(args[1]))\n            elem.classList.remove(args[1]);\n        else\n            elem.classList.add(args[1]);\n    },\n\n    /**\n    **\t:setClass <className> [<selector>]\n    **\n    **\tSets a CSS class on the element.\n    */\n    ':setClass': function (args, evt)\n    {\n        let elem = evt.source;\n\n        if ('2' in args)\n            elem = document.querySelector(args[2]);\n\n        if (!elem) return;\n\n        elem.classList.add(args[1]);\n    },\n\n    /**\n    **\t:volatileClass <className> [<selector>]\n    **\n    **\tAdds the CSS class to the element and any click outside will cause it to be removed.\n    */\n    ':volatileClass': function (args, evt)\n    {\n        let elem = evt.source;\n\n        if ('2' in args)\n            elem = document.querySelector(args[2]);\n\n        if (!elem) return;\n\n        elem.classList.add(args[1]);\n\n        let fn = () => {\n            window.removeEventListener('click', fn, true);\n            elem.classList.remove(args[1]);\n        };\n\n        window.addEventListener('click', fn, true);\n    },\n\n    /**\n    **\t:toggleClassUnique <className> <parentSelector> <childSelector>\n    **\n    **\tToggles a CSS class on the element and only one element in the selected parent can have the class.\n    */\n    ':toggleClassUnique': function (args, evt)\n    {\n        let elem = evt.source;\n        if (!elem) return;\n\n        if (elem.classList.contains(args[1]))\n        {\n            elem.classList.remove(args[1]);\n        }\n        else\n        {\n            elem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach(elem => elem.classList.remove(args[1]));\n            elem.classList.add(args[1]);\n        }\n    },\n\n    /**\n    **\t:setClassUnique <className> <parentSelector> <childSelector>\n    **\n    **\tSets a CSS class on the element and only that element in the selected parent can have the class.\n    */\n    ':setClassUnique': function (args, evt)\n    {\n        let elem = evt.source;\n        if (!elem) return;\n\n        elem.querySelectorParent(args[2]).querySelectorAll(args[3]).forEach(elem => elem.classList.remove(args[1]));\n        elem.classList.add(args[1]);\n    }\n};\n\nElement.debug = false;\n\nElement.register('r-elem', {\n});\n\nElement.register ('r-dom-probe', {\n});\n\n/* ****************************************** */\n\n/**\n * Finds the parent element given a selector.\n */\nHTMLElement.prototype.querySelectorParent = function (selector)\n{\n    let elem = this;\n\n    while (elem != null)\n    {\n        if (elem.matches(selector))\n            break;\n\n        elem = elem.parentElement;\n    }\n\n    return elem;\n};\n\nexport default Element;\n","\r\nimport base64 from 'base-64';\r\n\r\n/**\r\n * API interface utility functions.\r\n */\r\n\r\nconst Api =\r\n{\r\n    /**\r\n     * Flags constants.\r\n     */\r\n    REQUEST_PACKAGE_SUPPORTED:\t0x01,\r\n    REQ64_SUPPORTED: \t\t\t0x02,\r\n    JSON_RESPONSE_SUPPORTED: \t0x04,\r\n    XML_RESPONSE_SUPPORTED: \t0x08,\r\n    INCLUDE_CREDENTIALS:\t\t0x10,\r\n    UNIQUE_STAMP:\t\t\t\t0x20,\r\n    DISABLE_CORS:\t\t\t\t0x40,\r\n\r\n    /**\r\n     * Target URL for all the API requests. Set by calling `setEndPoint`.\r\n     */\r\n    apiUrl: \"/api\",\r\n\r\n    /**\r\n     * Capabilities flag.\r\n     */\r\n    flags: 0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20,\r\n\r\n    /**\r\n     * Indicates if all request data will be packed into a req64 parameter instead of individual fields.\r\n     */\r\n    useReq64: false,\r\n\r\n    /**\r\n     * Number of retries to execute each API call before giving up and invoking error handlers.\r\n     */\r\n    retries: 0,\r\n\r\n    /**\r\n     * Headers for the request.\r\n     */\r\n    headers: { },\r\n\r\n    /**\r\n     * Level of the current request. Used to detect nested requests.\r\n     */\r\n    _requestLevel: 0,\r\n\r\n    /**\r\n     * Indicates if all API calls should be bundled in a request package. Activated by calling the packageBegin() function and finished with packageEnd().\r\n     */\r\n    _requestPackage: 0,\r\n\r\n    /**\r\n     * When in package-mode, this contains the package data to be sent upon a call to packageEnd().\r\n     */\r\n    _packageData: [],\r\n\r\n    /**\r\n     * Sets the API end-point URL address.\r\n     */\r\n    setEndPoint: function (apiUrl, flags=null)\r\n    {\r\n        this.apiUrl = apiUrl;\r\n        this.flags = flags ?? this.flags;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Overridable filter that processes the response from the server and returns true if it was successful. The `res` parameter indicates the response data, and `req` the request data.\r\n     */\r\n    responseFilter: function (res, req)\r\n    {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Starts \"package-mode\" (using the `rpkg` field). Any API calls after this will be bundled together.\r\n     */\r\n    packageBegin: function ()\r\n    {\r\n        if (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n            return;\r\n\r\n        this._requestPackage++;\r\n    },\r\n\r\n    /**\r\n     * Finishes \"package-mode\" and a single API request with the currently constructed package will be sent.\r\n     */\r\n    packageEnd: function (callback)\r\n    {\r\n        if (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n            return;\r\n\r\n        if (!this._requestPackage)\r\n            return;\r\n\r\n        if (--this._requestPackage)\r\n            return;\r\n\r\n        this.packageSend(callback);\r\n    },\r\n\r\n    /**\r\n     * Starts package-mode, executes the callback and finishes package-mode. Therefore any requests made by the callback will be packed together.\r\n     */\r\n    batch: function (callback, responseCallback=null)\r\n    {\r\n        if (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n        {\r\n            callback();\r\n            if (responseCallback) responseCallback();\r\n            return;\r\n        }\r\n\r\n        this.packageBegin();\r\n        callback();\r\n        this.packageEnd(responseCallback);\r\n    },\r\n\r\n    /**\r\n     * Sends a single API request with the currently constructed package and maintains package-mode.\r\n     */\r\n    packageSend: function (callback)\r\n    {\r\n        if (!(this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n            return;\r\n\r\n        if (!this._packageData.length)\r\n            return;\r\n\r\n        let _packageData = this._packageData;\r\n        this._packageData = [];\r\n\r\n        var rpkg = \"\";\r\n\r\n        for (var i = 0; i < _packageData.length; i++)\r\n            rpkg += \"r\"+i+\",\"+base64.encode(this.encodeParams(_packageData[i][2]))+\";\";\r\n\r\n        this._showProgress();\r\n\r\n        this.apiCall (\r\n            { rpkg: rpkg },\r\n\r\n            (res, req) =>\r\n            {\r\n                this._hideProgress();\r\n\r\n                for (let i = 0; i < _packageData.length; i++)\r\n                {\r\n                    try\r\n                    {\r\n                        var response = res[\"r\"+i];\r\n                        if (!response)\r\n                        {\r\n                            if (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n                            continue;\r\n                        }\r\n\r\n                        if (_packageData[i][0] != null)\r\n                        {\r\n                            if (this.responseFilter (response, _packageData[i][2]))\r\n                            {\r\n                                _packageData[i][0] (response, _packageData[i][2]);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n\r\n                if (callback) callback();\r\n            },\r\n\r\n            (req) =>\r\n            {\r\n                this._hideProgress();\r\n\r\n                for (let i = 0; i < _packageData.length; i++)\r\n                {\r\n                    if (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n                }\r\n            }\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Adds CSS class 'busy' to the HTML root element, works only if running inside a browser.\r\n     */\r\n    _showProgress: function ()\r\n    {\r\n        if ('document' in global) {\r\n            this._requestLevel++;\r\n            if (this._requestLevel > 0) global.document.documentElement.classList.add('busy');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes the 'busy' CSS class from the HTML element.\r\n     */\r\n    _hideProgress: function ()\r\n    {\r\n        if ('document' in global)\r\n        {\r\n            this._requestLevel--;\r\n            if (this._requestLevel) return;\r\n\r\n            setTimeout(() => {\r\n                if (this._requestLevel === 0)\r\n                    global.document.documentElement.classList.remove('busy');\r\n            }, 250);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets an HTTP header.\r\n     */\r\n    header: function (name, value)\r\n    {\r\n        if (value === null)\r\n            delete this.headers[name];\r\n        else\r\n            this.headers[name] = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Returns a parameter string for a GET request given an object with fields.\r\n     */\r\n    encodeParams: function (obj)\r\n    {\r\n        let s = [];\r\n\r\n        if (obj instanceof FormData)\r\n        {\r\n            for (let i of obj.entries())\r\n                s.push(encodeURIComponent(i[0]) + '=' + encodeURIComponent(i[1]));\r\n        }\r\n        else\r\n        {\r\n            for (let i in obj)\r\n                s.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\r\n        }\r\n\r\n        return s.join('&');\r\n    },\r\n\r\n    /**\r\n     * Returns a URL given a relative or absolute URL.\r\n     */\r\n    getUrl: function (url)\r\n    {\r\n        if (url.indexOf('//') !== -1)\r\n            return url;\r\n\r\n        return this.apiUrl + url;\r\n    },\r\n\r\n    /**\r\n     * Appends a parameter to the URL.\r\n     */\r\n    appendParam: function (url, param)\r\n    {\r\n        return url + (url.indexOf('?') == -1 ? '?' : '&') + param;\r\n    },\r\n\r\n    /**\r\n     * Executes an API call to the URL stored in the `apiUrl` property. By default `httpMethod` is \"auto\", which will determine the best depending on the data to\r\n     * be sent. Any connection error will be reported to the `failure` callback, and similarly any success to the `success` callback. The `params` object can be\r\n     * a FormData object or just a regular object.\r\n     */\r\n    apiCall: function (params, success, failure, httpMethod=null, retries=null, relativeUrl='')\r\n    {\r\n        let url = this.getUrl(relativeUrl);\r\n\r\n        if (this.flags & Api.UNIQUE_STAMP)\r\n            url = this.appendParam(url, '_='+Date.now());\r\n\r\n        httpMethod = httpMethod ? httpMethod.toUpperCase() : null;\r\n        if (httpMethod != 'GET' && httpMethod != 'POST')\r\n            httpMethod = 'auto';\r\n\r\n        if (retries === null)\r\n            retries = this.retries;\r\n\r\n        if (this._requestPackage && (this.flags & Api.REQUEST_PACKAGE_SUPPORTED))\r\n        {\r\n            if (!(params instanceof FormData))\r\n                params = {...params};\r\n\r\n            this._packageData.push([success, failure, params]);\r\n            return;\r\n        }\r\n\r\n        this._showProgress();\r\n\r\n        let data = params;\r\n\r\n        let options =\r\n        {\r\n            mode: this.flags & Api.DISABLE_CORS ? 'no-cors' : 'cors',\r\n            headers: {\r\n                'Accept': 'text/html,application/xhtml+xml,application/xml,application/json;q=0.9',\r\n                ...this.headers\r\n            },\r\n            method: httpMethod,\r\n            body: null,\r\n            multipart: false\r\n        };\r\n\r\n        if (this.flags & Api.INCLUDE_CREDENTIALS)\r\n            options.credentials = 'include';\r\n\r\n        if (typeof(data) !== 'string' && !(data instanceof Blob))\r\n        {\r\n            if (!(data instanceof FormData))\r\n            {\r\n                data = new FormData();\r\n\r\n                for (let i in params)\r\n                {\r\n                    if ((params[i] instanceof File) || (params[i] instanceof Blob))\r\n                        data.append(i, params[i], params[i].name);\r\n                    else\r\n                        data.append(i, params[i]);\r\n                }\r\n            }\r\n\r\n            for (let i of data.entries())\r\n            {\r\n                if ((i[1] instanceof File) || (i[1] instanceof Blob))\r\n                {\r\n                    options.method = 'POST';\r\n                    options.multipart = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this.useReq64 && (this.flags & Api.REQ64_SUPPORTED) && !options.multipart)\r\n            {\r\n                let tmp = new FormData();\r\n                tmp.append('req64', base64.encode(this.encodeParams(data)));\r\n                data = tmp;\r\n            }\r\n\r\n            if (options.method == 'auto')\r\n            {\r\n                let l = 0;\r\n\r\n                options.method = 'GET';\r\n\r\n                for (let i of data.entries())\r\n                {\r\n                    l += i[0].length + i[1].length + 2;\r\n\r\n                    if (l > 960)\r\n                    {\r\n                        options.method = 'POST';\r\n                        break;\r\n                    }\r\n                }\t\r\n            }\r\n\r\n            if (options.method == 'GET')\r\n            {\r\n                url = this.appendParam(url, this.encodeParams(data));\r\n            }\r\n            else\r\n            {\r\n                if (!options.multipart)\r\n                {\r\n                    options.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n                    options.body = this.encodeParams(data);\r\n                }\r\n                else\r\n                    options.body = data;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (typeof(data) === 'string')\r\n            {\r\n                if (data[0] === '<')\r\n                {\r\n                    if (data.endsWith('</soap:Envelope>'))\r\n                        options.headers['Content-Type'] = 'application/soap+xml';\r\n                    else\r\n                        options.headers['Content-Type'] = 'application/xml';\r\n                }\r\n                else\r\n                {\r\n                    if (data[0] === '{' || data[0] === '[')\r\n                        options.headers['Content-Type'] = 'application/json';\r\n                    else\r\n                        options.headers['Content-Type'] = 'application/octet-stream';\r\n                }\r\n            }\r\n            else\r\n                options.headers['Content-Type'] = data.type;\r\n\r\n            options.method = 'POST';\r\n            options.body = data;\r\n        }\r\n\r\n        global.fetch(url, options)\r\n        .then(result => this.decodeResult(result))\r\n        .then(result =>\r\n        {\r\n            this._hideProgress();\r\n            if (!success) return\r\n\r\n            if (this.responseFilter(result, params)) {\r\n                try { success(result, params); } catch(e) { }\r\n            }\r\n        })\r\n        .catch(err =>\r\n        {\r\n            this._hideProgress();\r\n\r\n            if (retries == 0) {\r\n                if (failure) failure(err, params);\r\n            } else {\r\n                this.apiCall (data, success, failure, httpMethod, retries-1, relativeUrl);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Decodes a result obtained using fetch into a usable object.\r\n     */\r\n    decodeResult: function (result)\r\n    {\r\n        let type = result.headers.get('content-type').split(';')[0].toLowerCase();\r\n\r\n        if ((this.flags & Api.JSON_RESPONSE_SUPPORTED) && type.indexOf('json') !== -1)\r\n            return result.json();\r\n\r\n        if ((this.flags & Api.XML_RESPONSE_SUPPORTED) && type.indexOf('xml') !== -1)\r\n        {\r\n            return new Promise((resolve, reject) =>\r\n            {\r\n                result.text().then(data =>\r\n                {\r\n                    data = (new DOMParser).parseFromString(data, 'text/xml');\r\n                    resolve(data);\r\n                })\r\n                .catch(reject);\r\n            });\r\n        }\r\n\r\n        return result.blob();\r\n    },\r\n\r\n    /**\r\n     * Makes a blob with the specified data and type.\r\n     */\r\n    getBlob: function (data, type)\r\n    {\r\n        return new Blob ([data], { type: type });\r\n    },\r\n\r\n    /**\r\n     * Provided access to the base64 module to encode/decode data.\r\n     */\r\n    base64:\r\n    {\r\n        encode: function (value)\r\n        {\r\n            return base64.encode(value);\r\n        },\r\n\r\n        decode: function (value)\r\n        {\r\n            return base64.decode(value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Executes an API request, returns a promise.\r\n     */\r\n    request: function (method, url, params=null)\r\n    {\r\n        if (params === null)\r\n        {\r\n            if (typeof(url) !== 'string')\r\n            {\r\n                params = url;\r\n                url = '';\r\n            }\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.apiCall(params, resolve, reject, null, method, url);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Executes a POST API call.\r\n     */\r\n    post: function (params, success=null, failure=null)\r\n    {\r\n        return this.apiCall(params, success, failure, 'POST');\r\n    },\r\n\r\n    /**\r\n     * Executes a GET API call.\r\n     */\r\n    get: function (params, success=null, failure=null)\r\n    {\r\n        return this.apiCall(params, success, failure, 'GET');\r\n    },\r\n\r\n    /**\r\n     * Executes an automatic API call, returns a promise.\r\n     */\r\n    fetch: function (method, url=null, params=null)\r\n    {\r\n        // fetch (method, relativePath, params)\r\n        // fetch (relativePath, params)\r\n        let shift = true;\r\n        if (typeof(method) === 'string') {\r\n            let tmp = method.toUpperCase();\r\n            if (tmp === 'GET' || tmp === 'POST' || tmp === 'PUT' || tmp === 'DELETE' || tmp === 'PATCH' || tmp === 'HEAD' || tmp === 'OPTIONS')\r\n                shift = false;\r\n        }\r\n\r\n        if (shift) {\r\n            params = url;\r\n            url = method;\r\n            method = null;\r\n        }\r\n\r\n        if (params === null) {\r\n            if (typeof(url) !== 'string') {\r\n                params = url;\r\n                url = '';\r\n            }\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.apiCall(params, resolve, reject, method, null, url);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds a URL from the given data.\r\n     */\r\n    makeUrl: function (url, params=null)\r\n    {\r\n        if (params === null)\r\n        {\r\n            if (typeof(url) !== 'string')\r\n            {\r\n                params = url;\r\n                url = '';\r\n            }\r\n        }\r\n\r\n        return this.appendParam(this.getUrl(url), this.encodeParams(params));\r\n    }\r\n};\r\n\r\nexport default Api;\r\n","\r\nimport { Model, ModelList, EventDispatcher } from 'rinn';\r\nimport Api from './api.js';\r\n\r\n/*\r\n**\tProvides several methods to quickly interface with a remote data-source as defined by Wind.\r\n*/\r\n\r\nexport default EventDispatcher.extend\r\n({\r\n    className: 'DataSource',\r\n    debounceDelay: 250,\r\n\r\n    request: null,\r\n\r\n    includeCount: false,\r\n    includeEnum: false,\r\n    includeList: true,\r\n\r\n    eid: null,\r\n    count: 0,\r\n    list: null,\r\n    enum: null,\r\n\r\n    /*\r\n    **\tConstructs the data source with the specified optional `config` parameters, any of the properties of this object can be specified\r\n    **\tin the config. Uses the given basePath as prefix for the `f` parameter for subsequent API operations, a basePath of `candies` will\r\n    **\tresult in calls to `candies.list`, `candies.count`, etc.\r\n    */\r\n    __ctor: function (basePath, config)\r\n    {\r\n        this._super.EventDispatcher.__ctor();\r\n\r\n        this.basePath = basePath;\r\n\r\n        if (config) Object.assign(this, config);\r\n\r\n        this.request = new Model(this.request);\r\n\r\n        this.eid = Math.random().toString().substr(2);\r\n        this.count = 0;\r\n\r\n        this.list = new ModelList();\r\n        this.list.dataSource = this;\r\n\r\n        this.enum = new ModelList();\r\n        this.enum.dataSource = this;\r\n\r\n        this.request.addEventListener (this.eid+':propertyChanged', this.forwardRequestEvent, this);\r\n\r\n        this.list.addEventListener (this.eid+':itemsCleared', this.forwardListEvent, this);\r\n        this.list.addEventListener (this.eid+':itemsChanged', this.forwardListEvent, this);\r\n        this.list.addEventListener (this.eid+':itemRemoved', this.forwardListEvent, this);\r\n        this.list.addEventListener (this.eid+':itemChanged', this.forwardListEvent, this);\r\n        this.list.addEventListener (this.eid+':itemAdded', this.forwardListEvent, this);\r\n\r\n        this.enum.addEventListener (this.eid+':itemsCleared', this.forwardEnumEvent, this);\r\n        this.enum.addEventListener (this.eid+':itemsChanged', this.forwardEnumEvent, this);\r\n        this.enum.addEventListener (this.eid+':itemRemoved', this.forwardEnumEvent, this);\r\n        this.enum.addEventListener (this.eid+':itemChanged', this.forwardEnumEvent, this);\r\n        this.enum.addEventListener (this.eid+':itemAdded', this.forwardEnumEvent, this);\r\n    },\r\n\r\n    forwardRequestEvent: function (evt, args) {\r\n        this.prepareEvent('request' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n    },\r\n\r\n    forwardListEvent: function (evt, args) {\r\n        this.prepareEvent('list' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n    },\r\n\r\n    forwardEnumEvent: function (evt, args) {\r\n        this.prepareEvent('enum' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n    },\r\n\r\n    /*\r\n    **\tExecutes one or more API functions (depending on `includeCount`, `includeEnum` and `includeList` properties) to retrieve the\r\n    **\trequired data (uses debounce to prevent too-quick refreshes).\r\n    **\r\n    **\tRefresh mode can be: order, filter, range, enum or full. Setting `mode` to `true` will cause a full refresh without debouncing.\r\n    */\r\n    refresh: function (mode='full', callback=null)\r\n    {\r\n        if (typeof(mode) == 'function') {\r\n            callback = mode;\r\n            mode = 'full';\r\n        }\r\n\r\n        if (this._timeout) {\r\n            clearTimeout(this._timeout);\r\n            this._timeout = null;\r\n        }\r\n\r\n        const fn = () =>\r\n        {\r\n            this._timeout = null;\r\n\r\n            Api.packageBegin();\r\n\r\n            if (this.includeCount && (mode === 'full' || mode === 'filter')) this.fetchCount();\r\n            if (this.includeEnum && (mode === 'full' || mode === 'enum')) this.fetchEnum();\r\n            if (this.includeList && mode !== 'enum') this.fetchList();\r\n\r\n            Api.packageEnd(callback);\r\n        };\r\n\r\n        if (mode === true) {\r\n            mode = 'full';\r\n            fn();\r\n        }\r\n        else\r\n            this._timeout = setTimeout(fn, this.debounceDelay);\r\n    },\r\n\r\n    /*\r\n    **\tSearches for the item in `list` that matches the specified `fields` and sends it to the callback. If no item is found (or if `forced` is true),\r\n    **\ta call to API function `.get` will be executed with the fields as request parameters. Returns a promise.\r\n    */\r\n    fetch: function (fields, forced=false)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            let item = forced == true ? null : this.list.find(fields, true);\r\n            if (!item)\r\n            {\r\n                this.fetchOne(fields, (r) =>\r\n                {\r\n                    if (r && r.response == 200)\r\n                    {\r\n                        if (r.data.length > 0)\r\n                            resolve(r.data[0]);\r\n                        else\r\n                            reject(r);\r\n                    }\r\n                    else\r\n                        reject(r);\r\n                });\r\n            }\r\n            else\r\n                resolve(item.get());\r\n        });\r\n    },\r\n\r\n    /*\r\n    **\tRemoves an item from the remote data source by executing the `.delete` API function, passes the given `fields` as request\r\n    **\tparameters. Returns a promise.\r\n    */\r\n    delete: function (params)\r\n    {\r\n        return new Promise((resolve, reject) =>\r\n        {\r\n            this.fetchDelete(params, (r) =>\r\n            {\r\n                if (r.response == 200)\r\n                    resolve(r);\r\n                else\r\n                    reject(r.error);\r\n            });\r\n        });\r\n    },\r\n\r\n    fetchList: function ()\r\n    {\r\n        let data = {...this.request.get()};\r\n        data.f = this.basePath + '.list';\r\n\r\n        this.dispatchEvent('listLoading');\r\n        Api.fetch(data).then(r => {\r\n            this.list.setData(r.response == 200 ? r.data : null);\r\n            this.dispatchEvent('listLoaded');\r\n            this.dispatchEvent('listChanged');\r\n        });\r\n    },\r\n\r\n    fetchEnum: function ()\r\n    {\r\n        let data = {...this.request.get()};\r\n        data.f = this.basePath + '.enum';\r\n\r\n        this.dispatchEvent('enumLoading');\r\n        Api.fetch(data).then(r => {\r\n            this.enum.setData(r.response == 200 ? r.data : null);\r\n            this.dispatchEvent('enumLoaded');\r\n            this.dispatchEvent('enumChanged');\r\n        });\r\n    },\r\n\r\n    fetchCount: function ()\r\n    {\r\n        let data = {...this.request.get()};\r\n        data.f = this.basePath + '.count';\r\n\r\n        this.dispatchEvent('countLoading');\r\n        Api.fetch(data).then(r => {\r\n            this.count = r.response == 200 ? r.count : 0;\r\n            this.dispatchEvent('countLoaded');\r\n            this.dispatchEvent('countChanged');\r\n        });\r\n    },\r\n\r\n    fetchOne: function (params, callback)\r\n    {\r\n        let data = {...this.request.get(), ...params};\r\n        data.f = this.basePath + '.get';\r\n\r\n        Api.fetch(data).then(r => {\r\n            callback(r);\r\n        });\r\n    },\r\n\r\n    fetchDelete: function (params, callback)\r\n    {\r\n        let data = {...this.request.get(), ...params};\r\n        data.f = this.basePath + '.delete';\r\n\r\n        Api.fetch(data).then(r => {\r\n            callback(r);\r\n        });\r\n    },\r\n\r\n    fetchData: function (params)\r\n    {\r\n        let data = {...this.request.get(), ...params};\r\n        if (data.f[0] == '.')\r\n            data.f = this.basePath + data.f;\r\n\r\n        return Api.fetch(data);\r\n    },\r\n\r\n    makeUrl: function (params)\r\n    {\r\n        let data = {...this.request.get(), ...params};\r\n        if (data.f[0] == '.')\r\n            data.f = this.basePath + data.f;\r\n\r\n        return Api.makeUrl(data);\r\n    }\r\n});\r\n","\r\nimport { Model, ModelList } from 'rinn';\r\nimport Api from './api.js';\r\n\r\n/*\r\n**\tProvides an interface to connect with a listing API function.\r\n*/\r\n\r\nexport default ModelList.extend\r\n({\r\n\tclassName: 'DataList',\r\n\tdebounceDelay: 250,\r\n\r\n\trequest: null,\r\n\r\n\teid: null,\r\n\r\n\t/*\r\n\t**\tConstructs the data list with the specified optional `config` parameters, any of the properties of this object can be specified\r\n\t**\tin the config. The given `f` parameter is passed directly as a request parameter to the API.\r\n\t*/\r\n\t__ctor: function (f, config=null)\r\n\t{\r\n\t\tthis._super.ModelList.__ctor();\r\n\r\n\t\tif (config !==  null)\r\n\t\t\tObject.assign(this, config);\r\n\r\n\t\tif (!this.request)\r\n\t\t\tthis.request = { };\r\n\r\n\t\tthis.request.f = f;\r\n\t\tthis.request = new Model(this.request);\r\n\r\n\t\tthis.eid = Math.random().toString().substr(2);\r\n\t\tthis.dataList = this;\r\n\r\n\t\tthis.request.addEventListener (this.eid+':propertyChanged', this.forwardRequestEvent, this);\r\n\t},\r\n\r\n\tforwardRequestEvent: function (evt, args)\r\n\t{\r\n\t\tthis.prepareEvent('request' + evt.name[0].toUpperCase() + evt.name.substr(1), args).setSource(evt.source).resume();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a request to retrieve the data for the list (uses debounce to prevent too-quick refreshes).\r\n\t*/\r\n\trefresh: function (callback=null, _callback=null)\r\n\t{\r\n\t\tif (this._timeout)\r\n\t\t{\r\n\t\t\tclearTimeout(this._timeout);\r\n\t\t\tthis._timeout = null;\r\n\t\t}\r\n\r\n\t\tif (callback === true)\r\n\t\t{\r\n\t\t\tthis.dispatchEvent('listLoading');\r\n\r\n\t\t\tApi.fetch(this.request.get()).then(r =>\r\n\t\t\t{\r\n\t\t\t\tthis.setData(r.response == 200 ? r.data : null);\r\n\t\t\t\tthis.dispatchEvent('listLoaded');\r\n\t\t\t\tthis.dispatchEvent('listChanged');\r\n\r\n\t\t\t\tif (_callback !== null)\r\n\t\t\t\t\t_callback();\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst fn = () => {\r\n\t\t\tthis.refresh(true, callback);\r\n\t\t};\r\n\r\n\t\tthis._timeout = setTimeout(fn, this.debounceDelay);\r\n\t}\r\n});\r\n","\n/**\n**\tCollection of useful easing functions (imported from Cherry source code).\n*/\n\nconst Easing =\n{\n\t/**\n\t**\tInterpolates numeric values between two objects (`src` and `dst`) using the specified `duration` (in seconds) and `easing` function. Note\n\t**\tthat all four parameters `src`, `dst`, `duration` and `easing` must be objects having the same number of values.\n\t*/\n\tinterpolate: function (src, dst, duration, easing, callback/* function(data, isFinished) */)\n\t{\n\t\tlet time = { };\n\t\tlet data = { };\n\t\tlet count = 0;\n\n\t\tfor (let x in src)\n\t\t{\n\t\t\ttime[x] = 0.0;\n\t\t\tdata[x] = src[x]\n\t\t\tcount++;\n\t\t}\n\n\t\tlet lastTime = Date.now()/1000;\n\t\tlet dt = 0;\n\n\t\tlet interpolator = function()\n\t\t{\n\t\t\tlet curTime = Date.now()/1000;\n\t\t\tdt = curTime - lastTime;\n\t\t\tlastTime = curTime;\n\n\t\t\tfor (let x in time)\n\t\t\t{\n\t\t\t\tif (time[x] == duration[x])\n\t\t\t\t\tcontinue;\n\n\t\t\t\ttime[x] += dt;\n\t\t\t\tif (time[x] >= duration[x])\n\t\t\t\t{\n\t\t\t\t\ttime[x] = duration[x];\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\n\t\t\t\tlet t = easing[x] (time[x] / duration[x]);\n\t\t\t\tdata[x] = (1-t)*src[x] + t*dst[x];\n\t\t\t}\n\n\t\t\tcallback (data, count == 0);\n\n\t\t\tif (count != 0)\n\t\t\t\trequestAnimationFrame(interpolator);\n\t\t};\n\n\t\tinterpolator();\n\t},\n\n\t/* ******************************************** */\n\tLinear:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn t;\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\treturn t;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tBack:\n\t{\n\t\tk: 1.70158,\n\n\t\tIN: function (t, k)\n\t\t{\n\t\t\tif (k === undefined) k = Easing.Back.k;\n\t\t\treturn t*t*((k+1)*t - k);\n\t\t},\n\n\t\tOUT: function (t, k)\n\t\t{\n\t\t\treturn 1 - Easing.Back.IN(1 - t, k);\n\t\t},\n\n\t\tIN_OUT: function (t, k)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Back.IN(t*2, k)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Back.OUT((t-0.5)*2, k)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tBounce:\n\t{\n\t\tgetConst: function (t)\n\t\t{\n\t\t\tif (t < 1.0/2.75)\n\t\t\t\treturn 7.5625 * t * t;\n\t\t\telse if (t < 2.0/2.75)\n\t\t\t\treturn 7.5625 * (t -= 1.5/2.75)*t + 0.75;\n\t\t\telse if (t < 2.5/2.75)\n\t\t\t\treturn 7.5625 * (t -= 2.250/2.75) * t + 0.9375;\n\n\t\t\treturn 7.5625 * (t -= 2.625/2.75) * t + 0.984375;\n\t\t},\n\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Bounce.getConst(1-t);\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn Easing.Bounce.getConst(t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn (1 - Easing.Bounce.getConst(1-2*t))/2;\n\t\t\telse\n\t\t\t\treturn (Easing.Bounce.getConst((t-0.5)*2)/2)+0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tCirc:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn 1 - Math.sqrt(1 - t*t);\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Circ.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\t\treturn Easing.Circ.IN(t*2)/2;\n\t\t\t\telse\n\t\t\t\t\treturn Easing.Circ.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tCubic:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Cubic.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Cubic.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Cubic.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tExpo:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn Math.pow(2, 12*(t-1));\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn -Math.pow(2, -12*t) + 1;\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif ((t *= 2) < 1)\n\t\t\t\treturn Math.pow (2, 12 * (t - 1)) / 2;\n\t\t\telse\n\t\t\t\treturn (-Math.pow (2, -12 * (t - 1)) + 2) / 2;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tPower:\n\t{\n\t\tp: 12,\n\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn Math.pow(t, Easing.Power.p);\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Power.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Power.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Power.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tQuad:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Quad.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Quad.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Quad.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tQuartic:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t*t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Quartic.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\treturn Easing.Quartic.IN(t*2)/2;\n\t\t\telse\n\t\t\t\treturn Easing.Quartic.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tQuintic:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t*t*t*t*t;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn 1 - Easing.Quintic.IN(1 - t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\tif (t < 0.5)\n\t\t\t\t\treturn Easing.Quintic.IN(t*2)/2;\n\t\t\t\telse\n\t\t\t\t\treturn Easing.Quintic.OUT((t-0.5)*2)/2 + 0.5;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tSine:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn 1 - Math.sin (1.5708 * (1 - t));\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn Math.sin (1.5708 * t);\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\treturn (Math.cos (3.1416*t) - 1) / -2;\n\t\t}\n\t},\n\n\t/* ******************************************** */\n\tStep:\n\t{\n\t\tIN: function (t)\n\t\t{\n\t\t\treturn t != 1.0 ? 0 : 1.0;\n\t\t},\n\n\t\tOUT: function (t)\n\t\t{\n\t\t\treturn t != 1.0 ? 0 : 1.0;\n\t\t},\n\n\t\tIN_OUT: function (t)\n\t\t{\n\t\t\treturn t != 1.0 ? 0 : 1.0;\n\t\t}\n\t}\n};\n\nexport default Easing;\n","\nimport { Rinn, Class } from 'rinn';\n\n/**\n**\tClass to animate properties using rules (imported from Cherry source code).\n*/\n\nconst Anim = Class.extend\n({\n\tlist: null,\n\n\tinitialData: null,\n\tdata: null,\n\n\tstack: null,\n\tblock: null,\n\n\ttimeScale: 1, time: 0, blockTime: 0,\n\tindex: 0,\n\n\tpaused: false,\n\tfinished: false,\n\n\tonFinishedCallback: null,\n\tonUpdatedCallback: null,\n\n\t__ctor: function ()\n\t{\n\t\tthis.list = [ ];\n\n\t\tthis.initialData = { };\n\t\tthis.data = { };\n\n\t\tthis.stack = [ ];\n\t\tthis.block = this.list;\n\n\t\tthis.reset();\n\t},\n\n\t__dtor: function ()\n\t{\n\t},\n\n\tclone: function ()\n\t{\n\t\tlet a = new Anim();\n\n\t\ta.list = this.list;\n\t\ta.initialData = this.initialData;\n\n\t\treturn a.reset();\n\t},\n\n\tonFinished: function (callback)\n\t{\n\t\tthis.onFinishedCallback = callback;\n\t\treturn this;\n\t},\n\n\tonUpdated: function (callback)\n\t{\n\t\tthis.onUpdatedCallback = callback;\n\t\treturn this;\n\t},\n\n\t// Resets the animation to its initial state.\n\treset: function ()\n\t{\n\t\tthis.stack.length = 0;\n\t\tthis.blockTime = 0;\n\n\t\tthis.time = 0;\n\t\tthis.index = 0;\n\n\t\tthis.block = this.list;\n\n\t\tthis.paused = true;\n\t\tthis.finished = false;\n\t\tthis.handle = null;\n\n\t\tfor (let i in this.initialData)\n\t\t\tthis.data[i] = this.initialData[i];\n\n\t\treturn this;\n\t},\n\n\t// Sets the initial data.\n\tinitial: function (data)\n\t{\n\t\tthis.initialData = data;\n\t\treturn this.reset();\n\t},\n\n\t// Sets the time scale (animation speed).\n\tspeed: function (value)\n\t{\n\t\tthis.timeScale = value > 0.0 ? value : 1.0;\n\t\treturn this;\n\t},\n\n\t// Sets the output data object.\n\tsetOutput: function (data)\n\t{\n\t\tthis.data = data;\n\t\treturn this;\n\t},\n\n\t// Pauses the animation.\n\tpause: function ()\n\t{\n\t\tif (this.paused) return;\n\n\t\tclearInterval(this.handle);\n\t\tthis.paused = true;\n\t},\n\n\t// Resumes the animation.\n\tresume: function ()\n\t{\n\t\tif (!this.paused) return;\n\n\t\tlet lastTime = Date.now()/1000;\n\n\t\tthis.handle = setInterval(() =>\n\t\t{\n\t\t\tlet curTime = Date.now()/1000;\n\t\t\tlet dt = curTime - lastTime;\n\t\t\tlastTime = curTime;\n\n\t\t\tthis.update(dt);\n\n\t\t\tif (this.onUpdatedCallback)\n\t\t\t\tthis.onUpdatedCallback (this.data, this);\n\t\t},\n\t\t16);\n\n\t\tif (this.onUpdatedCallback)\n\t\t\tthis.onUpdatedCallback (this.data, this);\n\n\t\tthis.paused = false;\n\t},\n\n\t// Updates the animation by the specified delta time (seconds).\n\tupdate: function (dt)\n\t{\n\t\tif (this.paused) return false;\n\n\t\tif (this.index >= this.block.length)\n\t\t\treturn true;\n\n\t\tlet i = 0;\n\n\t\tlet _block;\n\t\tlet _index;\n\t\tlet _blockTime;\n\n\t\tthis.time += dt*this.timeScale;\n\n\t\twhile (this.index < this.block.length)\n\t\t{\n\t\t\tlet cmd = this.block[this.index];\n\t\t\tlet duration;\n\n\t\t\tswitch (cmd.op)\n\t\t\t{\n\t\t\t\tcase \"parallel\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd.blocks.length = 0;\n\t\t\t\t\t\tcmd.started = true;\n\n\t\t\t\t\t\tfor (i = 0; i < cmd.block.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcmd.blocks.push([cmd.block[i]]);\n\t\t\t\t\t\t\tcmd.indices[i] = 0;\n\t\t\t\t\t\t\tcmd.blockTimes[i] = this.blockTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t_block = this.block;\n\t\t\t\t\t_index = this.index;\n\t\t\t\t\t_blockTime = this.blockTime;\n\n\t\t\t\t\tlet n = 0;\n\t\t\t\t\tlet blockTime = _blockTime;\n\n\t\t\t\t\tfor (i = 0; i < cmd.blocks.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.block = cmd.blocks[i];\n\t\t\t\t\t\tthis.index = cmd.indices[i];\n\t\t\t\t\t\tthis.blockTime = cmd.blockTimes[i];\n\n\t\t\t\t\t\tif (this.update(0) === true)\n\t\t\t\t\t\t\tn++;\n\n\t\t\t\t\t\tif (this.blockTime > blockTime)\n\t\t\t\t\t\t\tblockTime = this.blockTime;\n\n\t\t\t\t\t\tcmd.blockTimes[i] = this.blockTime;\n\t\t\t\t\t\tcmd.blocks[i] = this.block;\n\t\t\t\t\t\tcmd.indices[i] = this.index;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.block = _block;\n\t\t\t\t\tthis.index = _index;\n\t\t\t\t\tthis.blockTime = _blockTime;\n\n\t\t\t\t\tif (cmd.fn) cmd.fn.call(this);\n\n\t\t\t\t\tif (n != cmd.blocks.length)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime = blockTime;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"serial\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd._block = cmd.block;\n\t\t\t\t\t\tcmd._index = 0;\n\t\t\t\t\t\tcmd._blockTime = this.blockTime;\n\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t_block = this.block;\n\t\t\t\t\t_index = this.index;\n\t\t\t\t\t_blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = cmd._block;\n\t\t\t\t\tthis.index = cmd._index;\n\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\n\t\t\t\t\ti = this.update(0);\n\n\t\t\t\t\tcmd._block = this.block;\n\t\t\t\t\tcmd._index = this.index;\n\t\t\t\t\tcmd._blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = _block;\n\t\t\t\t\tthis.index = _index;\n\t\t\t\t\tthis.blockTime = _blockTime;\n\n\t\t\t\t\tif (cmd.fn) cmd.fn.call(this);\n\n\t\t\t\t\tif (i !== true) return false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"repeat\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd._block = cmd.block;\n\t\t\t\t\t\tcmd._index = 0;\n\t\t\t\t\t\tcmd._blockTime = this.blockTime;\n\t\t\t\t\t\tcmd._count = cmd.count;\n\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t_block = this.block;\n\t\t\t\t\t_index = this.index;\n\t\t\t\t\t_blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = cmd._block;\n\t\t\t\t\tthis.index = cmd._index;\n\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\n\t\t\t\t\ti = this.update(0);\n\n\t\t\t\t\tcmd._block = this.block;\n\t\t\t\t\tcmd._index = this.index;\n\t\t\t\t\tcmd._blockTime = this.blockTime;\n\n\t\t\t\t\tthis.block = _block;\n\t\t\t\t\tthis.index = _index;\n\t\t\t\t\tthis.blockTime = _blockTime;\n\n\t\t\t\t\tif (cmd.fn) cmd.fn.call(this);\n\n\t\t\t\t\tif (i !== true) return false;\n\n\t\t\t\t\tif (cmd._count <= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\t\tthis.blockTime = cmd._blockTime;\n\t\t\t\t\t\tthis.index++;\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd._index = 0;\n\t\t\t\t\t\tcmd._count--;\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"set\":\n\t\t\t\t\tthis.data[cmd.field] = cmd.value;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"restart\":\n\t\t\t\t\tthis.index = 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wait\":\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"range\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (cmd.startValue === null)\n\t\t\t\t\t\t\tcmd._startValue = this.data[cmd.field];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcmd._startValue = cmd.startValue;\n\n\t\t\t\t\t\tcmd._endValue = cmd.endValue;\n\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\tdt = (this.time - this.blockTime) / duration;\n\t\t\t\t\telse\n\t\t\t\t\t\tdt = 1;\n\n\t\t\t\t\tif (cmd.easing && dt != 1.0)\n\t\t\t\t\t\tthis.data[cmd.field] = cmd.easing(dt)*(cmd._endValue - cmd._startValue) + cmd._startValue;\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.data[cmd.field] = dt*(cmd._endValue - cmd._startValue) + cmd._startValue;\n\n\t\t\t\t\tif (dt != 1) return false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rand\":\n\t\t\t\t\tif (cmd.started == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tcmd.started = true;\n\t\t\t\t\t\tcmd.last = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\tdt = (this.time - this.blockTime) / duration;\n\t\t\t\t\telse\n\t\t\t\t\t\tdt = 1;\n\n\t\t\t\t\tif (cmd.easing && dt != 1)\n\t\t\t\t\t\tcmd.cur = ~~(cmd.easing(dt)*cmd.count);\n\t\t\t\t\telse\n\t\t\t\t\t\tcmd.cur = ~~(dt*cmd.count);\n\n\t\t\t\t\tif (cmd.cur != cmd.last)\n\t\t\t\t\t{\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\ti = ~~(Math.random()*(cmd.endValue - cmd.startValue + 1)) + cmd.startValue;\n\t\t\t\t\t\t\tif (i != this.data[cmd.field]) break;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.data[cmd.field] = i;\n\t\t\t\t\t\tcmd.last = cmd.cur;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dt != 1) return false;\n\n\t\t\t\t\tcmd.started = false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"randt\":\n\t\t\t\t\tduration = Rinn.typeOf(cmd.duration) == \"string\" ? this.data[cmd.duration] : cmd.duration;\n\n\t\t\t\t\tif (this.time < this.blockTime + duration)\n\t\t\t\t\t\tdt = (this.time - this.blockTime) / duration;\n\t\t\t\t\telse\n\t\t\t\t\t\tdt = 1;\n\n\t\t\t\t\tif (cmd.easing && dt != 1)\n\t\t\t\t\t\ti = cmd.easing(dt)*(cmd.count-1);\n\t\t\t\t\telse\n\t\t\t\t\t\ti = dt*(cmd.count-1);\n\n\t\t\t\t\tthis.data[cmd.field] = cmd.table[~~((i + cmd.count) % cmd.count)];\n\n\t\t\t\t\tif (dt != 1) return false;\n\n\t\t\t\t\tthis.blockTime += duration;\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"play\":\n\t\t\t\t\tcmd.snd.play();\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"exec\":\n\t\t\t\t\tcmd.fn.call(this, this);\n\t\t\t\t\tthis.index++;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this.block == this.list)\n\t\t{\n\t\t\tif (!this.finished && this.onFinishedCallback != null)\n\t\t\t\tthis.onFinishedCallback();\n\n\t\t\tthis.pause();\n\t\t\tthis.finished = true;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// Runs the subsequent commands in parallel. Should end the parallel block by calling end().\n\tparallel: function ()\n\t{\n\t\tlet block = [ ];\n\n\t\tthis.block.push({ op: \"parallel\", started: false, block: block, blocks: [ ], indices: [ ], blockTimes: [ ] });\n\n\t\tthis.stack.push (this.block);\n\t\tthis.block = block;\n\n\t\treturn this;\n\t},\n\n\t// Runs the subsequent commands in series. Should end the serial block by calling end().\n\tserial: function ()\n\t{\n\t\tlet block = [ ];\n\n\t\tthis.block.push({ op: \"serial\", started: false, block: block });\n\n\t\tthis.stack.push (this.block);\n\t\tthis.block = block;\n\n\t\treturn this;\n\t},\n\n\t// Repeats a block the specified number of times.\n\trepeat: function (count)\n\t{\n\t\tlet block = [ ];\n\n\t\tthis.block.push({ op: \"repeat\", started: false, block: block, count: count });\n\n\t\tthis.stack.push (this.block);\n\t\tthis.block = block;\n\n\t\treturn this;\n\t},\n\n\t// Sets the callback of the current block.\n\tcallback: function (fn)\n\t{\n\t\tlet block = this.stack[this.stack.length-1];\n\t\tblock[block.length-1].fn = fn;\n\n\t\treturn this;\n\t},\n\n\t// Ends a parallel(), serial() or repeat() block.\n\tend: function ()\n\t{\n\t\tthis.block = this.stack.pop();\n\t\treturn this;\n\t},\n\n\t// Sets the value of a variable.\n\tset: function (field, value)\n\t{\n\t\tthis.block.push({ op: \"set\", field: field, value: value });\n\t\treturn this;\n\t},\n\n\t// Restarts the current block.\n\trestart: function (duration)\n\t{\n\t\tthis.block.push({ op: \"restart\" });\n\t\treturn this;\n\t},\n\n\t// Waits for the specified duration.\n\twait: function (duration)\n\t{\n\t\tthis.block.push({ op: \"wait\", duration: duration });\n\t\treturn this;\n\t},\n\n\t// Sets the range of a variable.\n\trange: function (field, duration, startValue, endValue, easing)\n\t{\n\t\tthis.block.push({ op: \"range\", started: false, field: field, duration: duration, startValue: startValue, endValue: endValue, easing: easing ? easing : null });\n\t\treturn this;\n\t},\n\n\t// Generates a certain amount of random numbers in the given range (inclusive).\n\trand: function (field, duration, count, startValue, endValue, easing)\n\t{\n\t\tthis.block.push({ op: \"rand\", started: false, field: field, duration: duration, count: count, startValue: startValue, endValue: endValue, easing: easing ? easing : null });\n\t\treturn this;\n\t},\n\n\t// Generates a certain amount of random numbers in the given range (inclusive). This uses a static random table to determine the next values.\n\trandt: function (field, duration, count, startValue, endValue, easing)\n\t{\n\t\tlet table = [ ];\n\n\t\tfor (let i = 0; i < count; i++)\n\t\t\ttable.push ((i % (endValue - startValue + 1)) + startValue);\n\n\t\tfor (let i = count >> 2; i > 0; i--)\n\t\t{\n\t\t\tlet a = ~~(Math.random() * count);\n\t\t\tlet b = ~~(Math.random() * count);\n\n\t\t\tlet c = table[b];\n\t\t\ttable[b] = table[a];\n\t\t\ttable[a] = c;\n\t\t}\n\n\t\tthis.block.push({ op: \"randt\", field: field, duration: duration, count: count, startValue: startValue, endValue: endValue, table: table, easing: easing ? easing : null });\n\t\treturn this;\n\t},\n\n\t// Plays a sound.\n\tplay: function (snd)\n\t{\n\t\tthis.block.push({ op: \"play\", snd: snd });\n\t\treturn this;\n\t},\n\n\t// Executes a function.\n\texec: function (fn)\n\t{\n\t\tthis.block.push({ op: \"exec\", fn: fn });\n\t\treturn this;\n\t}\n});\n\nexport default Anim;\n","\nimport _Tabs from './elems/r-tabs.js';\nimport _Form from './elems/r-form.js';\nimport _Panel from './elems/r-panel.js';\nimport _List from './elems/r-list.js';\nimport _Item from './elems/r-item.js';\nimport _Paginator from './elems/r-paginator.js';\nimport _Table from './elems/r-table.js';\nimport _Select from './elems/r-select.js';\nimport _ImageCropper from './elems/r-image-cropper.js';\n\nexport default {\n\tTabs: _Tabs,\n\tForm: _Form,\n\tPanel: _Panel,\n\tList: _List,\n\tItem: _Item,\n\tPaginator: _Paginator,\n\tTable: _Table,\n\tSelect: _Select,\n\tImageCropper: _ImageCropper\n};\n","/*\n    <r-tabs data-container=\"div.tab-container\" data-base-route=\"@\" data-initial=\"tab1\">\n        <a data-name=\"tab1\">Tab-1</a>\n        <a data-name=\"tab2\">Tab-2</a>\n        <a data-name=\"tab3\">Tab-3</a>\n    </r-tabs>\n\n    <div class=\"tab-container\">\n        <div data-name=\"tab1\">\n            This is tab-1.\n        </div>\n\n        <div data-name=\"tab2\">\n            This is tab-2.\n        </div>\n\n        <div data-name=\"tab3\">\n            This is tab-3.\n        </div>\n    </div>\n\n    .is-hidden {\n        display: none;\n    }\n\n    r-tabs [data-name].is-active {\n        font-weight: bold;\n    }\n*/\n\nimport Element from '../element.js';\nimport Router from '../router.js';\n\nexport default Element.register ('r-tabs',\n{\n    /**\n     * Container element for tab content.\n     */\n    container: null,\n\n    /**\n     * Active tab name.\n     */\n    activeTab: null,\n\n    /**\n    **\tElement events.\n    */\n    'event click [data-name]': function (evt)\n    {\n        evt.continuePropagation = true;\n\n        if (this.dataset.baseRoute) {\n            location = \"#\" + Router.realLocation(this.dataset.baseRoute.replace('@', evt.source.dataset.name));\n            return;\n        }\n\n        this.selectTab (evt.source.dataset.name);\n    },\n\n    /**\n    **\tInitializes the Tabs element.\n    */\n    init: function()\n    {\n        this._routeHandler = (evt, args) =>\n        {\n            if (Router.location != '')\n            {\n                this.querySelectorAll(\"[href]\").forEach(link =>\n                {\n                    if (!link.href) return;\n\n                    if (Router.location.startsWith(link.href.substr(link.href.indexOf('#')+1))) {\n                        link.classList.add('is-active');\n                        link.classList.remove('is-inactive');\n                    } else {\n                        link.classList.add('is-inactive');\n                        link.classList.remove('is-active');\n                    }\n\n                    link.classList.remove('anim-ended');\n                    link.onanimationend = () => {\n                        link.onanimationend = null;\n                        link.classList.add('anim-ended');\n                    };\n                });\n            }\n\n            if (!args.route.changed)\n                return;\n\n            this.showTab (args.tabName);\n        };\n    },\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    ready: function()\n    {\n        if (\"container\" in this.dataset)\n        {\n            if (this.dataset.container == ':previousElement')\n                this.container = this.previousElementSibling;\n            else if (this.dataset.container == ':nextElement')\n                this.container = this.nextElementSibling;\n            else if (this.dataset.container == ':none')\n                this.container = null;\n            else\n                this.container = document.querySelector(this.dataset.container);\n        }\n        else\n            this.container = this.nextElementSibling;\n\n        this._hideTabsExcept(this.dataset.initial);\n    },\n\n    /**\n    **\tAdds a handler to Router if the data-base-route attribute was set.\n    */\n    onConnected: function()\n    {\n        if (this.dataset.baseRoute)\n            Router.addRoute (this.dataset.baseRoute.replace('@', ':tabName'), this._routeHandler);\n    },\n\n    /**\n    **\tRemoves a handler previously added to Router if the data-base-route attribute was set.\n    */\n    onDisconnected: function()\n    {\n        if (this.dataset.baseRoute)\n            Router.removeRoute(this.dataset.baseRoute.replace('@', ':tabName'), this._routeHandler);\n    },\n\n    /**\n    **\tHides all tabs except the one with the specified exceptName, if none specified then all tabs will be hidden (adds `.is-hidden` CSS class),\n    **\tadditionally the respective link item in the tab definition will have class `.is-active`.\n    */\n    _hideTabsExcept: function (exceptName)\n    {\n        if (!exceptName) exceptName = '';\n\n        if (this.container != null)\n        {\n            this.container.querySelectorAll(':scope > [data-name]').forEach(i =>\n            {\n                if (i.dataset.name === exceptName) {\n                    i.classList.remove('is-hidden');\n                    this.dispatch('tabShown', { name: i.dataset.name, el: i });\n                }\n                else {\n                    i.classList.add('is-hidden');\n                    this.dispatch('tabHidden', { name: i.dataset.name, el: i });\n                }\n            });\n        }\n\n        this.querySelectorAll(\"[data-name]\").forEach(link =>\n        {\n            if (link.dataset.name === exceptName) {\n                link.classList.add('is-active');\n                link.classList.remove('is-inactive');\n            } else {\n                link.classList.add('is-inactive');\n                link.classList.remove('is-active');\n            }\n\n            link.classList.remove('anim-ended');\n            link.onanimationend = () => {\n                link.onanimationend = null;\n                link.classList.add('anim-ended');\n            };\n        });\n\n        this.activeTab = exceptName;\n        this.dispatch('tabChanged', { name: exceptName, el: this });\n    },\n\n    /**\n    **\tShows the tab with the specified name, ignores `data-base-route` and current route as well.\n    */\n    showTab: function (name)\n    {\n        return this._hideTabsExcept (name);\n    },\n\n    /**\n    **\tShows a tab given its name. The route will be changed automatically if `data-base-route` is enabled.\n    */\n    selectTab: function (name)\n    {\n        if (this.dataset.baseRoute)\n        {\n            const hash = \"#\" + Router.realLocation(this.dataset.baseRoute.replace('@', name));\n\n            if (location.hash != hash) {\n                location = hash;\n                return;\n            }\n        }\n\n        this.showTab (name);\n    }\n});\n","/*\n<r-form data-form-action=\"api-function-name\" [data-strict=\"true|false\"] [data-errors-at=\"\"] [data-method=\"post\"]>\n    <input type=\"text\" data-field=\"username\"/>\n</r-form>\n\nr-form .message.is-hidden {\n    display: none;\n}\n\nr-form span.field-error {\n    display: block;\n    color: red;\n}\n*/\n\nimport { Template } from 'rinn';\nimport Element from '../element.js';\nimport Api from '../api.js';\n\nexport default Element.register ('r-form',\n{\n    isRoot: true,\n\n    /**\n     * Initial form model.\n     */\n    model: { },\n\n    /**\n     * Element events.\n     */\n    events:\n    {\n        'change [data-field]': '_fieldChanged',\n\n        'click input[type=reset]': 'reset',\n        'click .reset': 'reset',\n\n        'click input[type=submit]': 'submit',\n        'click button[type=submit]': 'submit',\n        'click .submit': 'submit',\n        'submit form': 'submit'\n    },\n\n    /**\n     * Executed when the children of the element are ready.\n     */\n    ready: function()\n    {\n        let formElement = document.createElement('form');\n        formElement.append(...this.childNodes);\n        this.append(formElement);\n\n        let def = { };\n        let names = this.model.get();\n\n        this.querySelectorAll('[data-field]').forEach((i) =>\n        {\n            i.name = i.dataset.field;\n            names[i.name] = i.type;\n\n            let val = i.dataset.default;\n            if (val == undefined)\n            {\n                switch (i.type)\n                {\n                    case 'radio':\n                        if (!i.checked) return;\n                        val = i.value;\n                        break;\n\n                    case 'checkbox':\n                        val = i.checked ? '1' : '0';\n                        break;\n\n                    case 'field':\n                        val = i.getValue();\n                        break;\n\n                    case 'file':\n                        val = '';\n                        break;\n\n                    default:\n                        val = '';\n                        break;\n                }\n            }\n\n            def[i.dataset.field] = val;\n        });\n\n        for (let name in names)\n        {\n            if (name in def)\n                names[name] = def[name];\n            else\n                names[name] = '';\n        }\n\n        def = names;\n\n        this.model.defaults = def;\n        this.model.reset();\n\n        this.clearMarkers();\n    },\n\n    /**\n     * Transforms an string returned by the server to a local representation.\n     */\n    filterString: function (str, r)\n    {\n        if (!str || !('messages' in global))\n            return str;\n\n        if (str.startsWith('@messages.'))\n        {\n            if (str.substr(10) in global.messages)\n                str = Template.eval(global.messages[str.substr(10)], r);\n        }\n\n        return str;\n    },\n\n    _change: function(elem)\n    {\n        if ('createEvent' in document)\n        {\n            let evt = document.createEvent('HTMLEvents');\n            evt.initEvent('change', false, true);\n            elem.dispatchEvent(evt);\n        }\n        else\n            elem.fireEvent('onchange');\n    },\n\n    _setField: function (f, value, silent)\n    {\n        if (!f) return;\n\n        for (f of this.querySelectorAll('[data-field=\"'+f+'\"]'))\n        {\n            switch (f.type || f.tagName.toLowerCase())\n            {\n                case 'select':\n                    f.val = f.dataset.value = f.multiple ? (value ? value.split(',') : value) : value;\n                    f.value = f.val = f.dataset.value;\n\n                    if (silent !== true) this._change(f);\n                    break;\n\n                case 'checkbox':\n                    f.checked = parseInt(value) ? true : false;\n                    break;\n\n                case 'radio':\n                    f.checked = value == f.value;\n                    break;\n\n                case 'field':\n                    f.val = f.dataset.value = value;\n                    f.setValue(value);\n                    break;\n\n                case 'file':\n                    if ((value instanceof File) || (value instanceof Blob))\n                    {\n                        f.val = value;\n                        f.dataset.value = value;\n                    }\n                    else if (value instanceof FileList)\n                    {\n                        f.val = value;\n                        f.dataset.value = value;\n                    }\n                    else\n                    {\n                        f.val = f.dataset.value = '';\n                        f.value = '';\n                    }\n\n                    break;\n\n                default:\n                    f.val = f.dataset.value = value;\n                    f.value = value;\n\n                    if (silent !== true) this._change(f);\n                    break;\n            }\n        }\n    },\n\n    _getField: function (f, _value=null, fromFileFields=false)\n    {\n        if (!f) return null;\n\n        if (typeof(f) != 'string')\n        {\n            let value = f.value == null ? f.val : f.value;\n            if (value === null) value = _value;\n\n            switch (f.type || f.tagName.toLowerCase())\n            {\n                case 'select':\n                    _value = f.multiple ? (value ? value.join(',') : value) : value;\n                    break;\n\n                case 'checkbox':\n                    _value = f.checked ? '1' : '0';\n                    break;\n\n                case 'radio':\n                    if (f.checked) _value = f.value;\n                    break;\n\n                case 'field':\n                    _value = f.getValue();\n                    break;\n\n                case 'file':\n                    _value = fromFileFields ? (f.files && f.files.length ? (f.multiple ? f.files : f.files[0]) : null) : f.val;\n                    break;\n\n                default:\n                    _value = value;\n                    break;\n            }\n\n            return _value === null ? '' : _value;\n        }\n\n        _value = null;\n\n        for (f of this.querySelectorAll('[data-field=\"'+f+'\"]'))\n            _value = this._getField(f, _value);\n\n        return _value === null ? '' : _value;\n    },\n\n    getField: function (name)\n    {\n        return this._getField(name);\n    },\n\n    clearMarkers: function ()\n    {\n        this.classList.remove('busy');\n\n        this.querySelectorAll('.message').forEach(i => i.classList.add('is-hidden') );\n        this.querySelectorAll('span.field-error').forEach(i => i.remove());\n\n        this.querySelectorAll('.field-error').forEach(i => { i.classList.remove('field-error'); i.classList.remove('is-invalid'); });\n        this.querySelectorAll('.field-passed').forEach(i => i.classList.remove('field-passed'));\n    },\n\n    _fieldChanged: function (evt)\n    {\n        let f = evt.source;\n\n        if (f.type == 'file')\n            this.model.set (f.dataset.field, this._getField(f, null, true), true);\n        else\n            this.model.set (f.dataset.field, this._getField(f));\n\n        evt.continuePropagation = true;\n    },\n\n    onModelPropertyChanged: function (evt, args)\n    {\n        this._setField (args.name, args.value);\n    },\n\n    _onSuccess: function(r)\n    {\n        this.classList.remove('busy');\n        this.clearMarkers();\n        let tmp;\n\n        this.dispatch('formSuccess', r);\n\n        if (r.message && (tmp = this.querySelector('.message.success')) != null)\n        {\n            tmp.innerHTML = this.filterString(r.message, r).replace(/\\n/g, '<br/>');\n            tmp.classList.remove('is-hidden');\n            tmp.onanimationend = () => tmp.classList.add('is-hidden');\n        }\n    },\n\n    _onFailure: function(r)\n    {\n        this.classList.remove('busy');\n        this.clearMarkers();\n        let tmp;\n\n        this.dispatch('formError', r);\n\n        if (r.fields)\n        {\n            for (let i in r.fields)\n            {\n                let f = this.querySelector('[data-field-container=\"'+i+'\"]');\n                if (!f)\n                {\n                    f = this.querySelector('[data-field=\"'+i+'\"]');\n                    if (!f) continue;\n                }\n\n                let tmp = document.createElement('span');\n                tmp.classList.add('field-error');\n                tmp.innerHTML = this.filterString(r.fields[i], r).replace(/\\n/g, '<br/>');\n\n                f.classList.add('field-error');\n                f.classList.add('is-invalid');\n\n                if (this.dataset.errorsAt == 'bottom')\n                    f.parentElement.append(tmp);\n                else if (this.dataset.errorsAt == 'top')\n                    f.parentElement.prepend(tmp);\n                else\n                    f.parentElement.insertBefore(tmp, f.nextElementSibling);\n\n                setTimeout((function (tmp) { return function() { tmp.classList.add('active'); } })(tmp), 25);\n            }\n\n            if (r.error && (tmp = this.querySelector('.message.error')) != null)\n            {\n                tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, '<br/>');\n                tmp.classList.remove('is-hidden');\n                tmp.onanimationend = () => tmp.classList.add('is-hidden');\n            }\n        }\n        else\n        {\n            if ((tmp = this.querySelector('.message.error')) != null)\n            {\n                tmp.innerHTML = this.filterString(r.error, r).replace(/\\n/g, '<br/>') || ('Error: ' + r.response);\n                tmp.classList.remove('is-hidden');\n                tmp.onanimationend = () => tmp.classList.add('is-hidden');\n            }\n        }\n    },\n\n    reset: function (nsilent)\n    {\n        this.model.reset (nsilent);\n        this.clearMarkers();\n\n        if (nsilent === false)\n        {\n            for (var i in this.model.data)\n                this._setField (i, this.model.data[i], true);\n        }\n\n        return false;\n    },\n\n    submit: function ()\n    {\n        if (this.classList.contains('busy'))\n            return;\n\n        let data = { };\n\n        if (this.dataset.strict == 'false')\n            Object.assign(data, this.model.get());\n\n        let list = { };\n        this.querySelectorAll('[data-field]').forEach(e => list[e.dataset.field] = true);\n        Object.keys(list).forEach(f => data[f] = this._getField(f));\n\n        this.dispatch('beforeSubmit', data);\n\n        this.model.set(data);\n\n        let f = this.dataset.formAction || this.formAction;\n        if (!f) return;\n\n        this.classList.add('busy');\n\n        if (typeof(f) != 'function') {\n            data.f = f;\n            Api.apiCall(data, (r) => this[r.response == 200 ? '_onSuccess' : '_onFailure'](r), (r) => this._onFailure({ error: 'Unable to execute request.' }), this.dataset.method ?? 'POST');\n        }\n        else\n            f(data, (r) => this[r.response == 200 ? '_onSuccess' : '_onFailure'](r));\n    }\n});\n","/*\n    <r-panel data-route=\"name\">\n    </r-panel>\n\n    r-panel {\n        display: block;\n    }\n\n    r-panel:not(.is-active) {\n        display: none;\n    }\n\n    r-panel.is-inactive {\n    }\n\n    r-panel.is-active {\n    }\n*/\n\nimport Element from '../element.js';\nimport Router from '../router.js';\n\nexport default Element.register ('r-panel',\n{\n    /**\n     * Route object used by this element.\n     */\n    route: null,\n\n    /**\n     * Initializes the element.\n     */\n    init: function()\n    {\n        this.style.display = '';\n\n        // Executed then the panel route is activated.\n        this._onActivate = (evt, args) => {\n            if (!args.route.changed) return;\n            this.show(true);\n        };\n\n        // Executed then the panel route is deactivated.\n        this._onDeactivate = (evt, args) => {\n            this.hide();\n        };\n\n        this.hide();\n    },\n\n    /**\n     * Adds a handler to Router if the data-route attribute was set.\n     */\n    onConnected: function()\n    {\n        if (this.dataset.route) {\n            this.route = Router.addRoute (this.dataset.route, this._onActivate, this._onDeactivate);\n            this.classList.remove('is-active');\n            this.classList.add('is-inactive');\n        }\n        else {\n            this.classList.add('is-active');\n            this.classList.remove('is-inactive');\n        }\n\n        this.classList.add('anim-ended');\n    },\n\n    /**\n     * Removes a handler previously added to Router if the data-route attribute was set.\n     */\n    onDisconnected: function()\n    {\n        if (this.dataset.route)\n            Router.removeRoute(this.dataset.route, this._onActivate, this._onDeactivate);\n    },\n\n    /**\n     * Hides the panel by removing the `is-active` and adding `is-inactive` class to the element. Fires `panelHidden` event.\n     */\n    hide: function ()\n    {\n        this.dispatch('panelHidden', this.route ? this.route.args : { });\n        this.classList.remove('anim-ended');\n        this.classList.remove('is-active');\n        this.classList.add('is-inactive');\n        this.onanimationend = () => {\n            this.classList.add('anim-ended');\n            this.onanimationend = null;\n        };\n    },\n\n    /**\n     * Shows the panel visible by adding `is-active` and removing `is-inactive` class from the element. If `silent` is true and `data-route` enabled,\n     * the current route will not be updated. Fires `panelShown` event.\n     * @param {boolean} silent \n     */\n    show: function (silent=false)\n    {\n        if (this.dataset.route && !silent)\n        {\n            let hash = \"#\" + this.dataset.route;\n            if (window.location.hash.substr(0, hash.length) != hash) {\n                window.location = hash;\n                return;\n            }\n        }\n\n        this.dispatch('panelShown', this.route ? this.route.args : { });\n        this.classList.remove('anim-ended');\n        this.classList.remove('is-inactive');\n        this.classList.add('is-active');\n        this.onanimationend = () => {\n            this.classList.add('anim-ended');\n            this.onanimationend = null;\n        }\n    },\n\n    /**\n     * Toggles the visibility of the panel. If `silent` is true and `data-route` enabled, the current route will not be updated.\n     */\n    toggleVisibility: function (silent=false)\n    {\n        if (this.classList.contains('is-active'))\n            this.hide();\n        else\n            this.show(silent);\n    }\n});\n","/*\n    <r-list data-list=\"window.dataList1\" data-container=\".x-data\" data-wrap=\"true|false\">\n\n        <template data-mode=\"static|dynamic\">\n        </template>\n\n        <div class=\"x-empty\">\n            Nothing to show.\n        </div>\n\n        <div class=\"x-data\">\n        </div>\n\n    </r-list>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n    Modifiers:\n        .x-empty-null\t\tVisible when the list is in undefined state (before first load).\n        .x-empty\t\t\tVisible when there is no data in the list.\n        .x-not-empty \t\tVisible when there is data in the list.\n        .is-loading \t\tVisible when the list is loading.\n*/\n\nimport { Rinn, ModelList, Template } from 'rinn';\nimport Element from '../element.js';\n\n/*\n**\tConnects to a ModelList and renders its contents using a template. When using \"dynamic\" template, the contents can be other custom elements, and\n**\tthe model of each item can be accessed by using data-model=\":list-item\", which will cause the item model to be added to the element.\n**\n**\tAdditionally root attribute data-wrap can be set to 'true' to wrap the template contents inside a div with a data-iid representing the ID of the\n**\titem, this will cause any changes to items to affect only the specific item in question.\n*/\n\nexport default Element.register ('r-list',\n{\n    list: null,\n\n    container: null,\n    template: null,\n    isEmpty: false,\n    isDynamicTemplate: false,\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    ready: function()\n    {\n        this.container = this.querySelector(this.dataset.container || '.x-data');\n        if (!this.container) {\n            this.container = document.createElement('div');\n            this.container.className = 'x-data';\n            this.appendChild(this.container);\n        }\n\n        let tmp = this.template_elem = this.querySelector('template');\n        if (tmp) {\n            if (tmp.dataset.mode != 'dynamic') {\n                this.template = Template.compile(tmp.innerHTML);\n            }\n            else {\n                this.template = () => tmp.innerHTML;\n                this.isDynamicTemplate = true;\n            }\n\n            tmp.remove();\n        }\n        else\n            this.template = () => '';\n\n        this.container.textContent = ' ';\n\n        this.setEmpty(null);\n        this.setLoading(null);\n    },\n\n    /**\n    **\tExecuted when the children of the element are ready.\n    */\n    rready: function()\n    {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error('data-list not found: ' + this.dataset.list);\n            return;\n        }\n\n        this.setList(list);\n    },\n\n    /*\n    **\tIndicates if the list is empty. Elements having x-empty, x-not-empty and x-empty-null will be updated.\n    */\n    setEmpty: function (value)\n    {\n        if (this.isEmpty === value)\n            return;\n\n        if (value === true)\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.remove('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-empty-null').forEach(i => i.classList.add('is-hidden'));\n        }\n        else if (value === false)\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.remove('is-hidden'));\n            this.querySelectorAll('.x-empty-null').forEach(i => i.classList.add('is-hidden'));\n        }\n        else\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-empty-null').forEach(i => i.classList.remove('is-hidden'));\n        }\n\n        this.isEmpty = value;\n    },\n\n    /*\n    **\tIndicates if the list is loading. Elements having is-loading will be updated.\n    */\n    setLoading: function (value)\n    {\n        if (value === true)\n            this.querySelectorAll('.is-loading').forEach(i => i.classList.remove('is-hidden'));\n        else\n            this.querySelectorAll('.is-loading').forEach(i => i.classList.add('is-hidden'));\n    },\n\n    /**\n    **\tSets the list model-list of the element.\n    */\n    setList: function (list)\n    {\n        if (!list || !Rinn.isInstanceOf(list, ModelList) || this.list === list)\n            return;\n\n        if (this.list != null)\n        {\n            if (this.list.dataSource)\n                this.list.dataSource.removeEventListener (this.eid+':*');\n\n            if (this.list.dataList)\n                this.list.dataList.removeEventListener (this.eid+':*');\n\n            this.list.removeEventListener (this.eid+':*');\n        }\n\n        this.list = list;\n\n        if (this.list.dataSource) {\n            this.list.dataSource.addEventListener (this.eid+':listLoading', this.onLoading, this);\n            this.list.dataSource.addEventListener (this.eid+':listLoaded', this.onLoaded, this);\n        }\n\n        if (this.list.dataList) {\n            this.list.dataList.addEventListener (this.eid+':listLoading', this.onLoading, this);\n            this.list.dataList.addEventListener (this.eid+':listLoaded', this.onLoaded, this);\n        }\n\n        this.list.addEventListener (this.eid+':itemsCleared', this.onItemsCleared, this);\n        this.list.addEventListener (this.eid+':itemsChanged', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemRemoved', this.onItemRemoved, this);\n        this.list.addEventListener (this.eid+':itemChanged', this.onItemChanged, this);\n        this.list.addEventListener (this.eid+':itemAdded', this.onItemAdded, this);\n    },\n\n    /*\n    **\tBuilds an item (inside a div) to be added to the container.\n    */\n    buildItem: function (iid, data, asHtml=false)\n    {\n        if (this.content) {\n            let elem = this.content(data.get(), data);\n            elem.dataset.iid = iid;\n            return elem;\n        }\n\n        if (this.container.content) {\n            let elem = this.container.content(data.get(), data);\n            elem.dataset.iid = iid;\n            return elem;\n        }\n\n        let html = this.template(data.get());\n        if (asHtml) return html;\n\n        let elem = document.createElement('div');\n        \n        elem.dataset.iid = iid;\n        elem.innerHTML = html;\n\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach(i => {\n            i.model = data;\n            i.dataset.model = \"this.model\";\n        });\n\n        for (let attr of this.template_elem.attributes)\n        {\n            if (attr.nodeName.startsWith('data-_') || attr.nodeName == 'data-mode')\n                continue;\n\n            elem.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n\n        return elem;\n    },\n\n    /*\n    **\tExecuted when the list is loading.\n    */\n    onLoading: function()\n    {\n        this.setLoading(true);\n    },\n\n    /*\n    **\tExecuted when the list finished loading.\n    */\n    onLoaded: function()\n    {\n        this.setLoading(false);\n    },\n\n    /*\n    **\tExecuted when the list is cleared.\n    */\n    onItemsCleared: function()\n    {\n        this.container._timeout = setTimeout(() => {\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = '';\n        }, 300);\n    },\n\n    /*\n    **\tExecuted when the items of the list changed.\n    */\n    onItemsChanged: function()\n    {\n        if (this.list.length() == 0)\n            return;\n\n        if (this.container._timeout)\n            clearTimeout(this.container._timeout);\n\n        this.container._timeout = null;\n        this.container.textContent = '';\n\n        let i = 0;\n\n        for (let data of this.list.getData())\n        {\n            if (this.dataset.wrap != 'false')\n                this.container.append(this.buildItem(this.list.itemId[i++], data));\n            else\n                this.container.innerHTML += this.buildItem(this.list.itemId[i++], data, true);\n        }\n\n        this.setEmpty(i == 0);\n    },\n\n    /*\n    **\tExecuted when an item is removed from the list.\n    */\n    onItemRemoved: function(evt, args)\n    {\n        if (this.dataset.wrap == 'false')\n        {\n            this.onItemsChanged();\n            return;\n        }\n\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        elem.remove();\n        this.setEmpty(this.list.length() == 0);\n    },\n\n    /*\n    **\tExecuted when an item changes.\n    */\n    onItemChanged: function(evt, args)\n    {\n        if (this.isDynamicTemplate) return;\n\n        if (this.dataset.wrap == 'false')\n        {\n            this.onItemsChanged();\n            return;\n        }\n\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        elem.innerHTML = this.template(args.item);\n    },\n\n    /*\n    **\tExecuted when an item is added to the list.\n    */\n    onItemAdded: function(evt, args)\n    {\n        if (args.position == 'head')\n        {\n            if (this.dataset.wrap != 'false')\n                this.container.prepend(this.buildItem(args.id, args.item));\n            else\n                this.container.innerHTML = this.buildItem(args.id, args.item, true) + this.container.innerHTML;\n        }\n        else\n        {\n            if (this.dataset.wrap != 'false')\n                this.container.append(this.buildItem(args.id, args.item));\n            else\n                this.container.innerHTML += this.buildItem(args.id, args.item, true);\n        }\n\n        this.setEmpty(false);\n    },\n\n    /**\n     * \tForces re-rendering of the element.\n     */\n    refresh: function()\n    {\n        this.onItemsChanged();\n    }\n});\n","/*\n    <r-item data-model=\"window.model1\">\n    </r-item>\n*/\n\nimport Element from '../element.js';\n\nexport default Element.register ('r-item',\n{\n    isRoot: true,\n\n    /**\n     * Initializes the element.\n     */\n    init: function() {\n    },\n\n    /**\n     * Executed when the children and root are ready.\n     */\n    rready: function()\n    {\n        let model = this.dataModel ?? this.getFieldByPath(this.dataset.model);\n        if (!model) model = { };\n\n        this.setModel (model);\n    }\n});\n","/*\n    <r-paginator data-source=\"window.dataSource1\" data-page-size=\"25\">\n        <span data-watch=\"count\">Showing [offsetStart] to [offsetEnd] out of [count]</span>\n\n        <button data-action=\"firstPage\">First</button>\n        <button data-action=\"prevPage\">&laquo;</button>\n        <button data-action=\"nextPage\">&raquo;</button>\n        <button data-action=\"lastPage\">Last</button>\n        <button data-action=\"refresh\">Refresh</button>\n\n        <input type=\"text\" data-property=\"pageSize\" />\n    </r-paginator>\n*/\n\nimport { Rinn } from 'rinn';\nimport Element from '../element.js';\nimport DataSource from '../data-source.js';\n\n/*\n**\tConnects to a data source to provide pagination features.\n*/\n\nexport default Element.register ('r-paginator',\n{\n    isRoot: true,\n\n    source: null,\n    template: null,\n\n    /**\n    **\tInitializes the element.\n    */\n    init: function()\n    {\n        this.setModel({\n            offsetStart: 0,\n            offsetEnd: 0,\n            count: 0, offset: 0,\n            currentPageSize: this.dataset.pageSize || 25,\n            pageSize: this.dataset.pageSize || 25\n        });\n\n        this.listen('propertyChanged.pageSize', (evt, args) =>\n        {\n            if (this.model.get('currentPageSize') == args.value)\n                return;\n\n            this.model.set('currentPageSize', args.value);\n            this.updateOffset('range');\n        });\n    },\n\n    rready: function()\n    {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error('data-source not found: ' + this.dataset.source);\n            return;\n        }\n\n        this.setSource(source);\n    },\n\n    /**\n    **\tSets the source model-list of the paginator.\n    */\n    setSource: function (source)\n    {\n        if (!source || !Rinn.isInstanceOf(source, DataSource) || this.source === source)\n            return;\n\n        if (this.source != null)\n        {\n            this.source.removeEventListener (this.eid+':*');\n            this.source.includeCount = false;\n        }\n\n        this.source = source;\n\n        this.source.includeCount = true;\n        this.updateOffset();\n\n        this.source.addEventListener (this.eid+':requestPropertyChanged', this.onRequestPropertyChanged, this);\n        this.source.addEventListener (this.eid+':countChanged', this.onCountChanged, this);\n        this.source.addEventListener (this.eid+':listItemRemoved', this.onItemRemoved, this);\n        this.source.addEventListener (this.eid+':listItemAdded', this.onItemAdded, this);\n\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n\n    /*\n    **\tUpdates several offset related fields in the paginator model. Optionally refreshes the data source with the specified mode.\n    */\n    updateOffset: function(mode=null)\n    {\n        this.model.set('offsetStart', this.model.get('count') != 0 ? this.model.get('offset') + 1 : 0);\n        this.model.set('offsetEnd', Math.min(this.model.get('count'), this.model.get('offsetStart') + this.model.getInt('pageSize') - 1));\n        this.model.update('count');\n\n        let _count = this.source.request.get('count');\n        let _offset = this.source.request.get('offset');\n\n        this.source.request.set('count', this.model.getInt('pageSize'));\n        this.source.request.set('offset', this.model.get('offset'));\n\n        if (mode && (_count != this.source.request.get('count') || _offset != this.source.request.get('offset')))\n            this.source.refresh(mode);\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */\n    onRequestPropertyChanged: function(evt, args)\n    {\n        if (args.name == 'count' || args.name == 'offset')\n            return;\n\n        this.model.set(args.name, args.value);\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */\n    onModelPropertyChanged: function (evt, args)\n    {\n        let ignored = [\n            'offsetStart',\n            'offsetEnd',\n            'count',\n            'offset',\n            'currentPageSize',\n            'pageSize'\n        ];\n\n        if (ignored.indexOf(args.name) != -1)\n            return;\n\n        if (this.source.request.get(args.name) == args.value)\n            return;\n\n        this.source.request.set(args.name, args.value);\n        this.source.refresh('filter');\n    },\n\n    /*\n    **\tExecuted when the remote count changes.\n    */\n    onCountChanged: function(evt, args)\n    {\n        this.model.set('count', evt.source.count, false);\n        this.updateOffset();\n    },\n\n    /*\n    **\tExecuted when an item is removed from the list.\n    */\n    onItemRemoved: function(evt, args)\n    {\n        this.model.set('count', this.model.getInt('count') - 1, false);\n        this.updateOffset();\n    },\n\n    /*\n    **\tExecuted when an item is added to the list.\n    */\n    onItemAdded: function(evt, args)\n    {\n        this.model.set('count', this.model.getInt('count') + 1, false);\n        this.updateOffset();\n    },\n\n    /*\n    **\tMoves to the previous page.\n    */\n    prevPage: function()\n    {\n        if (this.model.get('offset') <= 0)\n            return;\n\n        let offs = this.model.get('offset') - this.model.getInt('pageSize');\n        if (offs < 0) offs = 0;\n\n        this.model.set('offset', offs);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tMoves to the next page.\n    */\n    nextPage: function()\n    {\n        let offs = this.model.get('offset') + this.model.getInt('pageSize');\n        if (offs >= this.model.get('count')) return;\n\n        this.model.set('offset', offs);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tMoves to the first page.\n    */\n    firstPage: function()\n    {\n        this.model.set('offset', 0);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tMoves to the last page.\n    */\n    lastPage: function()\n    {\n        let offs = this.model.get('count') - this.model.getInt('pageSize');\n        if (offs < 0) offs = 0;\n\n        this.model.set('offset', offs);\n        this.updateOffset('range');\n    },\n\n    /*\n    **\tRefreshes the data source.\n    */\n    refresh: function()\n    {\n        this.source.refresh('full');\n    },\n\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */\n    clear: function(args)\n    {\n        for (let i = 0; i < args.length; i++)\n            this.model.set(args[i], '');\n    }\n});\n","/*\n    <r-table data-source=\"window.dataSource1\">\n        <table>\n            <thead>\n                <tr>\n                    <th>A</th>\n                    <th>B</th>\n                </tr>\n            </thead>\n\n            <tbody class=\"x-data\">\n                <tr>\n                    <td>[a]</td>\n                    <td>[b]</td>\n                </tr>\n            </tbody>\n        </table>\n    </r-table>\n\n    CSS:\n        .is-hidden {\n            display: none;\n        }\n\n        th[data-sort] {\n            cursor: pointer; text-decoration: underline;\n        }\n\n        th[data-sort][data-order=\"asc\"]:before {\n            content: \"\\25B2\";\n        }\n\n        th[data-sort][data-order=\"desc\"]:before {\n            content: \"\\25BC\";\n        }\n\n    Modifiers:\n        .x-empty\t\t\tAdd to elements that should be shown only when there is no data in the data source.\n        .x-not-empty \t\tAdd to elements that should be shown only when there is data in the data source.\n        [data-sort]\t\t\tAdded to th/td elements in thead, marks the column as sortable.\n*/\n\nimport { Rinn, Template } from 'rinn';\nimport Element from '../element.js';\nimport DataSource from '../data-source.js';\n\n/**\n * Connects to a DataSource and renders its contents as a table.\n */\n\nexport default Element.register ('r-table',\n{\n    isRoot: true,\n\n    source: null,\n    template: null,\n    container: null,\n    isEmpty: null,\n\n    /**\n     * Initializes the element.\n     */\n    init: function()\n    {\n        this.setModel({ });\n    },\n\n    /**\n     * Executed when the children of the element are ready.\n     */\n    ready: function()\n    {\n        this.container = this.querySelector(this.dataset.container || 'tbody.x-data');\n        if (!this.container) throw new Error ('r-table requires a container');\n\n        if (this.container.dataset.mode != 'dynamic')\n            this.template = Template.compile(this.container.innerHTML);\n        else\n            this.template = () => this.container.innerHTML;\n\n        this.temporalBody = document.createElement('tbody');\n        this.container.textContent = ' ';\n\n        this.setEmpty(true);\n    },\n\n    /**\n     * Executed when the children and root elements are ready.\n     */\n    rready: function()\n    {\n        let source = this.dataSource ?? this.getFieldByPath(this.dataset.source);\n        if (!source) {\n            if (this.dataset.source) console.error('data-source not found: ' + this.dataset.source);\n            return;\n        }\n\n        this.setSource(source);\n    },\n\n    /*\n    **\tIndicates if the table is empty. Elements having .x-not-empty will be hidden.\n    */\n    setEmpty: function (value)\n    {\n        if (this.isEmpty === value)\n            return;\n\n        if (value)\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.remove('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.add('is-hidden'));\n        }\n        else\n        {\n            this.querySelectorAll('.x-empty').forEach(i => i.classList.add('is-hidden'));\n            this.querySelectorAll('.x-not-empty').forEach(i => i.classList.remove('is-hidden'));\n        }\n\n        this.isEmpty = value;\n    },\n\n    /**\n    **\tSets the data source of the element.\n    */\n    setSource: function (source)\n    {\n        if (!source || !Rinn.isInstanceOf(source, DataSource) || this.source === source)\n            return;\n\n        if (this.source != null)\n            this.source.removeEventListener (this.eid+':*');\n\n        this.source = source;\n\n        this.source.addEventListener (this.eid+':requestPropertyChanged', this.onRequestPropertyChanged, this);\n        this.source.addEventListener (this.eid+':listItemsCleared', this.onItemsCleared, this);\n        this.source.addEventListener (this.eid+':listItemsChanged', this.onItemsChanged, this);\n        this.source.addEventListener (this.eid+':listItemRemoved', this.onItemRemoved, this);\n        this.source.addEventListener (this.eid+':listItemChanged', this.onItemChanged, this);\n        this.source.addEventListener (this.eid+':listItemAdded', this.onItemAdded, this);\n\n        this.source.setNamespace(this.eid);\n        this.source.request.update(true);\n        this.source.setNamespace(null);\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the source request changes. The property is copied to the local model.\n    */\n    onRequestPropertyChanged: function(evt, args)\n    {\n        this.model.set(args.name, args.value);\n\n        if (args.name == 'sort')\n        {\n            this.querySelectorAll('thead [data-sort]').forEach(i => i.dataset.order = '');\n        }\n        else if (args.name == 'order')\n        {\n            let elem = this.querySelector('thead [data-sort=\"'+evt.source.get('sort')+'\"]');\n            if (elem) elem.dataset.order = args.value;\n        }\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the model has changed. The property is copied to the data source request model.\n    */\n    onModelPropertyChanged: function (evt, args)\n    {\n        if (this.source.request.get(args.name) == args.value)\n            return;\n\n        this.source.request.set(args.name, args.value);\n\n        let ignored = [\n            'count',\n            'offset'\n        ];\n\n        if (ignored.indexOf(args.name) != -1)\n            return;\n\n        this.source.refresh('filter');\n    },\n\n    /*\n    **\tEvent handler invoked when a property of the model is removed.\n    */\n    onModelPropertyRemoved: function (evt, args)\n    {\n        if (typeof(args.fields) == 'string')\n            this.source.request.remove(i);\n        else\n            args.fields.forEach(i => this.source.request.remove(i));\n\n        this.source.refresh('filter');\n    },\n\n    /*\n    **\tBuilds an item to be added to the container.\n    */\n    buildItem: function (iid, data)\n    {\n        if (this.container.content) {\n            let elem = this.container.content(data.get(), data);\n            elem.dataset.iid = iid;\n            return elem;\n        }\n\n        let elem = this.temporalBody;\n\n        elem.innerHTML = this.template(data.get());\n\n        elem.querySelectorAll('[data-model=\":list-item\"]').forEach(i => {\n            i.model = data;\n            i.dataset.model = \"this.model\";\n        });\n\n        elem = elem.firstElementChild;\n        elem.dataset.iid = iid;\n\n        return elem;\n    },\n\n    /*\n    **\tExecuted when the list is cleared.\n    */\n    onItemsCleared: function(evt, args)\n    {\n        this.container._timeout = setTimeout(() => {\n            this.setEmpty(true);\n            this.container._timeout = null;\n            this.container.textContent = '';\n        }, 300);\n    },\n\n    /*\n    **\tExecuted when the items of the list changed.\n    */\n    onItemsChanged: function(evt, args)\n    {\n        if (this.source.list.length() == 0)\n            return;\n\n        if (this.container._timeout)\n            clearTimeout(this.container._timeout);\n\n        this.container._timeout = null;\n        this.container.textContent = '';\n\n        let i = 0;\n\n        for (let data of this.source.list.getData())\n            this.container.append(this.buildItem(this.source.list.itemId[i++], data));\n\n        this.setEmpty(i == 0);\n    },\n\n    /*\n    **\tExecuted when an item is removed from the list.\n    */\n    onItemRemoved: function(evt, args)\n    {\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        elem.remove();\n        this.setEmpty(this.source.list.length() == 0);\n    },\n\n    /*\n    **\tExecuted when an item changes.\n    */\n    onItemChanged: function(evt, args)\n    {\n        let elem = this.container.querySelector('[data-iid=\"'+args.id+'\"]');\n        if (!elem) return;\n\n        let _elem = this.buildItem(args.id, args.item);\n        this.container.replaceChild(_elem, elem);\n    },\n\n    /*\n    **\tExecuted when an item is added to the list.\n    */\n    onItemAdded: function(evt, args)\n    {\n        if (args.position == 'head')\n            this.container.prepend(this.buildItem(args.id, args.item));\n        else\n            this.container.append(this.buildItem(args.id, args.item));\n\n        this.setEmpty(false);\n    },\n\n    /*\n    **\tHandles clicks to data-sort elements.\n    */\n    \"event click thead [data-sort]\": function(evt, args)\n    {\n        if (this.source.request.get('sort') == evt.source.dataset.sort)\n        {\n            this.source.request.set('order', this.source.request.get('order') == 'asc' ? 'desc' : 'asc');\n            this.source.refresh('order');\n        }\n        else\n        {\n            this.source.request.set('sort', evt.source.dataset.sort);\n            this.source.request.set('order', 'asc', true);\n            this.source.refresh('order');\n        }\n    },\n\n    /*\n    **\tRefreshes the data source.\n    */\n    refresh: function()\n    {\n        this.source.refresh('full');\n    },\n\n    /*\n    **\tClears (set to empty) the specified fields from the data source's request parameters.\n    */\n    clear: function(args)\n    {\n        for (let i = 0; i < args.length; i++)\n            this.model.set(args[i], '');\n    }\n});\n","/*\n    <r-select data-list=\"window.dataList1\" data-blank=\"\"></r-select>\n*/\n\nimport { Rinn, ModelList } from 'rinn';\nimport Element from '../element.js';\n\n/*\n**\tConnects to a ModelList and renders its contents as a <select> element.\n*/\n\nexport default Element.register ('r-select',\n{\n    list: null,\n    container: null,\n\n    value: '',\n\n    /**\n    **\tInitializes the element.\n    */\n    init: function()\n    {\n        this.container = document.createElement('select');\n        this.parentElement.insertBefore(this.container, this);\n\n        let list = [];\n\n        for (let attr of this.attributes)\n        {\n            if (attr.nodeName.startsWith('data-_') || attr.nodeName == 'data-list' || attr.nodeName == 'data-blank')\n                continue;\n\n            this.container.setAttribute(attr.nodeName, attr.nodeValue);\n            list.push(attr.nodeName);\n        }\n\n        if (this.disabled)\n            this.container.disabled = this.disabled;\n\n        list.forEach(i => this.removeAttribute(i));\n\n        this.textContent = ' ';\n        this.style.display = 'none';\n    },\n\n    /**\n    **\tExecuted when the children and parent of the element are ready.\n    */\n    rready: function()\n    {\n        let list = this.dataList ?? this.getFieldByPath(this.dataset.list);\n        if (!list) {\n            if (this.dataset.list) console.error('data-list not found: ' + this.dataset.list);\n            return;\n        }\n\n        this.setList(list);\n\n        if (this.parentElement.lastElementChild !== this)\n            this.parentElement.append(this);\n    },\n\n    /**\n    **\tSets the list model-list of the element.\n    */\n    setList: function (list)\n    {\n        if (!list || !Rinn.isInstanceOf(list, ModelList) || this.list === list)\n            return;\n\n        if (this.list != null)\n            this.list.removeEventListener (this.eid+':*');\n\n        this.list = list;\n\n        if (this.list.dataSource)\n            this.list.dataSource.includeEnum = true;\n\n        this.list.addEventListener (this.eid+':itemsCleared', this.onItemsCleared, this);\n        this.list.addEventListener (this.eid+':itemsChanged', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemRemoved', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemChanged', this.onItemsChanged, this);\n        this.list.addEventListener (this.eid+':itemAdded', this.onItemsChanged, this);\n\n        this.onItemsChanged();\n    },\n\n    /*\n    **\tExecuted when the list is cleared.\n    */\n    onItemsCleared: function(evt, args)\n    {\n        this.container.textContent = '';\n    },\n\n    /*\n    **\tExecuted when the items of the list changed.\n    */\n    onItemsChanged: function(evt, args)\n    {\n        if (this.list.length() == 0)\n            return;\n\n        let list = this.list.getData();\n        let value, label, s = '';\n\n        if (list[0].has('value')) value = 'value';\n        else if (list[0].has('id')) value = 'id';\n\n        if (list[0].has('label')) label = 'label';\n        else if (list[0].has('name')) label = 'name';\n\n        if ('blank' in this.dataset)\n            s += '<option value=\"\">'+this.dataset.blank+'</option>';\n\n        if (list[0].has('group'))\n        {\n            let groups = { };\n            list.forEach(i => groups[i.get('group')] = null);\n\n            for (let i in groups)\n                groups[i] = { name: i, list: [] };\n\n            list.forEach(i => groups[i.get('group')].list.push(i));\n\n            groups = Object.values(groups);\n            groups.forEach(g => {\n                s += '<optgroup label=\"'+g.name+'\">';\n                g.list.forEach(i => s += '<option value=\"'+i.get(value)+'\">'+i.get(label)+'</option>');\n                s += '</optgroup>';\n            });\n        }\n        else\n            list.forEach(i => s += '<option value=\"'+i.get(value)+'\">'+i.get(label)+'</option>');\n\n        this.container.innerHTML = s;\n        this.container.value = this.container.dataset.value;\n    },\n\n    /**\n     * \tForces re-rendering of the element.\n     */\n    refresh: function()\n    {\n        this.onItemsChanged();\n    }\n});\n","/*\n    <r-image-cropper>\n    </r-image-cropper>\n*/\n\nimport Element from '../element.js';\nimport Utils from '../utils.js';\n\nexport default Element.register ('r-image-cropper',\n{\n    /*\n    **\tDefault aspect ratio.\n    */\n    aspectRatio: 1,\n\n    /*\n    **\tCurrent image scale.\n    */\n    imageScale0: 0, imageScale: 1,\n\n    /*\n    **\tImage translation offsets.\n    */\n    imageOffsX: 0, imageOffsY: 0,\n\n    /*\n    **\tPointer contexts.\n    */\n    pointerA: null, pointerB: null,\n\n    /*\n    **\tClient bounding box.\n    */\n    bounds: null,\n\n    /*\n    **\tInitializes the element.\n    */\n    init: function()\n    {\n        this.canvas = document.createElement('canvas');\n        this.appendChild(this.canvas);\n\n        this.g = this.canvas.getContext('2d');\n\n        this.pointerA = { id: null, active: false, sx: 0, sy: 0, cx: 0, cy: 0, ix: 0, iy: 0 };\n        this.pointerB = { id: null, active: false, sx: 0, sy: 0, cx: 0, cy: 0, ix: 0, iy: 0 };\n\n        this.log = document.createElement('div');\n        this.appendChild(this.log);\n    },\n\n    /*\n    **\tSets the image for the cropper from an image URL.\n    */\n    setImageUrl: function(url)\n    {\n        Utils.loadImageFromUrl(url, (image) => {\n            this.setImage(image);\n        });\n    },\n\n    /*\n    **\tSets the image for the cropper from an HTML File object.\n    */\n    setImageFile: function(file)\n    {\n        Utils.loadAsDataUrl(file, (url) => {\n            Utils.loadImageFromUrl(url, (image) => {\n                this.setImage(image);\n            });\n        });\n    },\n\n    /*\n    **\tSets the cropper image from an HTML Image element.\n    */\n    setImage: function(image)\n    {\n        this.image = image;\n\n        this.reset();\n\n        this.imageScale = Math.max(this.canvas.width / this.image.width, this.canvas.height / this.image.height);\n\n        this.imageOffsX = (this.canvas.width - this.imageScale*this.image.width)*0.5;\n        this.imageOffsY = (this.canvas.height - this.imageScale*this.image.height)*0.5;\n\n        this.render();\n    },\n\n    /*\n    **\tReturns the blob and URL representing the current canvas state.\n    */\n    getBlobAndUrl: function(callback, type='image/png', quality=0.9)\n    {\n        this.canvas.toBlob((blob) => {\n            callback(blob, URL.createObjectURL(blob));\n        },\n        type, quality);\n    },\n\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained.\n    */\n    reset: function()\n    {\n        this.bounds = this.getBoundingClientRect();\n\n        this.canvas.width = this.bounds.width;\n        this.canvas.height = this.bounds.width/this.aspectRatio;\n    },\n\n    /*\n    **\tAuto-resizes the canvas to ensure the aspect ratio is maintained and renders the image.\n    */\n    render: function()\n    {\n        this.canvas.width = this.canvas.width;\n\n        this.g.fillStyle = '#000';\n        this.g.beginPath();\n        this.g.rect(0, 0, this.canvas.width, this.canvas.height);\n        this.g.fill();\n\n        this.g.translate(this.imageOffsX, this.imageOffsY);\n        this.g.scale(this.imageScale, this.imageScale);\n        this.g.drawImage(this.image, 0, 0);\n    },\n\n    /*\n    **\tTranslates the image by the given offsets.\n    */\n    translateImage: function(offsX, offsY)\n    {\n        this.imageOffsX += offsX;\n        this.imageOffsY += offsY;\n\n        this.render(true);\n    },\n\n    /*\n    **\tHandle mouse events on the canvas.\n    */\n    \"event mousemove canvas\": function(evt)\n    {\n        if (this.pointerA.active)\n        {\n            this.pointerA.cx = evt.clientX;\n            this.pointerA.cy = evt.clientY;\n\n            this.translateImage(this.pointerA.cx - this.pointerA.sx, this.pointerA.cy - this.pointerA.sy);\n\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n        }\n\n        this.pointerA.ix = ((evt.clientX-this.bounds.left) - this.imageOffsX) / this.imageScale;\n        this.pointerA.iy = ((evt.clientY-this.bounds.top) - this.imageOffsY) / this.imageScale;\n    },\n\n    \"event mousedown canvas\": function(evt)\n    {\n        this.pointerA.active = true;\n        this.pointerA.sx = evt.clientX;\n        this.pointerA.sy = evt.clientY;\n    },\n\n    \"event mouseup canvas\": function(evt)\n    {\n        this.pointerA.active = false;\n    },\n\n    \"event wheel canvas\": function(evt)\n    {\n        if (evt.deltaY > 0)\n            this.imageScale -= 0.045;\n        else\n            this.imageScale += 0.045;\n\n        if (this.imageScale < 0.1) this.imageScale = 0.1;\n\n        this.imageOffsX += -this.pointerA.ix*this.imageScale + (evt.clientX-this.bounds.left) - this.imageOffsX;\n        this.imageOffsY += -this.pointerA.iy*this.imageScale + (evt.clientY-this.bounds.top) - this.imageOffsY;\n\n        this.render();\n    },\n\n    /*\n    **\tHandle touch events on the canvas.\n    */\n    \"event touchmove canvas\": function(evt)\n    {\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id == i.identifier)\n            {\n                this.pointerA.cx = i.clientX;\n                this.pointerA.cy = i.clientY;\n            }\n            else if (this.pointerB.id == i.identifier)\n            {\n                this.pointerB.cx = i.clientX;\n                this.pointerB.cy = i.clientY;\n            }\n        }\n\n        if (this.pointerA.active && this.pointerB.active)\n        {\n            let d0 = Math.sqrt(Math.pow(this.pointerA.sx-this.pointerB.sx, 2) + Math.pow(this.pointerA.sy-this.pointerB.sy, 2));\n            let d1 = Math.sqrt(Math.pow(this.pointerA.cx-this.pointerB.cx, 2) + Math.pow(this.pointerA.cy-this.pointerB.cy, 2));\n\n            let d = d1 - d0;\n            this.imageScale += (d/10)*0.025;\n            if (this.imageScale < 0.1) this.imageScale = 0.1;\n\n            this.imageOffsX += -this.pointerA.ix*this.imageScale + (this.pointerA.cx-this.bounds.left) - this.imageOffsX;\n            this.imageOffsY += -this.pointerA.iy*this.imageScale + (this.pointerA.cy-this.bounds.top) - this.imageOffsY;\n\n            this.pointerA.sx = this.pointerA.cx;\n            this.pointerA.sy = this.pointerA.cy;\n\n            this.pointerB.sx = this.pointerB.cx;\n            this.pointerB.sy = this.pointerB.cy;\n\n            this.render();\n        }\n        else\n        {\n            let p = this.pointerA.active ? this.pointerA : (this.pointerB.active ? this.pointerB : null);\n            if (!p) return;\n\n            this.translateImage(p.cx - p.sx, p.cy - p.sy);\n\n            p.sx = p.cx;\n            p.sy = p.cy;\n        }\n    },\n\n    \"event touchstart canvas\": function(evt)\n    {\n        this.imageScale0 = this.imageScale;\n\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id === null)\n            {\n                this.pointerA.id = i.identifier;\n                this.pointerA.active = true;\n                this.pointerA.sx = i.clientX;\n                this.pointerA.sy = i.clientY;\n                this.pointerA.ix = ((i.clientX-this.bounds.left) - this.imageOffsX) / this.imageScale;\n                this.pointerA.iy = ((i.clientY-this.bounds.top) - this.imageOffsY) / this.imageScale;\n            }\n            else if (this.pointerB.id === null)\n            {\n                this.pointerB.id = i.identifier;\n                this.pointerB.active = true;\n                this.pointerB.sx = i.clientX;\n                this.pointerB.sy = i.clientY;\n                this.pointerB.ix = ((i.clientX-this.bounds.left) - this.imageOffsX) / this.imageScale;\n                this.pointerB.iy = ((i.clientY-this.bounds.top) - this.imageOffsY) / this.imageScale;\n            }\n        }\n    },\n\n    \"event touchend canvas\": function(evt)\n    {\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id == i.identifier)\n            {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            }\n            else if (this.pointerB.id == i.identifier)\n            {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    },\n\n    \"event touchcancel canvas\": function(evt)\n    {\n        for (let i of evt.changedTouches)\n        {\n            if (this.pointerA.id == i.identifier)\n            {\n                this.pointerA.id = null;\n                this.pointerA.active = false;\n            }\n            else if (this.pointerB.id == i.identifier)\n            {\n                this.pointerB.id = null;\n                this.pointerB.active = false;\n            }\n        }\n    }\n});\n","\nconst Utils =\n{\n    /**\n     * Forces the browser to show a download dialog.\n     * @param {string} filename\n     * @param {string} url\n     */\n    showDownload: function (filename, url)\n    {\n        let link = document.createElement(\"a\");\n        link.href = url;\n\n        link.style.display = 'none';\n        link.download = filename;\n        link.target = \"_blank\";\n\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    },\n\n    /**\n     * Forces the browser to show a file selection dialog.\n     * @param {boolean} allowMultiple\n     * @param {string} accept \n     * @param {function(File[])} callback \n     */\n    showFilePicker: function (allowMultiple, accept, callback)\n    {\n        let input = document.createElement(\"input\");\n\n        input.type = \"file\";\n        input.accept = accept;\n        input.style.display = 'none';\n        input.multiple = allowMultiple;\n\n        document.body.appendChild(input);\n\n        input.onchange = function() {\n            callback(input.files);\n        };\n\n        document.body.onfocus = function() {\n            document.body.onfocus = null;\n            document.body.removeChild(input);\n        };\n\n        input.click();\n    },\n\n    /**\n     * Loads a file or blob and returns the content as a dataURL.\n     * @param {File|Blob} file\n     * @param {function(string)} callback\n     */\n    loadAsDataUrl: function (file, callback)\n    {\n        let reader = new FileReader();\n\n        reader.onload = function(e) {\n            callback (e.target.result, null);\n        };\n\n        reader.onerror = function(e) {\n            callback (null, e);\n        };\n\n        reader.readAsDataURL(file);\n    },\n\n    /**\n     * Loads a file or blob and returns the content as text.\n     * @param {File|Blob} file\n     * @param {function(string)} callback\n     */\n    loadAsText: function (file, callback)\n    {\n        let reader = new FileReader();\n\n        reader.onload = function(e) {\n            callback (e.target.result);\n        };\n\n        reader.readAsText(file);\n    },\n\n    /**\n     * Loads a file or blob and returns the content as array buffer.\n     * @param {File|Blob} file\n     * @param {function(ArrayBuffer)} callback\n     */\n    loadAsArrayBuffer: function (file, callback)\n    {\n        let reader = new FileReader();\n\n        reader.onload = function(e) {\n            callback (e.target.result);\n        };\n\n        reader.readAsArrayBuffer(file);\n    },\n\n    /**\n     * Loads a list of files or blobs and returns the content as dataURLs.\n     * @param {Array<File|Blob>} fileList\n     * @param {function([{ name:string, size:number, url:string }])} callback\n     */\n    loadAllAsDataUrl: function (fileList, callback)\n    {\n        let result = [];\n\n        if (!fileList || !fileList.length) {\n            callback(result);\n            return;\n        }\n\n        let loadNext = function (i)\n        {\n            if (i == fileList.length) {\n                callback(result);\n                return;\n            }\n\n            Utils.loadAsDataUrl (fileList[i], function(url, err) {\n                if (!err) {\n                    result.push({ name: fileList[i].name, size: fileList[i].size, url: url });\n                }\n                loadNext(i+1);\n            });\n        };\n\n        loadNext(0);\n    },\n\n    /**\n     * Loads an image from a url and returns it as an Image object.\n     * @param {string} url\n     * @param {function(Image)} callback\n     */\n    loadImageFromUrl: function (url, callback)\n    {\n        let image = new Image();\n        image.onload = () => callback(image);\n        image.onerror = () => callback(null);\n        image.src = url;\n    }\n};\n\nexport default Utils;\n","\nimport { Rinn } from 'rinn';\n\n//!class db\n\nexport default\n{\n\t/**\n\t * Database connection.\n\t */\n\tdb: null,\n\n\t/**\n\t * Initializes the database connection.\n\t * @param {string} dbName\n\t * @param {number} version\n\t * @param {(db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void} upgradeCallback\n\t * @returns {Promise<void>}\n\t * !static init (dbName: string, version: number, upgradeCallback: (db: IDBDatabase, txn: IDBTransaction, oldVersion: number) => void) : Promise<void>;\n\t */\n\tinit: function (dbName, version, upgradeCallback)\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tif (!global.indexedDB)\n\t\t\t{\n\t\t\t\treject ('IndexedDB is not available in your system.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet req = indexedDB.open(dbName, version);\n\t\t\treq.onerror = (evt) =>\n\t\t\t{\n\t\t\t\tlet err = evt.target.error + '';\n\n\t\t\t\tif (err.indexOf('AbortError') !== -1)\n\t\t\t\t\terr = \"\\n\" + req.message;\n\n\t\t\t\treject('Unable to open database: ' + err);\n\t\t\t\treturn;\n\t\t\t};\n\n\t\t\treq.onupgradeneeded = async (evt) =>\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tconst db = evt.target.result;\n\t\t\t\t\tconst txn = evt.target.transaction;\n\n\t\t\t\t\tif (evt.oldVersion < 1)\n\t\t\t\t\t\tdb.createObjectStore('system', { keyPath: ['name'] });\n\n\t\t\t\t\tawait upgradeCallback(db, txn, evt.oldVersion);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\treq.message = e.message;\n\t\t\t\t\treq.transaction.abort();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treq.onsuccess = async (evt) =>\n\t\t\t{\n\t\t\t\tthis.db = evt.target.result;\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Ensures the database is ready to be used, or throws an exception.\n\t */\n\tensureConnected: function()\n\t{\n\t\tif (!this.db)\n\t\t\talert('Error: Database not initialized.');\n\t},\n \n\t/**\n\t * Returns an index object for later use with methods that accept an IDBIndex in the `storeName` parameter.\n\t * @param {string} storeName\n\t * @param {string} indexName\n\t * @returns {IDBIndex}\n\t * !static index (storeName: string, indexName: string) : IDBIndex;\n\t */\n\tindex: function (storeName, indexName)\n\t{\n\t\tthis.ensureConnected();\n\n\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\n\t\tlet index = store.index(indexName);\n\t\tif (!index) throw new Error ('Unable to find index `' + indexName + '` in store ' + storeName);\n\n\t\treturn index;\n\t},\n\n\t/**\n\t * Runs a callback for each record in a data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} id\n\t * @param { (value:object, cursor:IDBCursor) => Promise<boolean> } callback\n\t * @returns {Promise<void>}\n\t * !static forEach (storeName: string|IDBIndex|IDBObjectStore, id: string, callback: (value:object, cursor:IDBCursor) => Promise<boolean>) : Promise<void>;\n\t */\n\tforEach: function (storeName, id, callback)\n\t{\n\t\tthis.ensureConnected();\n\n\t\tif (typeof(id) === 'function')\n\t\t{\n\t\t\tcallback = id;\n\t\t\tid = null;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) =>\n\t\t{\n\t\t\tlet request, store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tif (id === null)\n\t\t\t\trequest = store.openCursor();\n\t\t\telse\n\t\t\t\trequest = store.openCursor(id);\n\n\t\t\trequest.onsuccess = async (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet result = await callback (cursor.value, cursor);\n\t\t\t\tif (result === false)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns the count of all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @returns {Promise<number>}\n\t * !static count (storeName: string|IDBIndex|IDBObjectStore) : Promise<number>;\n\t */\n\tcount: function (storeName)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.count();\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns all records from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<object>>}\n\t * !static getAll (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */\n\tgetAll: function (storeName, filter=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.getAll(filter);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns all keys from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} filter\n\t * @returns {Promise<Array<string|number|Array<string|number>>>}\n\t * !static getAllKeys (storeName: string|IDBIndex|IDBObjectStore, filter?: string|number|Array<string|number>) : Promise<Array<object>>;\n\t */\n\tgetAllKeys: function (storeName, filter=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.getAllKeys(filter);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Loads a list of records having unique values from the specified data store and returns the entire object or just the specified field.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string} [field]\n\t * @returns {Promise<Array<number|string|object>>}\n\t * !static getAllUnique (storeName: string|IDBIndex|IDBObjectStore) : Promise<Array<number|string|object>>;\n\t */\n\tgetAllUnique: function (storeName, fieldName=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.openCursor(null, 'nextunique');\n\t\t\tlet list = [];\n\n\t\t\trequest.onsuccess = (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve(list);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlist.push(fieldName ? cursor.value[fieldName] : cursor.value);\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns a single record from the specified data store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<object>}\n\t * !static get (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<object>;\n\t */\n\tget: function (storeName, id)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.get(id);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve(evt.target.result || null);\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\n\t/**\n\t * Adds or overwrites a record in the specified data store (data must include the primary key).\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static put (storeName: string, data: object) : Promise<void>;\n\t */\n\tput: function (storeName, data)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\tlet request = store.put(data);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Returns a variable from the system table.\n\t * @param {string} name - Name of the property to read.\n\t * @param {boolean} full - When `true` the entire object will be returned.\n\t * @returns {any}\n\t * !static sysGet (name: string, full?: boolean) : any;\n\t */\n\tsysGet: async function (name, full=false)\n\t{\n\t\tlet data = await this.get('system', [name]);\n\t\treturn data ? (full ? data : data.value) : null;\n\t},\n\n\t/**\n\t * Writes a variable to the system table.\n\t * @param {string} name - Name of the property to write.\n\t * @param {any} value - Value to write.\n\t * @param {boolean} full - When `true` the entire value will be written as-is.\n\t * @returns {void}\n\t * !static sysPut (name: string, value: any, full?: boolean) : void;\n\t */\n\tsysPut: async function (name, value, full=false)\n\t{\n\t\tif (full)\n\t\t{\n\t\t\tvalue.name = name;\n\t\t\tawait this.put('system', value);\n\t\t}\n\t\telse\n\t\t\tawait this.put('system', { name: name, value: value });\n\t},\n\n\t/**\n\t * Returns a single record from the specified data store that matches the `partial` object and does NOT match the `notPartial` object.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {object} [partial]\n\t * @param {object} [notPartial]\n\t * @returns {Promise<object>}\n\t * !static findOne (storeName: string|IDBIndex|IDBObjectStore, partial?: object, notPartial?: object) : Promise<object>;\n\t */\n\tfindOne: function (storeName, partial=null, notPartial=null)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store;\n\n\t\t\tif (typeof(storeName) === 'string')\n\t\t\t\tstore = this.db.transaction(storeName, 'readonly').objectStore(storeName);\n\t\t\telse\n\t\t\t\tstore = storeName;\n\n\t\t\tlet request = store.openCursor();\n\n\t\t\trequest.onsuccess = (event) =>\n\t\t\t{\n\t\t\t\tlet cursor = event.target.result;\n\t\t\t\tif (!cursor)\n\t\t\t\t{\n\t\t\t\t\tresolve(null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (partial === null || Rinn.partialCompare(cursor.value, partial))\n\t\t\t\t{\n\t\t\t\t\tif (notPartial !== null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Rinn.partialCompare(cursor.value, notPartial))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcursor.continue();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(cursor.value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcursor.continue();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Deletes a record from the specified data store.\n\t * @param {string} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static delete (storeName: string, id: string|number|Array<string|number>) : Promise<void>;\n\t */\n\tdelete: function (storeName, id)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\n\t\t\tlet request = store.delete(id);\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Deletes all items in the specified store.\n\t * @param {string|IDBIndex|IDBObjectStore} storeName\n\t * @param {string|number|Array<string|number>} id\n\t * @returns {Promise<void>}\n\t * !static deleteAll (storeName: string|IDBIndex|IDBObjectStore, id: string|number|Array<string|number>) : Promise<void>;\n\t */\n\tdeleteAll: function (storeName, id=null)\n\t{\n\t\treturn this.forEach(storeName, id, async (value, cursor) => {\n\t\t\tawait cursor.delete();\n\t\t});\n\t},\n\n\t/**\n\t * Inserts a new record in the specified data store.\n\t * @param {string} storeName\n\t * @param {object} data\n\t * @returns {Promise<void>}\n\t * !static insert (storeName: string, data: object) : Promise<void>;\n\t */\n\tinsert: function (storeName, data)\n\t{\n\t\tthis.ensureConnected();\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tlet store = this.db.transaction(storeName, 'readwrite').objectStore(storeName);\n\t\t\tlet request = store.add(data);\n\n\t\t\trequest.onsuccess = (evt) => {\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\trequest.onerror = (evt) => {\n\t\t\t\treject(evt.target.error);\n\t\t\t};\n\t\t});\n\t}\n};\n\n//!/class\n","\n//!class geo\n\nconst geo =\n{\t\n    E_NONE:\t\t\t\t\t0x0000,\n    E_PERMISSION_DENIED:\t0x8001,\n    E_POSITION_UNAVAILABLE:\t0x8002,\n    E_TIMEOUT:\t\t\t\t0x8003,\n    E_UNSUPPORTED:\t\t\t0x8004,\n    E_UNKNOWN:\t\t\t\t0x8009,\n\n    supported: null,\n    status: null,\n\n    indicatorOn: function() {\n        global.document.documentElement.classList.add('busy-geo');\n    },\n\n    indicatorOff: function() {\n        global.document.documentElement.classList.remove('busy-geo');\n    },\n\n    /**\n     * Initializes the geolocation interface. Returns boolean indicating whether geolocation\n     * is supported on the device.\n     * @returns {boolean}\n     * !static init() : boolean;\n     */\n    init: function() {\n        this.supported = navigator.geolocation ? true : false;\n        return this.supported;\n    },\n\n    /**\n     * Single-shot positioning operation. While the geolocation operation is in progress, the `.busy-geo` CSS class\n     * will be set in the `html` element. You can use this to display a spinner or other indicator.\n     * @returns {Promise<GeolocationPosition>}\n     * !static getCurrentPosition() : Promise<GeolocationPosition>;\n     */\n    getCurrentPosition: function()\n    {\n        if (this.supported === null)\n            this.init();\n\n        let status = this.status = { cancelled: false };\n\n        return new Promise (async (resolve, reject) =>\n        {\n            this.indicatorOn();\n\n            if (!this.supported)\n            {\n                if (this.status === status)\n                    this.status = null;\n\n                if (!status.cancelled) this.indicatorOff();\n\n                reject ({ status, code: geo.E_UNSUPPORTED, message: 'Geolocation is not supported on this device.' });\n                return;\n            }\n\n            navigator.geolocation.getCurrentPosition (\n                (data) => {\n                    if (this.status === status)\n                        this.status = null;\n\n                    if (!status.cancelled) this.indicatorOff();\n\n                    data.status = status;\n                    resolve(data);\n                },\n\n                (err) => {\n                    if (this.status === status)\n                        this.status = null;\n\n                    if (!status.cancelled) this.indicatorOff();\n\n                    let code;\n                    switch (err.code)\n                    {\n                        case 0x01:\tcode = geo.E_PERMISSION_DENIED;\n                                    break;\n                        case 0x02:\tcode = geo.E_POSITION_UNAVAILABLE;\n                                    break;\n                        case 0x03:\tcode = geo.E_TIMEOUT;\n                                    break;\n                        default:\tcode = geo.E_UNKNOWN;\n                                    err.message = 'Unable to get the current location.';\n                                    break;\n                    }\n\n                    reject({ status, code, message: err.message });\n                },\n\n                { enableHighAccuracy: true }\n            );\n        });\n    },\n\n    /**\n     * Cancels the active positioning operation (if any).\n     * !static cancel() : void;\n     */\n    cancel: function()\n    {\n        if (this.status === null)\n            return;\n\n        if (!this.status.cancelled) this.indicatorOff();\n\n        this.status.cancelled = true;\n        this.status = null;\n    }\n};\n\n//!/class\n\nexport default geo;\n","\nimport * as rizaSignal from 'riza-signal';\n\nexport const Signal = rizaSignal.Signal;\nexport const signal = rizaSignal.signal;\nexport const expr = rizaSignal.expr;\nexport const watch = rizaSignal.watch;\nexport const validator = rizaSignal.validator;\n\n/**\n * Helper functions used by the JSX transformer.\n */\nexport const helpers =\n{\n    /**\n     * Special object to tag dynamic attributes.\n     */\n    DYNAMIC: { },\n\n    /**\n     * Sets the value of a property inside an object.\n     * @param {Element|Text} root\n     * @param {string[]} path\n     * @param {number} lastIndex\n     * @param {object} value\n     */\n    setValue: function (root, path, lastIndex, value)\n    {\n        // Rename properties `class`, `classList` to `className`.\n        if (path[0] === 'class' || path[0] === 'classList')\n            path[0] = 'className';\n\n        if (path.length > 1 && path[0] === 'trait')\n        {\n            switch (path[1])\n            {\n                case 'value':\n                    root.onchange = (e) => value.set(e.currentTarget.value);\n                    watch([value], (value) => root.value = value);\n                    break;\n\n                case 'input':\n                    root.oninput = (e) => value.set(e.currentTarget.value);\n                    watch([value], (value) => root.value = value);\n                    break;\n\n                case 'checked':\n                    root.onchange = (e) => value.set(e.currentTarget.checked);\n                    watch([value], (value) => root.checked = value);\n                    break;\n\n                case 'selected':\n                    root.onchange = (e) => value.set(e.currentTarget.selected);\n                    watch([value], (value) => root.selected = value);\n                    break;\n\n                default:\n                    console.error('Unknown trait: ' + path[1]);\n                    break;\n            }\n\n            return;\n        }\n\n        // Object used to set `style` or `class` attribute.\n        if (path.length === 1 && typeof(value) === 'object')\n        {\n            switch (path[0])\n            {\n                case 'style':\n                    for (let i in value)\n                        watch([i, value[i]], (i, value) => root.style[i] = value);\n                    return;\n\n                case 'className':\n                    if (value instanceof Array) {\n                        watch([value], (value) => {\n                            root.className = '';\n                            for (let i in value)\n                                root.classList.add(value[i]);\n                        });\n                    }\n                    else {\n                        for (let i in value)\n                            watch([i, value[i]], (i, value) => root.classList[value == true ? 'add' : 'remove'](i));\n                    }\n                    return;\n            }\n        }\n\n        // Specific CSS class such as `class:hidden`.\n        if (path.length === 2 && path[0] === 'className')\n        {\n            watch([path[1], value], (i, value) => root.classList[value == true ? 'add' : 'remove'](i));\n            return;\n        }\n\n        // Any other attribute/property.\n        for (let i = 0; i < lastIndex && root; i++)\n            root = root[path[i]];\n\n        if (!root) return;\n\n        let name = path[lastIndex];\n        if (name.startsWith('on')) name = name.toLowerCase();\n\n        watch([name, value], (name, value) => root[name] = value);\n    },\n\n    /**\n     * Creates a setter for a specified path inside an object.\n     * @param {string[]} path \n     * @returns {(root: Element|Text, value: object) => void}\n     */\n    createSetter: function (path)\n    {\n        const n = path.length-1;\n\n        return function (root, value) {\n            helpers.setValue(root, path, n, value);\n        };\n    },\n\n    /**\n     * Copies the event listeners and custom properties from `node` to `newNode`.\n     * @param {Element} node\n     * @param {Element} newNode\n     * @returns {Element}\n     */\n    copyProps: function (node, newNode)\n    {\n        // Copy property event listeners.\n        for (let propName in node)\n        {\n            if (!propName.startsWith('on') || propName.startsWith('onmoz') || !node[propName])\n                continue;\n\n            newNode[propName] = node[propName];\n        }\n\n        // Copy custom properties.\n        for (let propName of Object.getOwnPropertyNames(node))\n        {\n            if (~~propName == propName) // Skip numeric properties.\n                continue;\n\n            newNode[propName] = node[propName];\n        }\n\n        return newNode;\n    },\n\n    /**\n     * Clones an element node and ensures certain properties are copied over.\n     * @param {Element} node\n     * @param {boolean} [deep=false]\n     */\n    cloneNode: function (node, deep=false)\n    {\n        if (!deep && node.isCustom === true)\n            throw new Error ('cloneNode only available as deep clone for custom elements.');\n\n        if (deep && node.isCustom === true)\n            return node.cloneNodeCustom();\n\n        let newNode = node.cloneNode();\n\n        if (deep) {\n            for (let childNode of node.childNodes)\n                newNode.appendChild(helpers.cloneNode(childNode, true));\n        }\n\n        // Copy handlers and properties.\n        helpers.copyProps(node, newNode);\n\n        // Execute `oncreated` handler.\n        if ('oncreated' in newNode)\n            newNode.oncreated(newNode);\n\n        return newNode;\n    },\n\n    /**\n     * Ensures the provided value is a node or a node-compatible (such as an array of nodes).\n     * @param {Node|Array<Node|string>|string} value\n     * @param {boolean} [cloneNode=false]\n     * @returns {Node|Array<Node>}\n     */\n    ensureNode: function (value, cloneNode=false)\n    {\n        if (value instanceof Array) {\n            for (let i = 0; i < value.length; i++)\n                value[i] = helpers.ensureNode(value[i], cloneNode);\n            return value;\n        }\n\n        if (!(value instanceof Node))\n            return document.createTextNode(value);\n\n        return cloneNode ? helpers.cloneNode(value, true) : value;\n    },\n\n    /**\n     * Replaces the specified refNode by a newNode and returns the new reference node.\n     * @param {Node} parent\n     * @param {Node|Array<Node>} refNode\n     * @param {Node|Array<Node>} newNode\n     * @returns {Node|Array<Node>}\n     */\n    replaceNode: function (parent, refNode, newNode, appendChild=false)\n    {\n        // When refNode is an array, remove all those nodes but leave just one for reference.\n        if (refNode instanceof Array)\n        {\n            while (refNode.length > 1) {\n                let tmp = refNode.shift();\n                if (tmp.parentElement === parent)\n                    tmp.remove();\n            }\n            refNode = refNode.shift();\n        }\n\n        let newRefNode = newNode;\n        let firstNode = newNode;\n\n        // When newNode is an array, create a document fragment for faster append of all children.\n        if (newNode instanceof Array)\n        {\n            let frag = document.createDocumentFragment();\n            newRefNode = [];\n\n            if (newNode.length == 0)\n                newNode = [document.createTextNode('')];\n\n            for (let i = 0; i < newNode.length; i++) {\n                newRefNode.push(newNode[i]);\n                frag.appendChild(newNode[i]);\n            }\n\n            firstNode = newNode[0];\n            newNode = frag;\n        }\n\n        if (appendChild === false)\n        {\n            refNode.replaceWith(newNode);\n\n            let tmpNode = document.createComment('');\n            firstNode.parentElement.insertBefore(tmpNode, firstNode);\n\n            if (!(newRefNode instanceof Array))\n                newRefNode = [ newRefNode ];\n\n            newRefNode.push(tmpNode);\n        }\n        else\n            refNode.appendChild(newNode);\n\n        return newRefNode;\n    },\n\n    /**\n     * Creates a DOM node replacer.\n     * @param {Element|Text|Array<Element|Text>} refNode\n     * @returns {(root: Element|Text, newNode: any) => void}\n     */\n    createReplacer: function (refNode)\n    {\n        return function (root, newNode) {\n            refNode = helpers.replaceNode(root, refNode, helpers.ensureNode(newNode));\n        };\n    },\n\n    /**\n     * Creates a function that builds an element.\n     * @param {string} tagName - Tag of the element to create.\n     * @param {array} attributes - Array of name-value pairs. When dynamic attributes are present use the helpers.DYNAMIC as value placeholder.\n     * @param {Array<Element|Text|string|null>} children - When dynamic children are present use the placeholder `null`.\n     * @returns { (runtimeAttributeValues: Array<string>, runtimeChildren: Array<Element|Text|Array<Element|Text>>) => HTMLElement }\n     */\n    create: function (tagName, attributes, children)\n    {\n        // Attach static attributes.\n        let baseElement = document.createElement(tagName);\n        let dynamicAttributes = [];\n\n        for (let i = 0; i < attributes.length; i += 2)\n        {\n            let path = null;\n\n            if (attributes[i].indexOf(':') !== -1)\n                path = attributes[i].split(':');\n            else\n                path = [attributes[i]];\n\n            if (attributes[i+1] !== helpers.DYNAMIC) {\n                helpers.setValue(baseElement, path, path.length-1, attributes[i+1]);\n                continue;\n            }\n\n            dynamicAttributes.push(helpers.createSetter(path));\n        }\n\n        // Attach static children.\n        let dynamicChildrenIndices = [];\n        let dynamicBuild = false;\n        let firstBuild = true;\n\n        // Get indices of dynamic children and detect if any child is a custom element.\n        for (let i in children)\n        {\n            if (children[i].isCustom === true)\n                dynamicBuild = true;\n\n            if (children[i] === helpers.DYNAMIC)\n                dynamicChildrenIndices.push(i);\n        }\n\n        // Create and return the element builder fuction.\n        const N = dynamicAttributes.length;\n        const M = dynamicChildrenIndices.length;\n\n        return function (runtimeDynamicAttributes, runtimeChildren, spreadAttributes=null)\n        {\n            const getElement = (runtimeChildren, originalElement=null) =>\n            {\n                let elem = null;\n\n                if (firstBuild || dynamicBuild)\n                {\n                    let target = dynamicBuild ? helpers.cloneNode(baseElement) : baseElement;\n\n                    for (let i in children)\n                    {\n                        if (children[i] instanceof Array)\n                            throw new Error('Document fragments not fully supported!');\n\n                        helpers.replaceNode(target, target, helpers.ensureNode(children[i], true), true);\n                    }\n\n                    if (dynamicBuild) elem = target;\n                    firstBuild = false;\n                }\n\n                if (elem === null)\n                    elem = helpers.cloneNode(baseElement, true);\n\n                const hadOnCreated = 'oncreated' in elem;\n                const dynamicChildren = dynamicChildrenIndices.map(idx => helpers.createReplacer(elem.childNodes[idx]));\n\n                for (let i = 0; i < N; i++)\n                    dynamicAttributes[i](elem, runtimeDynamicAttributes[i]);\n\n                for (let i = 0; i < M; i++)\n                    watch([runtimeChildren[i], i], (val, i) => dynamicChildren[i](elem, val));\n\n                if (spreadAttributes !== null)\n                {\n                    for (let attributes of spreadAttributes)\n                    {\n                        for (let i in attributes)\n                        {\n                            let path = null;\n                            if (i.indexOf(':') !== -1)\n                                path = i.split(':');\n                            else\n                                path = [ i ];\n\n                            helpers.setValue(elem, path, path.length-1, attributes[i]);\n                        }\n                    }\n                }\n\n                if (originalElement !== null) {\n                    helpers.copyProps(originalElement, elem);\n                }\n\n                if (!hadOnCreated && 'oncreated' in elem)\n                    elem.oncreated(elem);\n\n                elem.isCustom = true;\n\n                elem.cloneNode = () => {\n                    throw new Error ('Use of cloneNode is forbidden in custom elements, use cloneNodeCustom instead.');\n                };\n\n                elem.cloneNodeCustom = () => {\n                    return getElement(runtimeChildren.map(e => e instanceof Node && e.isCustom === true ? e.cloneNodeCustom() : e), elem);\n                };\n\n                return elem;\n            };\n\n            return getElement(runtimeChildren);\n        };\n    }\n};\n"],"names":["Rinn","$k7heJ$Rinn","Class","$k7heJ$Class","Event","$k7heJ$Event","EventDispatcher","$k7heJ$EventDispatcher","Model","$k7heJ$Model","ModelList","$k7heJ$ModelList","Schema","$k7heJ$Schema","Flattenable","$k7heJ$Flattenable","Collection","$k7heJ$Collection","Template","$k7heJ$Template","$k7heJ$base64","signal","$k7heJ$signal","expr","$k7heJ$expr","watch","$k7heJ$watch","validator","$k7heJ$validator","$parcel$global","globalThis","$7718a52dfca15325$var$_Router","Route","extend","routeRegex","value","params","args","s_args","active","changed","__ctor","route","_super","_compileRoute","replace","m","exec","push","addHandler","handler","unrouted","context","addEventListener","removeHandler","removeEventListener","dispatch","matches","match","dispatchEvent","str","i","length","routes","sortedRoutes","ignoreHashChangeEvent","location","init","alreadyAttached","onhashchange","onLocationChanged","bind","hash","substring","split","refresh","setRoute","silent","realLocation","addRoute","onRoute","onUnroute","sort","a","b","getRoute","addRoutes","removeRoute","undefined","removeRoutes","cLocation","pLocation","k","state","j","rLocation","substr","indexOf","lastIndexOf","trim","navigate","$5808f050ebbd5b77$var$elementPrototypes","$5808f050ebbd5b77$var$elementClasses","$5808f050ebbd5b77$var$Element","eid","isRoot","root","isReady","readyReenter","readyLocked","modelt","model","contents","events","evt","continuePropagation","source","_long_press","elem","setTimeout","dx","_pos_fx","_pos_sx","dy","_pos_fy","_pos_sy","Math","sqrt","dispatchOn","clientX","clientY","touches","clearTimeout","opts","dataset","action","longPress","enter","_list_watch","_list_visible","_list_attr","_list_property","style","display","random","toString","tmp","setModel","Object","keys","reverse","forEach","debug","console","log","tagName","parentElement","bindEvents","setInnerHTML","toLowerCase","appendChild","document","createElement","markReady","ready","rready","list","collectWatchers","ref","getFieldByPath","onready","findCustomParent","checkReady","rootReady","getRoot","onRefAdded","onrootready","remove","childNodes","result","evaluate","XPathResult","ANY_TYPE","iterateNext","path","shift","findRoot","update","ensureTypeOf","onModelPreChanged","onModelPropertyChanging","onModelPropertyPreChanged","onModelPropertyRemoved","setNamespace","getModel","addClass","classString","classList","add","removeClass","setStyle","styleString","name","toUpperCase","getWidth","getBoundingClientRect","width","getHeight","height","evtstr","hdl","typeOf","selector","listen","keyCode","bindRoutes","routeStr","unbindRoutes","_eventHandler","target","HTMLElement","call","detail","elems","querySelectorAll","preventDefault","stopPropagation","eventName","eventCatcher","eventImmediate","callback0","callback1","self","firstCapture","firstCaptureCount","queue","q","pop","removed","createEventObject","bubbles","MouseEvent","CustomEvent","propName","innerHTML","modified","_list_watch_length","_list_visible_length","_list_attr_length","_list_property_length","_template","compile","_watch","RegExp","removeAttribute","selfWatch","_visible","visible","selfVisible","_attr","attr","selfAttr","onchange","onblur","type","checked","set","getValue","onmouseup","property","selfProperty","filter","onCreated","elementConnected","onConnected","elementDisconnected","onconnected","onDisconnected","ondisconnected","element","onRefRemoved","data","get","fields","test","removeProperty","setProperty","onModelChanged","trigger","val","setValue","onModelPropertyChanged","preparePrototype","proto","__prototypePrepared","hasOwnProperty","startsWith","register","protos","__check","newElement","constructor","invokeConstructor","entries","prototype","srcElement","connectReference","flags","connectedCallback","xref","disconnectedCallback","override","clone","__init","__ready","__rready","f","dummy","customElements","define","expand","hookAppend","functionName","newFunction","hook1","hook2","unhook","hookPrepend","querySelector","contains","fn","window","querySelectorParent","$d584b999ce7bb535$var$Api","REQUEST_PACKAGE_SUPPORTED","REQ64_SUPPORTED","JSON_RESPONSE_SUPPORTED","XML_RESPONSE_SUPPORTED","INCLUDE_CREDENTIALS","UNIQUE_STAMP","DISABLE_CORS","apiUrl","useReq64","retries","headers","_requestLevel","_requestPackage","_packageData","setEndPoint","responseFilter","res","req","packageBegin","packageEnd","callback","packageSend","batch","responseCallback","rpkg","encode","encodeParams","_showProgress","apiCall","_hideProgress","response","e","documentElement","header","obj","s","FormData","encodeURIComponent","join","getUrl","url","appendParam","param","success","failure","httpMethod","relativeUrl","Date","now","options","mode","method","body","multipart","credentials","Blob","endsWith","File","append","l","fetch","then","decodeResult","catch","err","json","Promise","resolve","reject","text","DOMParser","parseFromString","blob","getBlob","base64","decode","request","post","makeUrl","$fe13c50c6c3e66d8$export$2e2bcd8739ae039","className","debounceDelay","includeCount","includeEnum","includeList","count","enum","basePath","config","assign","dataSource","forwardRequestEvent","forwardListEvent","forwardEnumEvent","prepareEvent","setSource","resume","_timeout","fetchCount","fetchEnum","fetchList","forced","item","find","fetchOne","r","delete","fetchDelete","error","setData","fetchData","$52a9c945778cbfd0$export$2e2bcd8739ae039","dataList","_callback","$0a74aeaee0e1468a$var$Easing","interpolate","src","dst","duration","easing","time","x","lastTime","dt","interpolator","curTime","t","requestAnimationFrame","Linear","IN","OUT","IN_OUT","Back","Bounce","getConst","Circ","Cubic","Expo","pow","Power","p","Quad","Quartic","Quintic","Sine","sin","cos","Step","$54865aa6b345efd5$var$Anim","initialData","stack","block","timeScale","blockTime","index","paused","finished","onFinishedCallback","onUpdatedCallback","reset","__dtor","onFinished","onUpdated","handle","initial","speed","setOutput","pause","clearInterval","setInterval","_block","_index","_blockTime","cmd","op","started","blocks","indices","blockTimes","n","_count","field","startValue","_startValue","_endValue","endValue","last","cur","table","snd","play","parallel","serial","repeat","end","restart","wait","range","rand","randt","c","$4a9d88aa888e9f4d$export$2e2bcd8739ae039","container","activeTab","baseRoute","selectTab","_routeHandler","link","href","onanimationend","showTab","tabName","previousElementSibling","nextElementSibling","_hideTabsExcept","exceptName","el","$ec74230761e3bde8$export$2e2bcd8739ae039","formElement","def","names","default","defaults","clearMarkers","filterString","messages","eval","_change","createEvent","initEvent","fireEvent","_setField","multiple","parseInt","FileList","_getField","_value","fromFileFields","files","getField","_fieldChanged","_onSuccess","message","_onFailure","errorsAt","prepend","insertBefore","nsilent","submit","strict","formAction","$9c0636c07ff6144e$export$2e2bcd8739ae039","_onActivate","show","_onDeactivate","hide","toggleVisibility","$a4fb830b2d507403$export$2e2bcd8739ae039","template","isEmpty","isDynamicTemplate","template_elem","textContent","setEmpty","setLoading","setList","isInstanceOf","onLoading","onLoaded","onItemsCleared","onItemsChanged","onItemRemoved","onItemChanged","onItemAdded","buildItem","iid","asHtml","content","html","attributes","nodeName","setAttribute","nodeValue","getData","wrap","itemId","id","position","$7061e6454a23ef4a$export$2e2bcd8739ae039","dataModel","$8586bcf20c2e54e9$export$2e2bcd8739ae039","offsetStart","offsetEnd","offset","currentPageSize","pageSize","updateOffset","onRequestPropertyChanged","onCountChanged","min","getInt","_offset","ignored","prevPage","offs","nextPage","firstPage","lastPage","clear","$a1b0099052e4f8e1$export$2e2bcd8739ae039","Error","temporalBody","i1","order","firstElementChild","_elem","replaceChild","$e668322859586774$export$2e2bcd8739ae039","disabled","lastElementChild","label","has","blank","groups","values","g","$a86ae7da7dd6c514$var$Utils","showDownload","filename","download","click","removeChild","showFilePicker","allowMultiple","accept","input","onfocus","loadAsDataUrl","file","reader","FileReader","onload","onerror","readAsDataURL","loadAsText","readAsText","loadAsArrayBuffer","readAsArrayBuffer","loadAllAsDataUrl","fileList","loadNext","size","loadImageFromUrl","image","Image","$183fe4f5f56cd7be$export$2e2bcd8739ae039","aspectRatio","imageScale0","imageScale","imageOffsX","imageOffsY","pointerA","pointerB","bounds","canvas","getContext","sx","sy","cx","cy","ix","iy","setImageUrl","setImage","setImageFile","max","render","getBlobAndUrl","quality","toBlob","URL","createObjectURL","fillStyle","beginPath","rect","fill","translate","scale","drawImage","translateImage","offsX","offsY","left","top","deltaY","changedTouches","identifier","d0","d1","d","$873d1f4710ba462f$var$geo","E_NONE","E_PERMISSION_DENIED","E_POSITION_UNAVAILABLE","E_TIMEOUT","E_UNSUPPORTED","E_UNKNOWN","supported","status","indicatorOn","indicatorOff","navigator","geolocation","getCurrentPosition","cancelled","code","enableHighAccuracy","cancel","$09e89c15f3c11137$export$e2ef10f86a8d60e8","$09e89c15f3c11137$export$dce8637ca0d755f","$09e89c15f3c11137$export$3db5d71bdb2d5499","$09e89c15f3c11137$export$956325f45c5d174a","$09e89c15f3c11137$export$cbfd4c4104bf5a27","DYNAMIC","lastIndex","currentTarget","oninput","selected","Array","createSetter","copyProps","node","newNode","getOwnPropertyNames","cloneNode","deep","isCustom","cloneNodeCustom","childNode","oncreated","ensureNode","Node","createTextNode","replaceNode","parent","refNode","newRefNode","firstNode","frag","createDocumentFragment","replaceWith","tmpNode","createComment","createReplacer","create","children","baseElement","dynamicAttributes","dynamicChildrenIndices","dynamicBuild","firstBuild","N","M","runtimeDynamicAttributes","runtimeChildren","spreadAttributes","getElement","originalElement","hadOnCreated","dynamicChildren","map","idx","$9ffb7151b8b2d038$export$55185c17a0fcbe46","$9ffb7151b8b2d038$export$db77ccec0bb4ccac","$9ffb7151b8b2d038$export$9864de54bd63ed8a","$9ffb7151b8b2d038$export$bf71da7aebe9ddc1","$9ffb7151b8b2d038$export$accd73d198d77d2f","$9ffb7151b8b2d038$export$d3568da47c78d35c","$9ffb7151b8b2d038$export$cea96571ebbff9dd","$9ffb7151b8b2d038$export$deefd61317ad2797","$9ffb7151b8b2d038$export$3abb4be70fa2c84e","Tabs","Form","Panel","List","Item","Paginator","Table","Select","ImageCropper","$9ffb7151b8b2d038$export$d2ca453b913dcdea","$9ffb7151b8b2d038$export$f932f06c7eb6abeb","db","dbName","version","upgradeCallback","indexedDB","open","onupgradeneeded","txn","transaction","oldVersion","createObjectStore","keyPath","abort","onsuccess","ensureConnected","alert","storeName","indexName","store","objectStore","openCursor","event","cursor","continue","getAll","getAllKeys","getAllUnique","fieldName","put","sysGet","full","sysPut","findOne","partial","notPartial","partialCompare","deleteAll","insert","$9ffb7151b8b2d038$export$9388fcd1771be726","$9ffb7151b8b2d038$export$eefcfe56efaaa57d","$9ffb7151b8b2d038$export$4c85e640eb41c31b","$9ffb7151b8b2d038$export$d61e24a684f9e51","$9ffb7151b8b2d038$export$ec8b666c5fe2c75a","$9ffb7151b8b2d038$export$a1edc412be3e1841","$9ffb7151b8b2d038$export$59eced47f477f85a","$9ffb7151b8b2d038$export$19342e026b58ebb7","$9ffb7151b8b2d038$export$3a9581c9ade29768","$9ffb7151b8b2d038$export$fb8073518f34e6ec","$9ffb7151b8b2d038$export$14416b8d99d47caa","Router","Element","CElement","Api","DataSource","DataList","Easing","Anim","Elements","Utils","geo","helpers"],"version":3,"file":"riza.m.js.map"}